"Identifier(type)"
"Whitespace( )"
"Identifier(bool)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Operator(%)"
"Identifier(stack)"
"Whitespace( )"
"CurlyBracesOpen({)"
"Whitespace( )"
"Identifier(lowLevelType)"
"Operator(=)"
"StringLiteral(\"i32\")"
"Whitespace( )"
"CurlyBracesClose(})"
"NewLine(\n\n)"
"Identifier(enum)"
"Whitespace( )"
"Identifier(Color)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(Red)"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(Green)"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(Blue)"
"NewLine(\n)"
"CurlyBracesClose(})"
"NewLine(\n\n)"
"Identifier(type)"
"Whitespace( )"
"Identifier(theFn1)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(A)"
"Whitespace( )"
"Operator(|)"
"Whitespace( )"
"Identifier(B)"
"Whitespace( )"
"Operator(|)"
"Whitespace( )"
"Identifier(C)"
"NewLine(\n\n)"
"Identifier(type)"
"Whitespace( )"
"Identifier(theFn1)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(fun)"
"ParenthesesOpen(()"
"ParenthesesClose())"
"Operator(->)"
"Whitespace( )"
"Identifier(void)"
"NewLine(\n)"
"Identifier(type)"
"Whitespace( )"
"Identifier(theFn2)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(fun)"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(bool)"
"ParenthesesClose())"
"Operator(->)"
"Whitespace( )"
"Identifier(void)"
"NewLine(\n)"
"Identifier(type)"
"Whitespace( )"
"Identifier(theFn3)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(fun)"
"ParenthesesOpen(()"
"Identifier(bool)"
"Comma(,)"
"Identifier(bool)"
"ParenthesesClose())"
"Operator(->)"
"Whitespace( )"
"Identifier(void)"
"NewLine(\n)"
"Identifier(type)"
"Whitespace( )"
"Identifier(theFn4)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(fun)"
"Whitespace(   )"
"ParenthesesOpen(()"
"Identifier(x)"
"Operator(:)"
"Whitespace( )"
"Identifier(bool)"
"ParenthesesClose())"
"Operator(->)"
"Whitespace( )"
"Identifier(void)"
"NewLine(\n)"
"Identifier(type)"
"Whitespace( )"
"Identifier(theFn5)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(fun)"
"ParenthesesOpen(()"
"Whitespace( )"
"Identifier(x)"
"Whitespace( )"
"Operator(:)"
"Whitespace( )"
"Identifier(bool)"
"Whitespace( )"
"Comma(,)"
"Whitespace( )"
"Identifier(b)"
"Operator(:)"
"Whitespace( )"
"Identifier(i32)"
"ParenthesesClose())"
"Operator(->)"
"Identifier(void)"
"NewLine(\n)"
"Identifier(type)"
"Whitespace( )"
"Identifier(theFn6)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(fun)"
"ParenthesesOpen(()"
"Whitespace( )"
"Identifier(x)"
"Whitespace( )"
"Operator(:)"
"Whitespace( )"
"Identifier(bool)"
"Whitespace( )"
"Comma(,)"
"Whitespace(  )"
"Identifier(i32)"
"Whitespace( )"
"ParenthesesClose())"
"Whitespace( )"
"Operator(->)"
"Identifier(i32)"
"NewLine(\n\n)"
"Identifier(private)"
"Whitespace( )"
"Identifier(fun)"
"Whitespace( )"
"Identifier(compare)"
"ParenthesesOpen(()"
"Identifier(a)"
"Operator(:)"
"Whitespace( )"
"Identifier(Color)"
"Comma(,)"
"Whitespace( )"
"Identifier(b)"
"Operator(:)"
"Whitespace( )"
"Identifier(Color)"
"ParenthesesClose())"
"Operator(:)"
"Whitespace( )"
"Identifier(bool)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(a)"
"Whitespace( )"
"Operator(==)"
"Whitespace( )"
"Identifier(b)"
"NewLine(\n)"
"CurlyBracesClose(})"
"NewLine(\n\n)"
"Identifier(fun)"
"Whitespace( )"
"Identifier(main)"
"ParenthesesOpen(()"
"ParenthesesClose())"
"Operator(:)"
"Whitespace( )"
"Identifier(i32)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(compare)"
"ParenthesesOpen(()"
"Identifier(Red)"
"Comma(,)"
"Whitespace( )"
"Identifier(Green)"
"ParenthesesClose())"
"NewLine(\n\n)"
"Identifier(var)"
"Whitespace( )"
"Identifier(test)"
"Operator(:)"
"Whitespace( )"
"Identifier(fun)"
"ParenthesesOpen(()"
"ParenthesesClose())"
"Whitespace( )"
"Operator(->)"
"Whitespace( )"
"Identifier(void)"
"Whitespace( )"
"Operator(|)"
"Whitespace( )"
"Identifier(fun)"
"ParenthesesOpen(()"
"Whitespace( )"
"Identifier(a)"
"Whitespace( )"
"Operator(:)"
"Whitespace( )"
"Identifier(i32)"
"ParenthesesClose())"
"Whitespace( )"
"Operator(->)"
"Whitespace( )"
"Identifier(i32)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"NumberLiteral(1)"
"NewLine(\n)"
"Identifier(var)"
"Whitespace( )"
"Identifier(test)"
"Operator(:)"
"Whitespace( )"
"Identifier(a)"
"Operator(|)"
"Identifier(b)"
"Operator(&)"
"Whitespace( )"
"Identifier(c)"
"Whitespace( )"
"Operator(|)"
"Whitespace( )"
"Identifier(d)"
"Whitespace( )"
"Operator(&)"
"Whitespace( )"
"Identifier(b)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"NumberLiteral(1)"
"NewLine(\n)"
"Identifier(var)"
"Whitespace( )"
"Identifier(test)"
"Operator(:)"
"Whitespace( )"
"Identifier(_)"
"Operator(|)"
"Identifier(_)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"NumberLiteral(1)"
"NewLine(\n)"
"Identifier(var)"
"Whitespace( )"
"Identifier(test)"
"Operator(:)"
"Whitespace( )"
"Identifier(fun)"
"ParenthesesOpen(()"
"ParenthesesClose())"
"Whitespace( )"
"Operator(->)"
"Whitespace( )"
"Identifier(void)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"NumberLiteral(1)"
"NewLine(\n)"
"Identifier(var)"
"Whitespace( )"
"Identifier(test)"
"Operator(:)"
"Whitespace( )"
"Identifier(fun)"
"ParenthesesOpen(()"
"ParenthesesClose())"
"Whitespace( )"
"Operator(->)"
"Whitespace( )"
"Identifier(void)"
"Whitespace( )"
"Operator(&)"
"Whitespace( )"
"Identifier(fun)"
"ParenthesesOpen(()"
"Identifier(i32)"
"ParenthesesClose())"
"Whitespace( )"
"Operator(->)"
"Whitespace( )"
"Identifier(i32)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"NumberLiteral(1)"
"NewLine(\n\n)"
"Identifier(var)"
"Whitespace( )"
"Identifier(test)"
"Operator(:)"
"Whitespace( )"
"Identifier(a)"
"Operator(|)"
"Identifier(b)"
"Operator(&)"
"Whitespace( )"
"Identifier(c)"
"Whitespace( )"
"Operator(|)"
"Whitespace( )"
"Identifier(d)"
"Whitespace( )"
"Operator(&)"
"Whitespace( )"
"Identifier(b)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"NumberLiteral(1)"
"NewLine(\n)"
"Identifier(var)"
"Whitespace( )"
"Identifier(test)"
"Operator(:)"
"Whitespace( )"
"Identifier(a)"
"Operator(|)"
"ParenthesesOpen(()"
"Identifier(b)"
"Operator(&)"
"Whitespace( )"
"Identifier(c)"
"ParenthesesClose())"
"Whitespace( )"
"Operator(|)"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(d)"
"Whitespace( )"
"Operator(&)"
"Whitespace( )"
"Identifier(b)"
"ParenthesesClose())"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"NumberLiteral(1)"
"NewLine(\n)"
"Identifier(var)"
"Whitespace( )"
"Identifier(test)"
"Operator(:)"
"Whitespace( )"
"Identifier(fun)"
"ParenthesesOpen(()"
"Identifier(a)"
"Operator(:)"
"Whitespace( )"
"Identifier(i32)"
"ParenthesesClose())"
"Whitespace( )"
"Operator(->)"
"Whitespace( )"
"Identifier(void)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"NumberLiteral(1)"
"NewLine(\n)"
"Identifier(var)"
"Whitespace( )"
"Identifier(test)"
"Operator(:)"
"Whitespace( )"
"Identifier(fun)"
"ParenthesesOpen(()"
"Identifier(a)"
"Operator(:)"
"Whitespace( )"
"Identifier(i32)"
"Comma(,)"
"Identifier(b)"
"Operator(:)"
"Whitespace( )"
"Identifier(i32)"
"ParenthesesClose())"
"Whitespace( )"
"Operator(->)"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(void)"
"Whitespace( )"
"Operator(|)"
"Whitespace( )"
"Identifier(i32)"
"ParenthesesClose())"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"NumberLiteral(1)"
"NewLine(\n)"
"Identifier(var)"
"Whitespace( )"
"Identifier(test)"
"Operator(:)"
"Whitespace( )"
"Identifier(fun)"
"ParenthesesOpen(()"
"Identifier(i32)"
"Comma(,)"
"Identifier(i32)"
"ParenthesesClose())"
"Whitespace( )"
"Operator(->)"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(void)"
"Whitespace( )"
"Operator(|)"
"Whitespace( )"
"Identifier(i32)"
"ParenthesesClose())"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"NumberLiteral(1)"
"NewLine(\n\n)"
"Identifier(enum)"
"Whitespace( )"
"Identifier(Number)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(Infinity)"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(NDet)"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(Real)"
"ParenthesesOpen(()"
"Identifier(number)"
"Operator(:)"
"Whitespace( )"
"Identifier(f32)"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(Natural)"
"ParenthesesOpen(()"
"Identifier(number)"
"Operator(:)"
"Whitespace( )"
"Identifier(i32)"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(Complex)"
"ParenthesesOpen(()"
"Identifier(real)"
"Operator(:)"
"Whitespace( )"
"Identifier(f32)"
"Comma(,)"
"Whitespace( )"
"Identifier(imaginary)"
"Operator(:)"
"Whitespace( )"
"Identifier(f32)"
"ParenthesesClose())"
"NewLine(\n)"
"CurlyBracesClose(})"
"EndOfFile"