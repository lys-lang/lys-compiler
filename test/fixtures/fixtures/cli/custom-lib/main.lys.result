"Keyword(import)"
"Whitespace( )"
"Identifier(support)"
"Operator(::)"
"Identifier(env)"
"NewLine(\n)"
"Keyword(import)"
"Whitespace( )"
"Identifier(support)"
"Operator(::)"
"Identifier(test)"
"NewLine(\n\n)"
"LineComment(// in order to load this library, we must tell the compiler `--lib lib.js`\n)"
"NewLine(\n)"
"MacroDecoration(#[)"
"Identifier(extern)"
"Whitespace( )"
"StringLiteral(\"myLib\")"
"Whitespace( )"
"StringLiteral(\"getNumber\")"
"VectorClose(])"
"NewLine(\n)"
"Keyword(fun)"
"Whitespace( )"
"Identifier(getNumber)"
"ParenthesesOpen(()"
"ParenthesesClose())"
"Operator(:)"
"Whitespace( )"
"Identifier(i32)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(panic)"
"ParenthesesOpen(()"
"ParenthesesClose())"
"NewLine(\n\n)"
"MacroDecoration(#[)"
"Identifier(export)"
"VectorClose(])"
"NewLine(\n)"
"Keyword(fun)"
"Whitespace( )"
"Identifier(test)"
"ParenthesesOpen(()"
"ParenthesesClose())"
"Operator(:)"
"Whitespace( )"
"Identifier(void)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(START)"
"ParenthesesOpen(()"
"StringLiteral(\"Testing custom lib\")"
"ParenthesesClose())"
"NewLine(\n\n)"
"Whitespace(  )"
"Keyword(val)"
"Whitespace( )"
"Identifier(num)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(getNumber)"
"ParenthesesOpen(()"
"ParenthesesClose())"
"NewLine(\n\n)"
"Whitespace(  )"
"Identifier(printf)"
"ParenthesesOpen(()"
"StringLiteral(\"    myLib.getNumber() = %d\")"
"Comma(,)"
"Whitespace( )"
"Identifier(num)"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(mustEqual)"
"ParenthesesOpen(()"
"Identifier(num)"
"Comma(,)"
"Whitespace( )"
"NumberLiteral(1337)"
"Comma(,)"
"Whitespace( )"
"StringLiteral(\"1337 assertion name\")"
"ParenthesesClose())"
"NewLine(\n\n)"
"Whitespace(  )"
"Identifier(END)"
"ParenthesesOpen(()"
"ParenthesesClose())"
"NewLine(\n)"
"CurlyBracesClose(})"
"EndOfFile"