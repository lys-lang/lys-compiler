"MultiLineComment(/** Number of alignment bits. */)"
"NewLine(\n)"
"Keyword(val)"
"Whitespace( )"
"Identifier(AL_BITS)"
"Operator(:)"
"Whitespace( )"
"Identifier(i32)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"NumberLiteral(3)"
"NewLine(\n\n)"
"MultiLineComment(/** Number of possible alignment values. */)"
"NewLine(\n)"
"Keyword(val)"
"Whitespace( )"
"Identifier(AL_SIZE)"
"Operator(:)"
"Whitespace( )"
"Identifier(i32)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"NumberLiteral(1)"
"Whitespace( )"
"Operator(<<)"
"Whitespace( )"
"Identifier(AL_BITS)"
"NewLine(\n\n)"
"MultiLineComment(/** Mask to obtain just the alignment bits. */)"
"NewLine(\n)"
"Keyword(val)"
"Whitespace( )"
"Identifier(AL_MASK)"
"Operator(:)"
"Whitespace( )"
"Identifier(i32)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(AL_SIZE)"
"Whitespace( )"
"Operator(-)"
"Whitespace( )"
"NumberLiteral(1)"
"NewLine(\n\n)"
"MultiLineComment(/** Maximum 32-bit allocation size. */)"
"NewLine(\n)"
"Keyword(val)"
"Whitespace( )"
"Identifier(MAX_SIZE_32)"
"Operator(:)"
"Whitespace( )"
"Identifier(i32)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"NumberLiteral(1)"
"Whitespace( )"
"Operator(<<)"
"Whitespace( )"
"NumberLiteral(30)"
"Whitespace( )"
"LineComment(// 1G\n)"
"NewLine(\n)"
"Keyword(val)"
"Whitespace( )"
"Identifier(HEAP_BASE)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"NumberLiteral(0)"
"NewLine(\n\n)"
"Keyword(struct)"
"Whitespace( )"
"Identifier(asd)"
"ParenthesesOpen(()"
"ParenthesesClose())"
"NewLine(\n\n)"
"Keyword(private)"
"Whitespace( )"
"Keyword(var)"
"Whitespace( )"
"Identifier(startOffset)"
"Operator(:)"
"Whitespace( )"
"Identifier(i32)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(HEAP_BASE)"
"Whitespace( )"
"Operator(+)"
"Whitespace( )"
"Identifier(AL_MASK)"
"ParenthesesClose())"
"Whitespace( )"
"Operator(&)"
"Whitespace( )"
"Operator(~)"
"Identifier(AL_MASK)"
"NewLine(\n)"
"Keyword(private)"
"Whitespace( )"
"Keyword(var)"
"Whitespace( )"
"Identifier(offset)"
"Operator(:)"
"Whitespace( )"
"Identifier(i32)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(startOffset)"
"NewLine(\n\n)"
"Keyword(private)"
"Whitespace( )"
"Keyword(var)"
"Whitespace( )"
"Identifier(lastPtr)"
"Operator(:)"
"Whitespace( )"
"Identifier(i32)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"NumberLiteral(0)"
"NewLine(\n\n)"
"Keyword(private)"
"Whitespace( )"
"Keyword(fun)"
"Whitespace( )"
"Identifier(growMemory)"
"ParenthesesOpen(()"
"Identifier(pages)"
"Operator(:)"
"Whitespace( )"
"Identifier(i32)"
"ParenthesesClose())"
"Operator(:)"
"Whitespace( )"
"Identifier(i32)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Operator(%)"
"Identifier(wasm)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(  )"
"ParenthesesOpen(()"
"Identifier(grow_memory)"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(get_local)"
"Whitespace( )"
"Identifier($pages)"
"ParenthesesClose())"
"ParenthesesClose())"
"NewLine(\n)"
"CurlyBracesClose(})"
"NewLine(\n\n)"
"Keyword(private)"
"Whitespace( )"
"Keyword(fun)"
"Whitespace( )"
"Identifier(currentMemory)"
"ParenthesesOpen(()"
"ParenthesesClose())"
"Operator(:)"
"Whitespace( )"
"Identifier(i32)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Operator(%)"
"Identifier(wasm)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(  )"
"ParenthesesOpen(()"
"Identifier(current_memory)"
"ParenthesesClose())"
"NewLine(\n)"
"CurlyBracesClose(})"
"NewLine(\n\n)"
"Keyword(private)"
"Whitespace( )"
"Keyword(fun)"
"Whitespace( )"
"Identifier(max)"
"ParenthesesOpen(()"
"Identifier(a)"
"Operator(:)"
"Whitespace( )"
"Identifier(i32)"
"Comma(,)"
"Whitespace( )"
"Identifier(b)"
"Operator(:)"
"Whitespace( )"
"Identifier(i32)"
"ParenthesesClose())"
"Operator(:)"
"Whitespace( )"
"Identifier(i32)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Keyword(if)"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(a)"
"Whitespace( )"
"Operator(>)"
"Whitespace( )"
"Identifier(b)"
"ParenthesesClose())"
"Whitespace( )"
"Identifier(a)"
"Whitespace( )"
"Keyword(else)"
"Whitespace( )"
"Identifier(b)"
"NewLine(\n\n)"
"MacroDecoration(#[)"
"Identifier(inline)"
"VectorClose(])"
"NewLine(\n)"
"Keyword(fun)"
"Whitespace( )"
"Identifier(allocBytes)"
"ParenthesesOpen(()"
"Identifier(size)"
"Operator(:)"
"Whitespace( )"
"Identifier(i32)"
"ParenthesesClose())"
"Operator(:)"
"Whitespace( )"
"Identifier(bytes)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Operator(%)"
"Identifier(wasm)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(  )"
"ParenthesesOpen(()"
"Identifier(local)"
"Whitespace( )"
"Identifier($allocation)"
"Whitespace( )"
"Identifier(i32)"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"ParenthesesOpen(()"
"Identifier(set_local)"
"Whitespace( )"
"Identifier($allocation)"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(call)"
"Whitespace( )"
"Identifier($malloc)"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(get_local)"
"Whitespace( )"
"Identifier($size)"
"ParenthesesClose())"
"ParenthesesClose())"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"ParenthesesOpen(()"
"Identifier(i32)"
"Operator(.)"
"Identifier(store)"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(get_local)"
"Whitespace( )"
"Identifier($allocation)"
"ParenthesesClose())"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(get_local)"
"Whitespace( )"
"Identifier($size)"
"ParenthesesClose())"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"ParenthesesOpen(()"
"Identifier(i64)"
"Operator(.)"
"Identifier(or)"
"NewLine(\n)"
"Whitespace(    )"
"ParenthesesOpen(()"
"Identifier(i64)"
"Operator(.)"
"Identifier(extend_s)"
"Operator(/)"
"Identifier(i32)"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(get_local)"
"Whitespace( )"
"Identifier($allocation)"
"ParenthesesClose())"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(    )"
"ParenthesesOpen(()"
"Identifier(i64)"
"Operator(.)"
"Identifier(shl)"
"NewLine(\n)"
"Whitespace(      )"
"ParenthesesOpen(()"
"Identifier(i64)"
"Operator(.)"
"Identifier(extend_s)"
"Operator(/)"
"Identifier(i32)"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(i32)"
"Operator(.)"
"Keyword(const)"
"Whitespace( )"
"NumberLiteral(0)"
"ParenthesesClose())"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(      )"
"ParenthesesOpen(()"
"Identifier(i64)"
"Operator(.)"
"Keyword(const)"
"Whitespace( )"
"NumberLiteral(32)"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(    )"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"ParenthesesClose())"
"NewLine(\n)"
"CurlyBracesClose(})"
"NewLine(\n\n)"
"MacroDecoration(#[)"
"Identifier(inline)"
"VectorClose(])"
"NewLine(\n)"
"MacroDecoration(#[)"
"Identifier(export)"
"Whitespace( )"
"StringLiteral(\"calloc\")"
"VectorClose(])"
"NewLine(\n)"
"MacroDecoration(#[)"
"Identifier(explicit)"
"VectorClose(])"
"NewLine(\n)"
"Keyword(fun)"
"Whitespace( )"
"Identifier(calloc)"
"ParenthesesOpen(()"
"Identifier(itemCount)"
"Operator(:)"
"Whitespace( )"
"Identifier(i32)"
"Comma(,)"
"Whitespace( )"
"Identifier(itemSize)"
"Operator(:)"
"Whitespace( )"
"Identifier(i32)"
"ParenthesesClose())"
"Operator(:)"
"Whitespace( )"
"Identifier(i32)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(  )"
"Keyword(val)"
"Whitespace( )"
"Identifier(size)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(itemCount)"
"Whitespace( )"
"Operator(*)"
"Whitespace( )"
"Identifier(itemSize)"
"NewLine(\n)"
"Whitespace(  )"
"Keyword(val)"
"Whitespace( )"
"Identifier($ret)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(malloc)"
"ParenthesesOpen(()"
"Identifier(size)"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(memset)"
"ParenthesesOpen(()"
"Identifier($ret)"
"Comma(,)"
"Whitespace( )"
"Identifier(size)"
"Comma(,)"
"Whitespace( )"
"NumberLiteral(0)"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"Identifier($ret)"
"NewLine(\n)"
"CurlyBracesClose(})"
"NewLine(\n\n)"
"Keyword(fun)"
"Whitespace( )"
"Identifier(malloc)"
"ParenthesesOpen(()"
"Identifier(size)"
"Operator(:)"
"Whitespace( )"
"Identifier(i32)"
"ParenthesesClose())"
"Operator(:)"
"Whitespace( )"
"Identifier(i32)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(  )"
"Keyword(if)"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(size)"
"Whitespace( )"
"Operator(>)"
"Whitespace( )"
"NumberLiteral(0)"
"ParenthesesClose())"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(    )"
"Keyword(if)"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(size)"
"Whitespace( )"
"Operator(>)"
"Whitespace( )"
"Identifier(MAX_SIZE_32)"
"ParenthesesClose())"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(      )"
"Identifier(panic)"
"ParenthesesOpen(()"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(    )"
"CurlyBracesClose(})"
"NewLine(\n)"
"Whitespace(    )"
"Keyword(val)"
"Whitespace( )"
"Identifier(ptr)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(offset)"
"NewLine(\n)"
"Whitespace(    )"
"Keyword(val)"
"Whitespace( )"
"Identifier(newPtr)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(ptr)"
"Whitespace( )"
"Operator(+)"
"Whitespace( )"
"Identifier(size)"
"Whitespace( )"
"Operator(+)"
"Whitespace( )"
"Identifier(AL_MASK)"
"ParenthesesClose())"
"Whitespace( )"
"Operator(&)"
"Whitespace( )"
"Operator(~)"
"Identifier(AL_MASK)"
"NewLine(\n)"
"Whitespace(    )"
"Keyword(val)"
"Whitespace( )"
"Identifier(pagesBefore)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(currentMemory)"
"ParenthesesOpen(()"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(    )"
"Keyword(if)"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(newPtr)"
"Whitespace( )"
"Operator(>)"
"Whitespace( )"
"Identifier(pagesBefore)"
"Whitespace( )"
"Operator(<<)"
"Whitespace( )"
"NumberLiteral(16)"
"ParenthesesClose())"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(      )"
"Keyword(val)"
"Whitespace( )"
"Identifier(pagesNeeded)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"ParenthesesOpen(()"
"ParenthesesOpen(()"
"Identifier(newPtr)"
"Whitespace( )"
"Operator(-)"
"Whitespace( )"
"Identifier(ptr)"
"Whitespace( )"
"Operator(+)"
"Whitespace( )"
"NumberLiteral(0xffff)"
"ParenthesesClose())"
"Whitespace( )"
"Operator(&)"
"Whitespace( )"
"Operator(~)"
"NumberLiteral(0xffff)"
"ParenthesesClose())"
"Whitespace( )"
"Operator(>>>)"
"Whitespace( )"
"NumberLiteral(16)"
"NewLine(\n)"
"Whitespace(      )"
"Keyword(val)"
"Whitespace( )"
"Identifier(pagesWanted)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(max)"
"ParenthesesOpen(()"
"Identifier(pagesBefore)"
"Comma(,)"
"Whitespace( )"
"Identifier(pagesNeeded)"
"ParenthesesClose())"
"Whitespace( )"
"LineComment(// double memory\n)"
"Whitespace(      )"
"Keyword(if)"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(growMemory)"
"ParenthesesOpen(()"
"Identifier(pagesWanted)"
"ParenthesesClose())"
"Whitespace( )"
"Operator(<)"
"Whitespace( )"
"NumberLiteral(0)"
"ParenthesesClose())"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(        )"
"Keyword(if)"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(growMemory)"
"ParenthesesOpen(()"
"Identifier(pagesNeeded)"
"ParenthesesClose())"
"Whitespace( )"
"Operator(<)"
"Whitespace( )"
"NumberLiteral(0)"
"ParenthesesClose())"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(          )"
"Identifier(panic)"
"ParenthesesOpen(()"
"ParenthesesClose())"
"Whitespace( )"
"LineComment(// out of memory\n)"
"Whitespace(        )"
"CurlyBracesClose(})"
"NewLine(\n)"
"Whitespace(      )"
"CurlyBracesClose(})"
"NewLine(\n)"
"Whitespace(    )"
"CurlyBracesClose(})"
"NewLine(\n)"
"Whitespace(    )"
"Identifier(offset)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(newPtr)"
"NewLine(\n)"
"Whitespace(    )"
"Identifier(ptr)"
"NewLine(\n)"
"Whitespace(  )"
"CurlyBracesClose(})"
"Whitespace( )"
"Keyword(else)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(    )"
"NumberLiteral(0)"
"NewLine(\n)"
"Whitespace(  )"
"CurlyBracesClose(})"
"NewLine(\n)"
"CurlyBracesClose(})"
"NewLine(\n\n)"
"Keyword(fun)"
"Whitespace( )"
"Identifier(free)"
"ParenthesesOpen(()"
"Identifier(ptr)"
"Operator(:)"
"Whitespace( )"
"Identifier(i32)"
"ParenthesesClose())"
"Operator(:)"
"Whitespace( )"
"Identifier(void)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(  )"
"LineComment(// stub\n)"
"CurlyBracesClose(})"
"NewLine(\n\n)"
"Keyword(fun)"
"Whitespace( )"
"Identifier(discriminant)"
"ParenthesesOpen(()"
"Identifier(v)"
"Operator(:)"
"Whitespace( )"
"Identifier(ref)"
"ParenthesesClose())"
"Operator(:)"
"Whitespace( )"
"Identifier(u64)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Operator(%)"
"Identifier(wasm)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(  )"
"ParenthesesOpen(()"
"Identifier(i64)"
"Operator(.)"
"Identifier(and)"
"NewLine(\n)"
"Whitespace(    )"
"ParenthesesOpen(()"
"Identifier(i64)"
"Operator(.)"
"Keyword(const)"
"Whitespace( )"
"NumberLiteral(0xffffffff00000000)"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(    )"
"ParenthesesOpen(()"
"Identifier(get_local)"
"Whitespace( )"
"Identifier($v)"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"ParenthesesClose())"
"NewLine(\n)"
"CurlyBracesClose(})"
"NewLine(\n\n)"
"Keyword(fun)"
"Whitespace( )"
"Identifier(memcpy)"
"ParenthesesOpen(()"
"Identifier(to)"
"Operator(:)"
"Whitespace( )"
"Identifier(i32)"
"Comma(,)"
"Whitespace( )"
"Identifier(from)"
"Operator(:)"
"Whitespace( )"
"Identifier(i32)"
"Comma(,)"
"Whitespace( )"
"Identifier(len)"
"Operator(:)"
"Whitespace( )"
"Identifier(i32)"
"ParenthesesClose())"
"Operator(:)"
"Whitespace( )"
"Identifier(void)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Operator(%)"
"Identifier(wasm)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(  )"
"ParenthesesOpen(()"
"Identifier(local)"
"Whitespace( )"
"Identifier($end)"
"Whitespace( )"
"Identifier(i32)"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"ParenthesesOpen(()"
"Identifier(set_local)"
"Whitespace( )"
"Identifier($end)"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(i32)"
"Operator(.)"
"Identifier(add)"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(get_local)"
"Whitespace( )"
"Identifier($from)"
"ParenthesesClose())"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(get_local)"
"Whitespace( )"
"Identifier($len)"
"ParenthesesClose())"
"ParenthesesClose())"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"ParenthesesOpen(()"
"Identifier(block)"
"Whitespace( )"
"Identifier($exit)"
"NewLine(\n)"
"Whitespace(    )"
"ParenthesesOpen(()"
"Keyword(loop)"
"Whitespace( )"
"Identifier($cont)"
"NewLine(\n)"
"Whitespace(      )"
"ParenthesesOpen(()"
"Identifier(br_if)"
"Whitespace( )"
"Identifier($exit)"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(i32)"
"Operator(.)"
"Identifier(eq)"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(get_local)"
"Whitespace( )"
"Identifier($from)"
"ParenthesesClose())"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(get_local)"
"Whitespace( )"
"Identifier($end)"
"ParenthesesClose())"
"ParenthesesClose())"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(      )"
"ParenthesesOpen(()"
"Identifier(i32)"
"Operator(.)"
"Identifier(store8)"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(get_local)"
"Whitespace( )"
"Identifier($to)"
"ParenthesesClose())"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(i32)"
"Operator(.)"
"Identifier(load8_u)"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(get_local)"
"Whitespace( )"
"Identifier($from)"
"ParenthesesClose())"
"ParenthesesClose())"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(      )"
"ParenthesesOpen(()"
"Identifier(set_local)"
"Whitespace( )"
"Identifier($from)"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(i32)"
"Operator(.)"
"Identifier(add)"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(get_local)"
"Whitespace( )"
"Identifier($from)"
"ParenthesesClose())"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(i32)"
"Operator(.)"
"Keyword(const)"
"Whitespace( )"
"NumberLiteral(1)"
"ParenthesesClose())"
"ParenthesesClose())"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(      )"
"ParenthesesOpen(()"
"Identifier(set_local)"
"Whitespace( )"
"Identifier($to)"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(i32)"
"Operator(.)"
"Identifier(add)"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(get_local)"
"Whitespace( )"
"Identifier($to)"
"ParenthesesClose())"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(i32)"
"Operator(.)"
"Keyword(const)"
"Whitespace( )"
"NumberLiteral(1)"
"ParenthesesClose())"
"ParenthesesClose())"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(      )"
"ParenthesesOpen(()"
"Identifier(br)"
"Whitespace( )"
"Identifier($cont)"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(    )"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"ParenthesesClose())"
"NewLine(\n)"
"CurlyBracesClose(})"
"NewLine(\n\n)"
"Keyword(fun)"
"Whitespace( )"
"Identifier(memset)"
"ParenthesesOpen(()"
"Identifier(ptr)"
"Operator(:)"
"Whitespace( )"
"Identifier(i32)"
"Comma(,)"
"Whitespace( )"
"Identifier(content)"
"Operator(:)"
"Whitespace( )"
"Identifier(i32)"
"Comma(,)"
"Whitespace( )"
"Identifier(len)"
"Operator(:)"
"Whitespace( )"
"Identifier(i32)"
"ParenthesesClose())"
"Operator(:)"
"Whitespace( )"
"Identifier(void)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Operator(%)"
"Identifier(wasm)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(  )"
"ParenthesesOpen(()"
"Identifier(local)"
"Whitespace( )"
"Identifier($end)"
"Whitespace( )"
"Identifier(i32)"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"ParenthesesOpen(()"
"Identifier(set_local)"
"Whitespace( )"
"Identifier($end)"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(i32)"
"Operator(.)"
"Identifier(add)"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(get_local)"
"Whitespace( )"
"Identifier($ptr)"
"ParenthesesClose())"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(get_local)"
"Whitespace( )"
"Identifier($len)"
"ParenthesesClose())"
"ParenthesesClose())"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"ParenthesesOpen(()"
"Identifier(block)"
"Whitespace( )"
"Identifier($exit)"
"NewLine(\n)"
"Whitespace(    )"
"ParenthesesOpen(()"
"Keyword(loop)"
"Whitespace( )"
"Identifier($cont)"
"NewLine(\n)"
"Whitespace(      )"
"ParenthesesOpen(()"
"Identifier(br_if)"
"Whitespace( )"
"Identifier($exit)"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(i32)"
"Operator(.)"
"Identifier(eq)"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(get_local)"
"Whitespace( )"
"Identifier($ptr)"
"ParenthesesClose())"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(get_local)"
"Whitespace( )"
"Identifier($end)"
"ParenthesesClose())"
"ParenthesesClose())"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(      )"
"ParenthesesOpen(()"
"Identifier(i32)"
"Operator(.)"
"Identifier(store8)"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(get_local)"
"Whitespace( )"
"Identifier($ptr)"
"ParenthesesClose())"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(i32)"
"Operator(.)"
"Identifier(load8_u)"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(get_local)"
"Whitespace( )"
"Identifier($content)"
"ParenthesesClose())"
"ParenthesesClose())"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(      )"
"ParenthesesOpen(()"
"Identifier(set_local)"
"Whitespace( )"
"Identifier($ptr)"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(i32)"
"Operator(.)"
"Identifier(add)"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(get_local)"
"Whitespace( )"
"Identifier($ptr)"
"ParenthesesClose())"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(i32)"
"Operator(.)"
"Keyword(const)"
"Whitespace( )"
"NumberLiteral(1)"
"ParenthesesClose())"
"ParenthesesClose())"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(      )"
"ParenthesesOpen(()"
"Identifier(br)"
"Whitespace( )"
"Identifier($cont)"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(    )"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"ParenthesesClose())"
"NewLine(\n)"
"CurlyBracesClose(})"
"NewLine(\n\n\n)"
"Keyword(struct)"
"Whitespace( )"
"Identifier(String)"
"ParenthesesOpen(()"
"Identifier(data)"
"Operator(:)"
"Whitespace( )"
"Identifier(bytes)"
"ParenthesesClose())"
"NewLine(\n\n)"
"Keyword(impl)"
"Whitespace( )"
"Identifier(String)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(  )"
"MacroDecoration(#[)"
"Identifier(getter)"
"VectorClose(])"
"NewLine(\n)"
"Whitespace(  )"
"Keyword(fun)"
"Whitespace( )"
"Identifier(length)"
"ParenthesesOpen(()"
"Identifier(str)"
"Operator(:)"
"Whitespace( )"
"Identifier(String)"
"ParenthesesClose())"
"Operator(:)"
"Whitespace( )"
"Identifier(i32)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(str)"
"Operator(.)"
"Identifier(data)"
"Operator(.)"
"Identifier(length)"
"Whitespace( )"
"Operator(/)"
"Whitespace( )"
"NumberLiteral(2)"
"NewLine(\n\n)"
"Whitespace(  )"
"MacroDecoration(#[)"
"Identifier(setter)"
"VectorClose(])"
"NewLine(\n)"
"Whitespace(  )"
"Keyword(fun)"
"Whitespace( )"
"Identifier(length)"
"ParenthesesOpen(()"
"Identifier(str)"
"Operator(:)"
"Whitespace( )"
"Identifier(String)"
"Comma(,)"
"Whitespace( )"
"Identifier(a)"
"Operator(:)"
"Whitespace( )"
"Identifier(i32)"
"ParenthesesClose())"
"Operator(:)"
"Whitespace( )"
"Identifier(i32)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(str)"
"Operator(.)"
"Identifier(data)"
"Operator(.)"
"Identifier(length)"
"Whitespace( )"
"Operator(/)"
"Whitespace( )"
"NumberLiteral(2)"
"NewLine(\n\n)"
"Whitespace(  )"
"Keyword(fun)"
"Whitespace( )"
"Operator(+)"
"ParenthesesOpen(()"
"Identifier(lhs)"
"Operator(:)"
"Whitespace( )"
"Identifier(String)"
"Comma(,)"
"Whitespace( )"
"Identifier(rhs)"
"Operator(:)"
"Whitespace( )"
"Identifier(String)"
"ParenthesesClose())"
"Operator(:)"
"Whitespace( )"
"Identifier(String)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(    )"
"Keyword(val)"
"Whitespace( )"
"Identifier(lhsData)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(lhs)"
"Operator(.)"
"Identifier(data)"
"NewLine(\n)"
"Whitespace(    )"
"Keyword(val)"
"Whitespace( )"
"Identifier(rhsData)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(rhs)"
"Operator(.)"
"Identifier(data)"
"NewLine(\n\n)"
"Whitespace(    )"
"Keyword(val)"
"Whitespace( )"
"Identifier(lhsLen)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(lhsData)"
"Operator(.)"
"Identifier(length)"
"NewLine(\n)"
"Whitespace(    )"
"Keyword(val)"
"Whitespace( )"
"Identifier(rhsLen)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(rhsData)"
"Operator(.)"
"Identifier(length)"
"NewLine(\n\n)"
"Whitespace(    )"
"Keyword(var)"
"Whitespace( )"
"Identifier(newData)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(bytes)"
"ParenthesesOpen(()"
"Identifier(lhsLen)"
"Whitespace( )"
"Operator(+)"
"Whitespace( )"
"Identifier(rhsLen)"
"ParenthesesClose())"
"NewLine(\n\n)"
"Whitespace(    )"
"Identifier(system)"
"Operator(::)"
"Identifier(core)"
"Operator(::)"
"Identifier(memory)"
"Operator(::)"
"Identifier(memcpy)"
"ParenthesesOpen(()"
"Identifier(newData)"
"Operator(.)"
"Identifier(ptr)"
"Comma(,)"
"Whitespace( )"
"Identifier(lhsData)"
"Operator(.)"
"Identifier(ptr)"
"Comma(,)"
"Whitespace( )"
"Identifier(lhsLen)"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(    )"
"Identifier(system)"
"Operator(::)"
"Identifier(core)"
"Operator(::)"
"Identifier(memory)"
"Operator(::)"
"Identifier(memcpy)"
"ParenthesesOpen(()"
"Identifier(newData)"
"Operator(.)"
"Identifier(ptr)"
"Whitespace( )"
"Operator(+)"
"Whitespace( )"
"Identifier(lhsLen)"
"Comma(,)"
"Whitespace( )"
"Identifier(rhs)"
"Operator(.)"
"Identifier(data)"
"Operator(.)"
"Identifier(ptr)"
"Comma(,)"
"Whitespace( )"
"Identifier(rhsLen)"
"ParenthesesClose())"
"NewLine(\n\n)"
"Whitespace(    )"
"Identifier(String)"
"ParenthesesOpen(()"
"Identifier(newData)"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"CurlyBracesClose(})"
"NewLine(\n\n)"
"Whitespace(  )"
"Keyword(fun)"
"Whitespace( )"
"Identifier(charAt)"
"ParenthesesOpen(()"
"Identifier(str)"
"Operator(:)"
"Whitespace( )"
"Identifier(String)"
"Comma(,)"
"Whitespace( )"
"Identifier(at)"
"Operator(:)"
"Whitespace( )"
"Identifier(i32)"
"ParenthesesClose())"
"Operator(:)"
"Whitespace( )"
"Identifier(u16)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(    )"
"Keyword(if)"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(at)"
"Whitespace( )"
"Operator(>)"
"Whitespace( )"
"Identifier(str)"
"Operator(.)"
"Identifier(length)"
"ParenthesesClose())"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(      )"
"Identifier(panic)"
"ParenthesesOpen(()"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(    )"
"CurlyBracesClose(})"
"NewLine(\n)"
"Whitespace(    )"
"Identifier(u16)"
"Operator(.)"
"Identifier(load)"
"ParenthesesOpen(()"
"Identifier(str)"
"Operator(.)"
"Identifier(data)"
"Operator(.)"
"Identifier(ptr)"
"Whitespace( )"
"Keyword(as)"
"Whitespace( )"
"Identifier(ref)"
"Comma(,)"
"Whitespace( )"
"Identifier(at)"
"Whitespace( )"
"Operator(*)"
"Whitespace( )"
"NumberLiteral(2)"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"CurlyBracesClose(})"
"NewLine(\n)"
"CurlyBracesClose(})"
"NewLine(\n\n)"
"Keyword(enum)"
"Whitespace( )"
"Identifier(AA)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(BB)"
"NewLine(\n)"
"CurlyBracesClose(})"
"NewLine(\n\n)"
"Keyword(struct)"
"Whitespace( )"
"Identifier(TT)"
"ParenthesesOpen(()"
"ParenthesesClose())"
"NewLine(\n\n)"
"Keyword(impl)"
"Whitespace( )"
"Identifier(BB)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(  )"
"Keyword(fun)"
"Whitespace( )"
"Identifier(a)"
"ParenthesesOpen(()"
"ParenthesesClose())"
"Operator(:)"
"Whitespace( )"
"Identifier(i32)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"NumberLiteral(1)"
"NewLine(\n)"
"CurlyBracesClose(})"
"NewLine(\n\n)"
"Keyword(fun)"
"Whitespace( )"
"Identifier(main)"
"ParenthesesOpen(()"
"ParenthesesClose())"
"Operator(:)"
"Whitespace( )"
"Identifier(i32)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(BB)"
"Operator(.)"
"Identifier(a)"
"ParenthesesOpen(()"
"ParenthesesClose())"
"NewLine(\n\n)"
"Keyword(type)"
"Whitespace( )"
"Identifier(test)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Operator(%)"
"Keyword(struct)"
"CurlyBracesOpen({)"
"CurlyBracesClose(})"
"NewLine(\n)"
"Keyword(impl)"
"Whitespace( )"
"Identifier(test)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(  )"
"Keyword(fun)"
"Whitespace( )"
"Identifier(x)"
"ParenthesesOpen(()"
"ParenthesesClose())"
"Operator(:)"
"Whitespace( )"
"Identifier(i32)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"NumberLiteral(1)"
"NewLine(\n)"
"CurlyBracesClose(})"
"NewLine(\n\n)"
"Keyword(fun)"
"Whitespace( )"
"Identifier(x)"
"ParenthesesOpen(()"
"Identifier(a)"
"ParenthesesClose())"
"Operator(:)"
"Whitespace( )"
"Identifier(i32)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"NumberLiteral(1)"
"NewLine(\n)"
"Keyword(fun)"
"Whitespace( )"
"Identifier(x1)"
"ParenthesesOpen(()"
"ParenthesesClose())"
"Operator(:)"
"Whitespace( )"
"Identifier(i32)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"NumberLiteral(1)"
"Whitespace( )"
"Operator(+)"
"Whitespace( )"
"NumberLiteral(2)"
"Whitespace( )"
"Operator(/)"
"Whitespace( )"
"NumberLiteral(3)"
"Whitespace( )"
"Operator(*)"
"Whitespace( )"
"NumberLiteral(4)"
"Whitespace( )"
"Operator(-)"
"Whitespace( )"
"Operator(-)"
"NumberLiteral(5)"
"NewLine(\n)"
"Keyword(fun)"
"Whitespace( )"
"Identifier(x2)"
"ParenthesesOpen(()"
"Identifier(x)"
"ParenthesesClose())"
"Operator(:)"
"Whitespace( )"
"Identifier(i32)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Operator(~)"
"Identifier(x)"
"NewLine(\n)"
"Keyword(fun)"
"Whitespace( )"
"Identifier(x3)"
"ParenthesesOpen(()"
"Identifier(x)"
"ParenthesesClose())"
"Operator(:)"
"Whitespace( )"
"Identifier(i32)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Operator(-)"
"Identifier(x)"
"NewLine(\n)"
"Keyword(fun)"
"Whitespace( )"
"Identifier(x4)"
"ParenthesesOpen(()"
"ParenthesesClose())"
"Operator(:)"
"Whitespace( )"
"Identifier(i32)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Operator(~)"
"NumberLiteral(99)"
"NewLine(\n)"
"Keyword(fun)"
"Whitespace( )"
"Identifier(x5)"
"ParenthesesOpen(()"
"ParenthesesClose())"
"Operator(:)"
"Whitespace( )"
"Identifier(i32)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Operator(~)"
"Identifier(test)"
"Operator(.)"
"Identifier(x)"
"ParenthesesOpen(()"
"ParenthesesClose())"
"NewLine(\n)"
"Keyword(fun)"
"Whitespace( )"
"Identifier(x6)"
"ParenthesesOpen(()"
"ParenthesesClose())"
"Operator(:)"
"Whitespace( )"
"Identifier(boolean)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Operator(!)"
"Keyword(true)"
"NewLine(\n\n\n)"
"Keyword(enum)"
"Whitespace( )"
"Identifier(Tree)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(Empty)"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(Node)"
"ParenthesesOpen(()"
"Identifier(a)"
"Operator(:)"
"Whitespace( )"
"Identifier(Tree)"
"Whitespace( )"
"Operator(|)"
"Whitespace( )"
"Identifier(Forest)"
"ParenthesesClose())"
"NewLine(\n)"
"CurlyBracesClose(})"
"NewLine(\n\n)"
"Keyword(enum)"
"Whitespace( )"
"Identifier(Forest)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(Nil)"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(Cons)"
"ParenthesesOpen(()"
"Identifier(tree)"
"Operator(:)"
"Whitespace( )"
"Identifier(Tree)"
"Whitespace( )"
"Operator(|)"
"Whitespace( )"
"Identifier(Forest)"
"ParenthesesClose())"
"NewLine(\n)"
"CurlyBracesClose(})"
"NewLine(\n\n)"
"Keyword(fun)"
"Whitespace( )"
"Identifier(testPassing)"
"ParenthesesOpen(()"
"ParenthesesClose())"
"Operator(:)"
"Whitespace( )"
"Identifier(void)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(  )"
"Keyword(var)"
"Whitespace( )"
"Identifier(a)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(Nil)"
"NewLine(\n)"
"Whitespace(  )"
"Keyword(var)"
"Whitespace( )"
"Identifier(b)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(Cons)"
"ParenthesesOpen(()"
"Identifier(Empty)"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"Keyword(var)"
"Whitespace( )"
"Identifier(c)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(Cons)"
"ParenthesesOpen(()"
"Identifier(Nil)"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"Keyword(var)"
"Whitespace( )"
"Identifier(d)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(Cons)"
"ParenthesesOpen(()"
"Identifier(Node)"
"ParenthesesOpen(()"
"Identifier(Empty)"
"ParenthesesClose())"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"Keyword(var)"
"Whitespace( )"
"Identifier(e)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(Node)"
"ParenthesesOpen(()"
"Identifier(Nil)"
"ParenthesesClose())"
"NewLine(\n\n)"
"Whitespace(  )"
"Identifier(support)"
"Operator(::)"
"Identifier(test)"
"Operator(::)"
"Identifier(assert)"
"ParenthesesOpen(()"
"Whitespace( )"
"Identifier(a)"
"Whitespace( )"
"Keyword(is)"
"Whitespace( )"
"Identifier(Nil)"
"Whitespace(            )"
"Operator(==)"
"Whitespace( )"
"Keyword(true)"
"Whitespace( )"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(support)"
"Operator(::)"
"Identifier(test)"
"Operator(::)"
"Identifier(assert)"
"ParenthesesOpen(()"
"Whitespace( )"
"Identifier(a)"
"Whitespace( )"
"Keyword(is)"
"Whitespace( )"
"Identifier(Forest)"
"Whitespace(         )"
"Operator(==)"
"Whitespace( )"
"Keyword(true)"
"Whitespace( )"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(support)"
"Operator(::)"
"Identifier(test)"
"Operator(::)"
"Identifier(assert)"
"ParenthesesOpen(()"
"Whitespace( )"
"Identifier(b)"
"Whitespace( )"
"Keyword(is)"
"Whitespace( )"
"Identifier(Forest)"
"Whitespace(         )"
"Operator(==)"
"Whitespace( )"
"Keyword(true)"
"Whitespace( )"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(support)"
"Operator(::)"
"Identifier(test)"
"Operator(::)"
"Identifier(assert)"
"ParenthesesOpen(()"
"Whitespace( )"
"Identifier(c)"
"Whitespace( )"
"Keyword(is)"
"Whitespace( )"
"Identifier(Cons)"
"Whitespace(           )"
"Operator(==)"
"Whitespace( )"
"Keyword(true)"
"Whitespace( )"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(support)"
"Operator(::)"
"Identifier(test)"
"Operator(::)"
"Identifier(assert)"
"ParenthesesOpen(()"
"Whitespace( )"
"Identifier(e)"
"Whitespace( )"
"Keyword(is)"
"Whitespace( )"
"Identifier(Node)"
"Whitespace(           )"
"Operator(==)"
"Whitespace( )"
"Keyword(true)"
"Whitespace( )"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(support)"
"Operator(::)"
"Identifier(test)"
"Operator(::)"
"Identifier(assert)"
"ParenthesesOpen(()"
"Whitespace( )"
"Identifier(e)"
"Whitespace( )"
"Keyword(is)"
"Whitespace( )"
"Identifier(Tree)"
"Whitespace(           )"
"Operator(==)"
"Whitespace( )"
"Keyword(true)"
"Whitespace( )"
"ParenthesesClose())"
"NewLine(\n)"
"CurlyBracesClose(})"
"NewLine(\n\n\n\n)"
"Keyword(fun)"
"Whitespace( )"
"Identifier(testFn)"
"ParenthesesOpen(()"
"ParenthesesClose())"
"Operator(:)"
"Whitespace( )"
"Identifier(void)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(  )"
"Keyword(var)"
"Whitespace( )"
"Identifier(x)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"NumberLiteral(1)"
"NewLine(\n)"
"Whitespace(  )"
"Keyword(loop)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(    )"
"Identifier(x)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(x)"
"Whitespace( )"
"Operator(+)"
"Whitespace( )"
"NumberLiteral(1)"
"NewLine(\n)"
"Whitespace(    )"
"Keyword(if)"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(x)"
"Whitespace( )"
"Operator(>)"
"Whitespace( )"
"NumberLiteral(10)"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(      )"
"Keyword(break)"
"NewLine(\n)"
"Whitespace(  )"
"CurlyBracesClose(})"
"NewLine(\n)"
"CurlyBracesClose(})"
"NewLine(\n\n)"
"Keyword(fun)"
"Whitespace( )"
"Identifier(testFn2)"
"ParenthesesOpen(()"
"ParenthesesClose())"
"Operator(:)"
"Whitespace( )"
"Identifier(void)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(  )"
"Keyword(var)"
"Whitespace( )"
"Identifier(x)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"NumberLiteral(1)"
"NewLine(\n)"
"Whitespace(  )"
"Keyword(loop)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(    )"
"Identifier(x)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(x)"
"Whitespace( )"
"Operator(+)"
"Whitespace( )"
"NumberLiteral(1)"
"NewLine(\n)"
"Whitespace(    )"
"Keyword(continue)"
"NewLine(\n)"
"Whitespace(  )"
"CurlyBracesClose(})"
"NewLine(\n)"
"CurlyBracesClose(})"
"NewLine(\n\n)"
"Keyword(struct)"
"Whitespace( )"
"Identifier(Color)"
"ParenthesesOpen(()"
"Identifier(r)"
"Operator(:)"
"Whitespace( )"
"Identifier(i32)"
"Comma(,)"
"Whitespace( )"
"Identifier(g)"
"Operator(:)"
"Whitespace( )"
"Identifier(i32)"
"Comma(,)"
"Whitespace( )"
"Identifier(b)"
"Operator(:)"
"Whitespace( )"
"Identifier(i32)"
"ParenthesesClose())"
"NewLine(\n\n)"
"Keyword(fun)"
"Whitespace( )"
"Identifier(main)"
"ParenthesesOpen(()"
"Identifier(color)"
"Operator(:)"
"Whitespace( )"
"Identifier(Color)"
"ParenthesesClose())"
"Operator(:)"
"Whitespace( )"
"Identifier(i32)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(color)"
"Operator(.)"
"Identifier(r)"
"Whitespace( )"
"Operator(*)"
"Whitespace( )"
"NumberLiteral(0x10000)"
"Whitespace( )"
"Operator(|)"
"Whitespace( )"
"Identifier(asd)"
"Whitespace( )"
"Operator(|)"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(color)"
"Operator(.)"
"Identifier(g)"
"Whitespace( )"
"Operator(*)"
"Whitespace( )"
"NumberLiteral(0x100)"
"Whitespace( )"
"Operator(|)"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(color)"
"Operator(.)"
"Identifier(b)"
"NewLine(\n\n)"
"Keyword(struct)"
"Whitespace( )"
"Identifier(True)"
"ParenthesesOpen(()"
"ParenthesesClose())"
"NewLine(\n)"
"Keyword(struct)"
"Whitespace( )"
"Identifier(False)"
"ParenthesesOpen(()"
"ParenthesesClose())"
"NewLine(\n)"
"Keyword(type)"
"Whitespace( )"
"Identifier(Boolean)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(True)"
"Whitespace( )"
"Operator(|)"
"Whitespace( )"
"Identifier(False)"
"NewLine(\n\n)"
"Keyword(fun)"
"Whitespace( )"
"Identifier(gt0)"
"ParenthesesOpen(()"
"Identifier(x)"
"Operator(:)"
"Whitespace( )"
"Identifier(i32)"
"ParenthesesClose())"
"Operator(:)"
"Whitespace( )"
"Identifier(Boolean)"
"Whitespace( )"
"Operator(=)"
"NewLine(\n)"
"Whitespace(  )"
"Keyword(if)"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(x)"
"Whitespace( )"
"Operator(>)"
"Whitespace( )"
"NumberLiteral(0)"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(    )"
"Identifier(True)"
"ParenthesesOpen(()"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"Keyword(else)"
"NewLine(\n)"
"Whitespace(    )"
"Identifier(False)"
"ParenthesesOpen(()"
"ParenthesesClose())"
"NewLine(\n\n)"
"Keyword(fun)"
"Whitespace( )"
"Identifier(isTrue)"
"ParenthesesOpen(()"
"Identifier(a)"
"Operator(:)"
"Whitespace( )"
"Identifier(Boolean)"
"ParenthesesClose())"
"Operator(:)"
"Whitespace( )"
"Identifier(boolean)"
"Whitespace( )"
"Operator(=)"
"NewLine(\n)"
"Whitespace(  )"
"Keyword(match)"
"Whitespace( )"
"Identifier(a)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(    )"
"Keyword(case)"
"Whitespace( )"
"Keyword(is)"
"Whitespace( )"
"Identifier(True)"
"ParenthesesOpen(()"
"ParenthesesClose())"
"Whitespace( )"
"Operator(->)"
"Whitespace( )"
"Keyword(true)"
"NewLine(\n)"
"Whitespace(    )"
"Keyword(else)"
"Whitespace( )"
"Operator(->)"
"Whitespace( )"
"Keyword(false)"
"NewLine(\n)"
"Whitespace(  )"
"CurlyBracesClose(})"
"NewLine(\n\n)"
"Keyword(fun)"
"Whitespace( )"
"Identifier(x1)"
"ParenthesesOpen(()"
"ParenthesesClose())"
"Operator(:)"
"Whitespace( )"
"Identifier(f32)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(  )"
"Keyword(fun)"
"Whitespace( )"
"Identifier(Y)"
"ParenthesesOpen(()"
"ParenthesesClose())"
"Operator(:)"
"Whitespace( )"
"Identifier(f32)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"NumberLiteral(1.0)"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(Y)"
"ParenthesesOpen(()"
"ParenthesesClose())"
"NewLine(\n)"
"CurlyBracesClose(})"
"NewLine(\n\n)"
"Keyword(fun)"
"Whitespace( )"
"Identifier(x2)"
"ParenthesesOpen(()"
"ParenthesesClose())"
"Operator(:)"
"Whitespace( )"
"Identifier(i32)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(  )"
"Keyword(var)"
"Whitespace( )"
"Identifier(n)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"NumberLiteral(1)"
"NewLine(\n)"
"Whitespace(  )"
"Keyword(fun)"
"Whitespace( )"
"Identifier(Y)"
"ParenthesesOpen(()"
"ParenthesesClose())"
"Operator(:)"
"Whitespace( )"
"Identifier(i32)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(n)"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(Y)"
"ParenthesesOpen(()"
"ParenthesesClose())"
"NewLine(\n)"
"CurlyBracesClose(})"
"NewLine(\n\n)"
"Keyword(struct)"
"Whitespace( )"
"Identifier(Iterator)"
"ParenthesesOpen(()"
"Identifier(current)"
"Operator(:)"
"Whitespace( )"
"Identifier(i32)"
"Comma(,)"
"Whitespace( )"
"Identifier(target)"
"Operator(:)"
"Whitespace( )"
"Identifier(i32)"
"ParenthesesClose())"
"NewLine(\n\n)"
"Keyword(enum)"
"Whitespace( )"
"Identifier(Maybe)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(None)"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(Some)"
"ParenthesesOpen(()"
"Identifier(value)"
"Operator(:)"
"Whitespace( )"
"Identifier(i32)"
"ParenthesesClose())"
"NewLine(\n)"
"CurlyBracesClose(})"
"NewLine(\n\n)"
"Keyword(impl)"
"Whitespace( )"
"Identifier(Iterator)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(  )"
"Keyword(fun)"
"Whitespace( )"
"Identifier(next)"
"ParenthesesOpen(()"
"Identifier(iter)"
"Operator(:)"
"Whitespace( )"
"Identifier(Iterator)"
"ParenthesesClose())"
"Operator(:)"
"Whitespace( )"
"Identifier(Maybe)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(    )"
"Keyword(if)"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(iter)"
"Operator(.)"
"Identifier(current)"
"Whitespace( )"
"Operator(<=)"
"Whitespace( )"
"Identifier(iter)"
"Operator(.)"
"Identifier(target)"
"ParenthesesClose())"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(      )"
"Keyword(var)"
"Whitespace( )"
"Identifier(r)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(Some)"
"ParenthesesOpen(()"
"Identifier(iter)"
"Operator(.)"
"Identifier(current)"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(      )"
"Identifier(iter)"
"Operator(.)"
"Identifier(current)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(iter)"
"Operator(.)"
"Identifier(current)"
"Whitespace( )"
"Operator(+)"
"Whitespace( )"
"NumberLiteral(1)"
"NewLine(\n)"
"Whitespace(      )"
"Identifier(r)"
"NewLine(\n)"
"Whitespace(    )"
"CurlyBracesClose(})"
"Whitespace( )"
"Keyword(else)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(      )"
"Identifier(None)"
"NewLine(\n)"
"Whitespace(    )"
"CurlyBracesClose(})"
"NewLine(\n)"
"Whitespace(  )"
"CurlyBracesClose(})"
"NewLine(\n)"
"CurlyBracesClose(})"
"NewLine(\n\n)"
"Keyword(fun)"
"Whitespace( )"
"Identifier(testFn3)"
"ParenthesesOpen(()"
"Identifier(from)"
"Operator(:)"
"Whitespace( )"
"Identifier(i32)"
"Comma(,)"
"Whitespace( )"
"Identifier(to)"
"Operator(:)"
"Whitespace( )"
"Identifier(i32)"
"ParenthesesClose())"
"Operator(:)"
"Whitespace( )"
"Identifier(i32)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(  )"
"MultiLineComment(/**\n    * This is a candidate sugar syntax for\n    *\n    * var ret = 0\n    * for (value in Iterator(from, to)) {\n    *   ret = ret + value\n    * }\n    */)"
"NewLine(\n)"
"Whitespace(  )"
"Keyword(var)"
"Whitespace( )"
"Identifier(ret)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"NumberLiteral(0)"
"NewLine(\n\n)"
"Whitespace(  )"
"Keyword(val)"
"Whitespace( )"
"Identifier($iter$)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(Iterator)"
"ParenthesesOpen(()"
"Identifier(from)"
"Comma(,)"
"Whitespace( )"
"Identifier(to)"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"Keyword(loop)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(    )"
"Keyword(match)"
"Whitespace( )"
"Identifier(Iterator)"
"Operator(.)"
"Identifier(next)"
"ParenthesesOpen(()"
"Identifier($iter$)"
"ParenthesesClose())"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(      )"
"Keyword(case)"
"Whitespace( )"
"Keyword(is)"
"Whitespace( )"
"Identifier(Some)"
"ParenthesesOpen(()"
"Identifier(value)"
"ParenthesesClose())"
"Whitespace( )"
"Operator(->)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(        )"
"Identifier(ret)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(ret)"
"Whitespace( )"
"Operator(+)"
"Whitespace( )"
"Identifier(value)"
"NewLine(\n\n)"
"Whitespace(        )"
"Keyword(continue)"
"NewLine(\n)"
"Whitespace(      )"
"CurlyBracesClose(})"
"NewLine(\n)"
"Whitespace(      )"
"Keyword(case)"
"Whitespace( )"
"Keyword(is)"
"Whitespace( )"
"Identifier(None)"
"Whitespace( )"
"Operator(->)"
"Whitespace( )"
"Keyword(break)"
"NewLine(\n)"
"Whitespace(    )"
"CurlyBracesClose(})"
"NewLine(\n)"
"Whitespace(  )"
"CurlyBracesClose(})"
"NewLine(\n\n)"
"Whitespace(  )"
"Identifier(ret)"
"NewLine(\n)"
"CurlyBracesClose(})"
"NewLine(\n\n\n\n\n\n\n\n\n\n\n)"
"EndOfFile"