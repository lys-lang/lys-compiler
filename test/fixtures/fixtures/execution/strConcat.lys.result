"Keyword(import)"
"Whitespace( )"
"Identifier(support)"
"Operator(::)"
"Identifier(test)"
"NewLine(\n\n)"
"MacroDecoration(#[)"
"Identifier(export)"
"VectorClose(])"
"NewLine(\n)"
"Keyword(fun)"
"Whitespace( )"
"Identifier(main)"
"ParenthesesOpen(()"
"ParenthesesClose())"
"Operator(:)"
"Whitespace( )"
"Identifier(void)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(START)"
"ParenthesesOpen(()"
"StringLiteral(\"Test byte concatenation\")"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(    )"
"Keyword(val)"
"Whitespace( )"
"Identifier(a)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"StringLiteral(\"abc\")"
"NewLine(\n)"
"Whitespace(    )"
"Keyword(val)"
"Whitespace( )"
"Identifier(b)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"StringLiteral(\"1234\")"
"NewLine(\n)"
"Whitespace(    )"
"Keyword(val)"
"Whitespace( )"
"Identifier(c)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(string)"
"Operator(.)"
"Identifier(concat)"
"ParenthesesOpen(()"
"Identifier(a)"
"Comma(,)"
"Whitespace( )"
"Identifier(b)"
"ParenthesesClose())"
"NewLine(\n\n)"
"Whitespace(    )"
"Identifier(mustEqual)"
"ParenthesesOpen(()"
"Identifier(a)"
"Operator(.)"
"Identifier(length)"
"Comma(,)"
"Whitespace( )"
"NumberLiteral(3)"
"Whitespace( )"
"Keyword(as)"
"Whitespace( )"
"Identifier(u32)"
"Comma(,)"
"Whitespace( )"
"StringLiteral(\"a.length == 3\")"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(    )"
"Identifier(mustEqual)"
"ParenthesesOpen(()"
"Identifier(b)"
"Operator(.)"
"Identifier(length)"
"Comma(,)"
"Whitespace( )"
"NumberLiteral(4)"
"Whitespace( )"
"Keyword(as)"
"Whitespace( )"
"Identifier(u32)"
"Comma(,)"
"Whitespace( )"
"StringLiteral(\"b.length == 4\")"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(    )"
"Identifier(mustEqual)"
"ParenthesesOpen(()"
"Identifier(c)"
"Operator(.)"
"Identifier(length)"
"Comma(,)"
"Whitespace( )"
"NumberLiteral(7)"
"Whitespace( )"
"Keyword(as)"
"Whitespace( )"
"Identifier(u32)"
"Comma(,)"
"Whitespace( )"
"StringLiteral(\"c.length == 7\")"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(    )"
"Identifier(mustEqual)"
"ParenthesesOpen(()"
"Identifier(c)"
"Comma(,)"
"Whitespace( )"
"StringLiteral(\"abc1234\")"
"Comma(,)"
"Whitespace( )"
"StringLiteral(\"c == 'abc1234' (1)\")"
"ParenthesesClose())"
"NewLine(\n\n)"
"Whitespace(    )"
"Keyword(val)"
"Whitespace( )"
"Identifier(D)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(string)"
"Operator(.)"
"Identifier(concat)"
"ParenthesesOpen(()"
"Identifier(c)"
"Comma(,)"
"Whitespace( )"
"Identifier(c)"
"ParenthesesClose())"
"NewLine(\n\n)"
"Whitespace(    )"
"Identifier(mustEqual)"
"ParenthesesOpen(()"
"Identifier(c)"
"Comma(,)"
"Whitespace( )"
"StringLiteral(\"abc1234\")"
"Comma(,)"
"Whitespace( )"
"StringLiteral(\"c == 'abc1234' (2)\")"
"ParenthesesClose())"
"NewLine(\n\n)"
"Whitespace(    )"
"Identifier(mustEqual)"
"ParenthesesOpen(()"
"Identifier(D)"
"Operator(.)"
"Identifier(length)"
"Comma(,)"
"Whitespace( )"
"NumberLiteral(14)"
"Whitespace( )"
"Keyword(as)"
"Whitespace( )"
"Identifier(u32)"
"Comma(,)"
"Whitespace( )"
"StringLiteral(\"d.length == 28\")"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(    )"
"Identifier(mustEqual)"
"ParenthesesOpen(()"
"Identifier(D)"
"Comma(,)"
"Whitespace( )"
"StringLiteral(\"abc1234abc1234\")"
"Comma(,)"
"Whitespace( )"
"Identifier(D)"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"CurlyBracesClose(})"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(END)"
"ParenthesesOpen(()"
"ParenthesesClose())"
"NewLine(\n\n)"
"Whitespace(  )"
"Identifier(START)"
"ParenthesesOpen(()"
"StringLiteral(\"Test string operations\")"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(    )"
"Keyword(val)"
"Whitespace( )"
"Identifier(str)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"StringLiteral(\"asd‚ùÆùêë\")"
"NewLine(\n)"
"Whitespace(    )"
"Identifier(mustEqual)"
"ParenthesesOpen(()"
"Identifier(str)"
"Operator(.)"
"Identifier(length)"
"Comma(,)"
"Whitespace( )"
"NumberLiteral(6)"
"Whitespace( )"
"Keyword(as)"
"Whitespace( )"
"Identifier(u32)"
"Comma(,)"
"Whitespace( )"
"StringLiteral(\"str.length == 6\")"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(    )"
"Identifier(mustEqual)"
"ParenthesesOpen(()"
"Identifier(str)"
"VectorOpen([)"
"NumberLiteral(0)"
"Whitespace( )"
"Keyword(as)"
"Whitespace( )"
"Identifier(u32)"
"VectorClose(])"
"Comma(,)"
"Whitespace( )"
"NumberLiteral(97)"
"Whitespace( )"
"Keyword(as)"
"Whitespace( )"
"Identifier(u16)"
"Comma(,)"
"Whitespace( )"
"StringLiteral(\"char at 0\")"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(    )"
"Identifier(mustEqual)"
"ParenthesesOpen(()"
"Identifier(str)"
"VectorOpen([)"
"NumberLiteral(1)"
"Whitespace( )"
"Keyword(as)"
"Whitespace( )"
"Identifier(u32)"
"VectorClose(])"
"Comma(,)"
"Whitespace( )"
"NumberLiteral(115)"
"Whitespace( )"
"Keyword(as)"
"Whitespace( )"
"Identifier(u16)"
"Comma(,)"
"Whitespace( )"
"StringLiteral(\"char at 1\")"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(    )"
"Identifier(mustEqual)"
"ParenthesesOpen(()"
"Identifier(str)"
"VectorOpen([)"
"NumberLiteral(2)"
"Whitespace( )"
"Keyword(as)"
"Whitespace( )"
"Identifier(u32)"
"VectorClose(])"
"Comma(,)"
"Whitespace( )"
"NumberLiteral(100)"
"Whitespace( )"
"Keyword(as)"
"Whitespace( )"
"Identifier(u16)"
"Comma(,)"
"Whitespace( )"
"StringLiteral(\"char at 2\")"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(    )"
"Identifier(mustEqual)"
"ParenthesesOpen(()"
"Identifier(str)"
"VectorOpen([)"
"NumberLiteral(3)"
"Whitespace( )"
"Keyword(as)"
"Whitespace( )"
"Identifier(u32)"
"VectorClose(])"
"Comma(,)"
"Whitespace( )"
"NumberLiteral(10094)"
"Whitespace( )"
"Keyword(as)"
"Whitespace( )"
"Identifier(u16)"
"Comma(,)"
"Whitespace( )"
"StringLiteral(\"char at 3\")"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(    )"
"Identifier(mustEqual)"
"ParenthesesOpen(()"
"Identifier(str)"
"VectorOpen([)"
"NumberLiteral(4)"
"Whitespace( )"
"Keyword(as)"
"Whitespace( )"
"Identifier(u32)"
"VectorClose(])"
"Comma(,)"
"Whitespace( )"
"NumberLiteral(55349)"
"Whitespace( )"
"Keyword(as)"
"Whitespace( )"
"Identifier(u16)"
"Comma(,)"
"Whitespace( )"
"StringLiteral(\"char at 4\")"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(    )"
"Identifier(mustEqual)"
"ParenthesesOpen(()"
"Identifier(str)"
"VectorOpen([)"
"NumberLiteral(5)"
"Whitespace( )"
"Keyword(as)"
"Whitespace( )"
"Identifier(u32)"
"VectorClose(])"
"Comma(,)"
"Whitespace( )"
"NumberLiteral(56337)"
"Whitespace( )"
"Keyword(as)"
"Whitespace( )"
"Identifier(u16)"
"Comma(,)"
"Whitespace( )"
"StringLiteral(\"char at 5\")"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"CurlyBracesClose(})"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(END)"
"ParenthesesOpen(()"
"ParenthesesClose())"
"NewLine(\n\n)"
"Whitespace(  )"
"Identifier(START)"
"ParenthesesOpen(()"
"StringLiteral(\"String concatenation\")"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(    )"
"Keyword(val)"
"Whitespace( )"
"Identifier(x)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"StringLiteral(\"ds\")"
"Whitespace( )"
"Operator(++)"
"Whitespace( )"
"StringLiteral(\"sa\")"
"NewLine(\n)"
"Whitespace(    )"
"Identifier(mustEqual)"
"ParenthesesOpen(()"
"Identifier(x)"
"Operator(.)"
"Identifier(length)"
"Comma(,)"
"Whitespace( )"
"NumberLiteral(4)"
"Whitespace( )"
"Keyword(as)"
"Whitespace( )"
"Identifier(u32)"
"Comma(,)"
"Whitespace( )"
"StringLiteral(\"String.length must be 4\")"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"CurlyBracesClose(})"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(END)"
"ParenthesesOpen(()"
"ParenthesesClose())"
"NewLine(\n\n)"
"Whitespace(  )"
"Identifier(START)"
"ParenthesesOpen(()"
"StringLiteral(\"String concatenation UTF16\")"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(    )"
"Keyword(val)"
"Whitespace( )"
"Identifier(x)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"StringLiteral(\"ab\")"
"Whitespace( )"
"Operator(++)"
"Whitespace( )"
"StringLiteral(\"¬µ‚öúÔ∏é\")"
"NewLine(\n\n)"
"Whitespace(    )"
"Identifier(mustEqual)"
"ParenthesesOpen(()"
"Identifier(x)"
"Operator(.)"
"Identifier(length)"
"Comma(,)"
"Whitespace( )"
"NumberLiteral(5)"
"Whitespace( )"
"Keyword(as)"
"Whitespace( )"
"Identifier(u32)"
"Comma(,)"
"Whitespace( )"
"StringLiteral(\"String.length must be 5\")"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(    )"
"Identifier(mustEqual)"
"ParenthesesOpen(()"
"Identifier(x)"
"VectorOpen([)"
"NumberLiteral(0)"
"Whitespace( )"
"Keyword(as)"
"Whitespace( )"
"Identifier(u32)"
"VectorClose(])"
"Comma(,)"
"Whitespace( )"
"NumberLiteral(0x0061)"
"Comma(,)"
"Whitespace( )"
"StringLiteral(\"a assertion failed\")"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(    )"
"Identifier(mustEqual)"
"ParenthesesOpen(()"
"Identifier(x)"
"VectorOpen([)"
"NumberLiteral(1)"
"Whitespace( )"
"Keyword(as)"
"Whitespace( )"
"Identifier(u32)"
"VectorClose(])"
"Comma(,)"
"Whitespace( )"
"NumberLiteral(0x0062)"
"Comma(,)"
"Whitespace( )"
"StringLiteral(\"b assertion failed\")"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(    )"
"Identifier(mustEqual)"
"ParenthesesOpen(()"
"Identifier(x)"
"VectorOpen([)"
"NumberLiteral(2)"
"Whitespace( )"
"Keyword(as)"
"Whitespace( )"
"Identifier(u32)"
"VectorClose(])"
"Comma(,)"
"Whitespace( )"
"NumberLiteral(0x00B5)"
"Comma(,)"
"Whitespace( )"
"StringLiteral(\"¬µ assertion failed\")"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(    )"
"Identifier(mustEqual)"
"ParenthesesOpen(()"
"Identifier(x)"
"VectorOpen([)"
"NumberLiteral(3)"
"Whitespace( )"
"Keyword(as)"
"Whitespace( )"
"Identifier(u32)"
"VectorClose(])"
"Comma(,)"
"Whitespace( )"
"NumberLiteral(0x269C)"
"Comma(,)"
"Whitespace( )"
"StringLiteral(\"0x269C assertion failed\")"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(    )"
"Identifier(mustEqual)"
"ParenthesesOpen(()"
"Identifier(x)"
"VectorOpen([)"
"NumberLiteral(4)"
"Whitespace( )"
"Keyword(as)"
"Whitespace( )"
"Identifier(u32)"
"VectorClose(])"
"Comma(,)"
"Whitespace( )"
"NumberLiteral(0xFE0E)"
"Comma(,)"
"Whitespace( )"
"StringLiteral(\"0xFE0E assertion failed\")"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"CurlyBracesClose(})"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(END)"
"ParenthesesOpen(()"
"ParenthesesClose())"
"NewLine(\n)"
"CurlyBracesClose(})"
"EndOfFile"