"Keyword(import)"
"Whitespace( )"
"Identifier(support)"
"Operator(::)"
"Identifier(test)"
"NewLine(\n\n)"
"Keyword(enum)"
"Whitespace( )"
"Identifier(Tree)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(Empty)"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(Node)"
"ParenthesesOpen(()"
"Identifier(a)"
"Operator(:)"
"Whitespace( )"
"Identifier(Tree)"
"Whitespace( )"
"Operator(|)"
"Whitespace( )"
"Identifier(Forest)"
"ParenthesesClose())"
"NewLine(\n)"
"CurlyBracesClose(})"
"NewLine(\n\n)"
"Keyword(enum)"
"Whitespace( )"
"Identifier(Forest)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(Nil)"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(Cons)"
"ParenthesesOpen(()"
"Identifier(tree)"
"Operator(:)"
"Whitespace( )"
"Identifier(Tree)"
"Whitespace( )"
"Operator(|)"
"Whitespace( )"
"Identifier(Forest)"
"ParenthesesClose())"
"NewLine(\n)"
"CurlyBracesClose(})"
"NewLine(\n\n)"
"MacroDecoration(#[)"
"Identifier(export)"
"VectorClose(])"
"NewLine(\n)"
"Keyword(fun)"
"Whitespace( )"
"Identifier(main)"
"ParenthesesOpen(()"
"ParenthesesClose())"
"Operator(:)"
"Whitespace( )"
"Identifier(void)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(START)"
"ParenthesesOpen(()"
"StringLiteral(\"Forest & Tree tests\")"
"ParenthesesClose())"
"NewLine(\n\n)"
"Whitespace(  )"
"Keyword(var)"
"Whitespace( )"
"Identifier(a)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(Nil)"
"NewLine(\n)"
"Whitespace(  )"
"Keyword(var)"
"Whitespace( )"
"Identifier(b)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(Cons)"
"ParenthesesOpen(()"
"Identifier(Empty)"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"Keyword(var)"
"Whitespace( )"
"Identifier(c)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(Cons)"
"ParenthesesOpen(()"
"Identifier(Nil)"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"Keyword(var)"
"Whitespace( )"
"Identifier(d)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(Cons)"
"ParenthesesOpen(()"
"Identifier(Node)"
"ParenthesesOpen(()"
"Identifier(Empty)"
"ParenthesesClose())"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"Keyword(var)"
"Whitespace( )"
"Identifier(e)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(Node)"
"ParenthesesOpen(()"
"Identifier(Nil)"
"ParenthesesClose())"
"NewLine(\n\n)"
"Whitespace(  )"
"Identifier(verify)"
"ParenthesesOpen(()"
"Identifier(a)"
"Whitespace( )"
"Keyword(is)"
"Whitespace( )"
"Identifier(Nil)"
"Comma(,)"
"Whitespace( )"
"StringLiteral(\"a is Nil\")"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(verify)"
"ParenthesesOpen(()"
"Identifier(a)"
"Whitespace( )"
"Keyword(is)"
"Whitespace( )"
"Identifier(Forest)"
"Comma(,)"
"Whitespace( )"
"StringLiteral(\"a is Fores\")"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(verify)"
"ParenthesesOpen(()"
"Identifier(b)"
"Whitespace( )"
"Keyword(is)"
"Whitespace( )"
"Identifier(Forest)"
"Comma(,)"
"Whitespace( )"
"StringLiteral(\"b is Fores\")"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(verify)"
"ParenthesesOpen(()"
"Identifier(c)"
"Whitespace( )"
"Keyword(is)"
"Whitespace( )"
"Identifier(Cons)"
"Comma(,)"
"Whitespace( )"
"StringLiteral(\"c is Cons\")"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(verify)"
"ParenthesesOpen(()"
"Identifier(e)"
"Whitespace( )"
"Keyword(is)"
"Whitespace( )"
"Identifier(Node)"
"Comma(,)"
"Whitespace( )"
"StringLiteral(\"e is Node\")"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(verify)"
"ParenthesesOpen(()"
"Identifier(e)"
"Whitespace( )"
"Keyword(is)"
"Whitespace( )"
"Identifier(Tree)"
"Comma(,)"
"Whitespace( )"
"StringLiteral(\"e is Tree\")"
"ParenthesesClose())"
"NewLine(\n\n)"
"Whitespace(  )"
"Identifier(END)"
"ParenthesesOpen(()"
"ParenthesesClose())"
"NewLine(\n)"
"CurlyBracesClose(})"
"EndOfFile"