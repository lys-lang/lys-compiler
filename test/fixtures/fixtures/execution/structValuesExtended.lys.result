"Keyword(import)"
"Whitespace( )"
"Identifier(support)"
"Operator(::)"
"Identifier(test)"
"NewLine(\n\n)"
"Keyword(enum)"
"Whitespace( )"
"Identifier(Color)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(None)"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(Red)"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(Green)"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(Blue)"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(Custom)"
"ParenthesesOpen(()"
"Identifier(hex)"
"Operator(:)"
"Whitespace( )"
"Identifier(i32)"
"ParenthesesClose())"
"NewLine(\n)"
"CurlyBracesClose(})"
"NewLine(\n\n)"
"Keyword(struct)"
"Whitespace( )"
"Identifier(CatBag)"
"ParenthesesOpen(()"
"Identifier(a)"
"Operator(:)"
"Whitespace( )"
"Identifier(i32)"
"Comma(,)"
"Whitespace( )"
"Identifier(b)"
"Operator(:)"
"Whitespace( )"
"Identifier(boolean)"
"Comma(,)"
"Whitespace( )"
"Identifier(c)"
"Operator(:)"
"Whitespace( )"
"Identifier(f32)"
"Comma(,)"
"Whitespace( )"
"Identifier(d)"
"Operator(:)"
"Whitespace( )"
"Identifier(i64)"
"Comma(,)"
"Whitespace( )"
"Identifier(e)"
"Operator(:)"
"Whitespace( )"
"Identifier(f64)"
"Comma(,)"
"Whitespace( )"
"Identifier(f)"
"Operator(:)"
"Whitespace( )"
"Identifier(Color)"
"Comma(,)"
"Whitespace( )"
"Identifier(g)"
"Operator(:)"
"Whitespace( )"
"Identifier(Red)"
"Whitespace( )"
"Operator(|)"
"Whitespace( )"
"Identifier(None)"
"ParenthesesClose())"
"NewLine(\n\n)"
"MacroDecoration(#[)"
"Identifier(export)"
"VectorClose(])"
"NewLine(\n)"
"Keyword(fun)"
"Whitespace( )"
"Identifier(main)"
"ParenthesesOpen(()"
"ParenthesesClose())"
"Operator(:)"
"Whitespace( )"
"Identifier(void)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(START)"
"ParenthesesOpen(()"
"StringLiteral(\"struct values extended\")"
"ParenthesesClose())"
"NewLine(\n\n)"
"Whitespace(  )"
"Keyword(var)"
"Whitespace( )"
"Identifier(a)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(CatBag)"
"ParenthesesOpen(()"
"NumberLiteral(1)"
"Comma(,)"
"Whitespace( )"
"Keyword(true)"
"Comma(,)"
"Whitespace( )"
"NumberLiteral(3.0)"
"Comma(,)"
"Whitespace( )"
"NumberLiteral(0x8)"
"Whitespace( )"
"Keyword(as)"
"Whitespace( )"
"Identifier(i64)"
"Comma(,)"
"Whitespace( )"
"NumberLiteral(0.4)"
"Whitespace( )"
"Keyword(as)"
"Whitespace( )"
"Identifier(f64)"
"Comma(,)"
"Whitespace( )"
"Identifier(Red)"
"Comma(,)"
"Whitespace( )"
"Identifier(Red)"
"ParenthesesClose())"
"NewLine(\n\n)"
"Whitespace(  )"
"Identifier(verify)"
"ParenthesesOpen(()"
"Whitespace( )"
"Identifier(a)"
"Whitespace(   )"
"Keyword(is)"
"Whitespace( )"
"Identifier(CatBag)"
"Comma(,)"
"Whitespace( )"
"StringLiteral(\"A\")"
"Whitespace( )"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(verify)"
"ParenthesesOpen(()"
"Whitespace( )"
"Identifier(a)"
"Operator(.)"
"Identifier(a)"
"Whitespace( )"
"Operator(==)"
"Whitespace( )"
"NumberLiteral(1)"
"Comma(,)"
"Whitespace( )"
"StringLiteral(\"B\")"
"Whitespace( )"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(verify)"
"ParenthesesOpen(()"
"Whitespace( )"
"Identifier(a)"
"Operator(.)"
"Identifier(b)"
"Whitespace( )"
"Operator(==)"
"Whitespace( )"
"Keyword(true)"
"Comma(,)"
"Whitespace( )"
"StringLiteral(\"C\")"
"Whitespace( )"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(verify)"
"ParenthesesOpen(()"
"Whitespace( )"
"Identifier(a)"
"Operator(.)"
"Identifier(c)"
"Whitespace( )"
"Operator(==)"
"Whitespace( )"
"NumberLiteral(3.0)"
"Comma(,)"
"Whitespace( )"
"StringLiteral(\"D\")"
"Whitespace( )"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(verify)"
"ParenthesesOpen(()"
"Whitespace( )"
"Identifier(a)"
"Operator(.)"
"Identifier(d)"
"Whitespace( )"
"Operator(==)"
"Whitespace( )"
"NumberLiteral(0x8)"
"Comma(,)"
"Whitespace( )"
"StringLiteral(\"E\")"
"Whitespace( )"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(verify)"
"ParenthesesOpen(()"
"Whitespace( )"
"Identifier(a)"
"Operator(.)"
"Identifier(e)"
"Whitespace( )"
"Operator(==)"
"Whitespace( )"
"NumberLiteral(0.4)"
"Whitespace( )"
"Keyword(as)"
"Whitespace( )"
"Identifier(f64)"
"Comma(,)"
"Whitespace( )"
"StringLiteral(\"F\")"
"Whitespace( )"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(verify)"
"ParenthesesOpen(()"
"Whitespace( )"
"Identifier(a)"
"Operator(.)"
"Identifier(f)"
"Whitespace( )"
"Keyword(is)"
"Whitespace( )"
"Identifier(Red)"
"Comma(,)"
"Whitespace( )"
"StringLiteral(\"G\")"
"Whitespace( )"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(verify)"
"ParenthesesOpen(()"
"Whitespace( )"
"Identifier(a)"
"Operator(.)"
"Identifier(g)"
"Whitespace( )"
"Keyword(is)"
"Whitespace( )"
"Identifier(Red)"
"Comma(,)"
"Whitespace( )"
"StringLiteral(\"H\")"
"Whitespace( )"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(verify)"
"ParenthesesOpen(()"
"Whitespace( )"
"Identifier(a)"
"Operator(.)"
"Identifier(f)"
"Whitespace( )"
"Keyword(is)"
"Whitespace( )"
"Identifier(Color)"
"Comma(,)"
"Whitespace( )"
"StringLiteral(\"I\")"
"Whitespace( )"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(verify)"
"ParenthesesOpen(()"
"Whitespace( )"
"Identifier(a)"
"Operator(.)"
"Identifier(g)"
"Whitespace( )"
"Keyword(is)"
"Whitespace( )"
"Identifier(Color)"
"Comma(,)"
"Whitespace( )"
"StringLiteral(\"J\")"
"Whitespace( )"
"ParenthesesClose())"
"NewLine(\n\n)"
"Whitespace(  )"
"Identifier(a)"
"Operator(.)"
"Identifier(a)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"NumberLiteral(5)"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(a)"
"Operator(.)"
"Identifier(b)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Keyword(false)"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(a)"
"Operator(.)"
"Identifier(c)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Operator(-)"
"NumberLiteral(999.0)"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(a)"
"Operator(.)"
"Identifier(d)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"NumberLiteral(0xdeadbeef)"
"Whitespace( )"
"Keyword(as)"
"Whitespace( )"
"Identifier(i64)"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(a)"
"Operator(.)"
"Identifier(e)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"NumberLiteral(6.08e23)"
"Whitespace( )"
"Keyword(as)"
"Whitespace( )"
"Identifier(f64)"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(printNumber)"
"ParenthesesOpen(()"
"Identifier(a)"
"Operator(.)"
"Identifier(c)"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(a)"
"Operator(.)"
"Identifier(f)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(Custom)"
"ParenthesesOpen(()"
"NumberLiteral(333)"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(printNumber)"
"ParenthesesOpen(()"
"Identifier(a)"
"Operator(.)"
"Identifier(c)"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(a)"
"Operator(.)"
"Identifier(g)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(None)"
"NewLine(\n\n\n)"
"Whitespace(  )"
"Identifier(printNumber)"
"ParenthesesOpen(()"
"NumberLiteral(0)"
"ParenthesesClose())"
"NewLine(\n\n)"
"Whitespace(  )"
"Identifier(printNumber)"
"ParenthesesOpen(()"
"Identifier(a)"
"Operator(.)"
"Identifier(a)"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(verify)"
"ParenthesesOpen(()"
"Whitespace( )"
"Identifier(a)"
"Operator(.)"
"Identifier(a)"
"Whitespace( )"
"Operator(==)"
"Whitespace( )"
"NumberLiteral(5)"
"Comma(,)"
"Whitespace( )"
"StringLiteral(\"K\")"
"Whitespace( )"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(printNumber)"
"ParenthesesOpen(()"
"Whitespace( )"
"Keyword(if)"
"ParenthesesOpen(()"
"Identifier(a)"
"Operator(.)"
"Identifier(b)"
"ParenthesesClose())"
"Whitespace( )"
"NumberLiteral(1)"
"Whitespace( )"
"Keyword(else)"
"Whitespace( )"
"NumberLiteral(0)"
"Whitespace( )"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(verify)"
"ParenthesesOpen(()"
"Whitespace( )"
"Identifier(a)"
"Operator(.)"
"Identifier(b)"
"Whitespace( )"
"Operator(==)"
"Whitespace( )"
"Keyword(false)"
"Comma(,)"
"Whitespace( )"
"StringLiteral(\"L\")"
"Whitespace( )"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(printNumber)"
"ParenthesesOpen(()"
"Identifier(a)"
"Operator(.)"
"Identifier(c)"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(verify)"
"ParenthesesOpen(()"
"Whitespace( )"
"Identifier(a)"
"Operator(.)"
"Identifier(c)"
"Whitespace( )"
"Operator(==)"
"Whitespace( )"
"Operator(-)"
"NumberLiteral(999.0)"
"Comma(,)"
"Whitespace( )"
"StringLiteral(\"M\")"
"Whitespace( )"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(verify)"
"ParenthesesOpen(()"
"Whitespace( )"
"Identifier(a)"
"Operator(.)"
"Identifier(d)"
"Whitespace( )"
"Operator(==)"
"Whitespace( )"
"NumberLiteral(0xdeadbeef)"
"Whitespace( )"
"Keyword(as)"
"Whitespace( )"
"Identifier(i64)"
"Comma(,)"
"Whitespace( )"
"StringLiteral(\"N\")"
"Whitespace( )"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(verify)"
"ParenthesesOpen(()"
"Whitespace( )"
"Identifier(a)"
"Operator(.)"
"Identifier(e)"
"Whitespace( )"
"Operator(==)"
"Whitespace( )"
"NumberLiteral(6.08e23)"
"Whitespace( )"
"Keyword(as)"
"Whitespace( )"
"Identifier(f64)"
"Comma(,)"
"Whitespace( )"
"StringLiteral(\"Ã‘\")"
"Whitespace( )"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(verify)"
"ParenthesesOpen(()"
"Whitespace( )"
"Identifier(a)"
"Operator(.)"
"Identifier(f)"
"Whitespace( )"
"Keyword(is)"
"Whitespace( )"
"Identifier(Custom)"
"Comma(,)"
"Whitespace( )"
"StringLiteral(\"O\")"
"Whitespace( )"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(verify)"
"ParenthesesOpen(()"
"Whitespace( )"
"Identifier(a)"
"Operator(.)"
"Identifier(g)"
"Whitespace( )"
"Keyword(is)"
"Whitespace( )"
"Identifier(None)"
"Comma(,)"
"Whitespace( )"
"StringLiteral(\"P\")"
"Whitespace( )"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(verify)"
"ParenthesesOpen(()"
"Whitespace( )"
"Identifier(a)"
"Operator(.)"
"Identifier(f)"
"Whitespace( )"
"Keyword(is)"
"Whitespace( )"
"Identifier(Color)"
"Comma(,)"
"Whitespace( )"
"StringLiteral(\"Q\")"
"Whitespace( )"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"Identifier(verify)"
"ParenthesesOpen(()"
"Whitespace( )"
"Identifier(a)"
"Operator(.)"
"Identifier(g)"
"Whitespace( )"
"Keyword(is)"
"Whitespace( )"
"Identifier(Color)"
"Comma(,)"
"Whitespace( )"
"StringLiteral(\"V\")"
"Whitespace( )"
"ParenthesesClose())"
"NewLine(\n\n)"
"Whitespace(  )"
"Identifier(verify)"
"ParenthesesOpen(()"
"Whitespace( )"
"Identifier(a)"
"Operator(.)"
"Identifier(f)"
"Whitespace( )"
"Keyword(is)"
"Whitespace( )"
"Identifier(Custom)"
"Comma(,)"
"Whitespace( )"
"StringLiteral(\"W\")"
"Whitespace( )"
"ParenthesesClose())"
"NewLine(\n\n)"
"Whitespace(  )"
"Keyword(match)"
"Whitespace( )"
"Identifier(a)"
"Operator(.)"
"Identifier(f)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(    )"
"Keyword(case)"
"Whitespace( )"
"Identifier(x)"
"Whitespace( )"
"Keyword(is)"
"Whitespace( )"
"Identifier(Custom)"
"Whitespace( )"
"Operator(->)"
"Whitespace( )"
"Identifier(verify)"
"ParenthesesOpen(()"
"Whitespace( )"
"Identifier(x)"
"Operator(.)"
"Identifier(hex)"
"Whitespace( )"
"Operator(==)"
"Whitespace( )"
"NumberLiteral(333)"
"Comma(,)"
"Whitespace( )"
"StringLiteral(\"X\")"
"Whitespace( )"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(    )"
"Keyword(else)"
"Whitespace( )"
"Operator(->)"
"Whitespace( )"
"Identifier(verify)"
"ParenthesesOpen(()"
"Whitespace( )"
"Keyword(false)"
"Comma(,)"
"Whitespace( )"
"StringLiteral(\"Y\")"
"Whitespace( )"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"CurlyBracesClose(})"
"NewLine(\n\n)"
"Whitespace(  )"
"Identifier(END)"
"ParenthesesOpen(()"
"ParenthesesClose())"
"NewLine(\n)"
"CurlyBracesClose(})"
"EndOfFile"