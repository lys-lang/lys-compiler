|-Document(0,411)
  |-FunctionDirective(0,55)
    |-Decorators(0,10)
      |-Decorator(0,10)
        |-NameIdentifier(2,8)
          |-Identifier=export
    |-FunDeclaration(10,55)
      |-FunctionName(14,18)
        |-NameIdentifier(14,18)
          |-Identifier=test
      |-TypeParameters(18,18)
        <Rule0>
      |-FunctionParamsList(18,20)
        |-(List)(19,19)
          <Rule0>
      |-ReturnType(20,27)
        |-Type(22,26)
          |-Reference(22,26)
            |-QName(22,26)
              |-NameIdentifier(22,26)
                |-Identifier=void
      |-FunctionBody(27,55)
        |-CodeBlock(29,55)
          |-LoopExpression(33,53)
            |-CodeBlock(38,53)
              |-BreakStatement(44,49)
                <Rule0>
  |-FunctionDirective(58,158)
    |-Decorators(58,68)
      |-Decorator(58,68)
        |-NameIdentifier(60,66)
          |-Identifier=export
    |-FunDeclaration(68,158)
      |-FunctionName(72,77)
        |-NameIdentifier(72,77)
          |-Identifier=test1
      |-TypeParameters(77,77)
        <Rule0>
      |-FunctionParamsList(77,79)
        |-(List)(78,78)
          <Rule0>
      |-ReturnType(79,86)
        |-Type(81,85)
          |-Reference(81,85)
            |-QName(81,85)
              |-NameIdentifier(81,85)
                |-Identifier=void
      |-FunctionBody(86,158)
        |-CodeBlock(88,158)
          |-VarDeclaration(92,101)
            |-NameIdentifier(96,97)
              |-Identifier=x
            |-NumberLiteral=1
          |-LoopExpression(104,156)
            |-CodeBlock(109,156)
              |-BinaryOpExpression(115,124)
                |-Reference(115,116)
                  |-QName(115,116)
                    |-NameIdentifier(115,116)
                      |-Identifier=x
                |-Operator==
                |-BinaryOpExpression(119,124)
                  |-Reference(119,120)
                    |-QName(119,120)
                      |-NameIdentifier(119,120)
                        |-Identifier=x
                  |-Operator=+
                  |-NumberLiteral=1
              |-IfExpression(129,152)
                |-Condition(132,140)
                  |-BinaryOpExpression(133,139)
                    |-Reference(133,134)
                      |-QName(133,134)
                        |-NameIdentifier(133,134)
                          |-Identifier=x
                    |-Operator=>
                    |-NumberLiteral=10
                |-BreakStatement(147,152)
                  <Rule0>
  |-FunctionDirective(160,245)
    |-Decorators(160,170)
      |-Decorator(160,170)
        |-NameIdentifier(162,168)
          |-Identifier=export
    |-FunDeclaration(170,245)
      |-FunctionName(174,179)
        |-NameIdentifier(174,179)
          |-Identifier=test2
      |-TypeParameters(179,179)
        <Rule0>
      |-FunctionParamsList(179,181)
        |-(List)(180,180)
          <Rule0>
      |-ReturnType(181,188)
        |-Type(183,187)
          |-Reference(183,187)
            |-QName(183,187)
              |-NameIdentifier(183,187)
                |-Identifier=void
      |-FunctionBody(188,245)
        |-CodeBlock(190,245)
          |-VarDeclaration(194,203)
            |-NameIdentifier(198,199)
              |-Identifier=x
            |-NumberLiteral=1
          |-LoopExpression(206,243)
            |-CodeBlock(211,243)
              |-BinaryOpExpression(217,226)
                |-Reference(217,218)
                  |-QName(217,218)
                    |-NameIdentifier(217,218)
                      |-Identifier=x
                |-Operator==
                |-BinaryOpExpression(221,226)
                  |-Reference(221,222)
                    |-QName(221,222)
                      |-NameIdentifier(221,222)
                        |-Identifier=x
                  |-Operator=+
                  |-NumberLiteral=1
              |-ContinueStatement(231,239)
                <Rule0>
  |-FunctionDirective(248,411)
    |-Decorators(248,258)
      |-Decorator(248,258)
        |-NameIdentifier(250,256)
          |-Identifier=export
    |-FunDeclaration(258,411)
      |-FunctionName(262,267)
        |-NameIdentifier(262,267)
          |-Identifier=test3
      |-TypeParameters(267,267)
        <Rule0>
      |-FunctionParamsList(267,269)
        |-(List)(268,268)
          <Rule0>
      |-ReturnType(269,276)
        |-Type(271,275)
          |-Reference(271,275)
            |-QName(271,275)
              |-NameIdentifier(271,275)
                |-Identifier=void
      |-FunctionBody(276,411)
        |-CodeBlock(278,411)
          |-VarDeclaration(282,291)
            |-NameIdentifier(286,287)
              |-Identifier=x
            |-NumberLiteral=1
          |-LoopExpression(294,409)
            |-CodeBlock(299,409)
              |-LoopExpression(305,366)
                |-CodeBlock(310,366)
                  |-BinaryOpExpression(318,327)
                    |-Reference(318,319)
                      |-QName(318,319)
                        |-NameIdentifier(318,319)
                          |-Identifier=x
                    |-Operator==
                    |-BinaryOpExpression(322,327)
                      |-Reference(322,323)
                        |-QName(322,323)
                          |-NameIdentifier(322,323)
                            |-Identifier=x
                      |-Operator=+
                      |-NumberLiteral=1
                  |-IfExpression(334,360)
                    |-Condition(337,346)
                      |-BinaryOpExpression(338,345)
                        |-Reference(338,339)
                          |-QName(338,339)
                            |-NameIdentifier(338,339)
                              |-Identifier=x
                        |-Operator===
                        |-NumberLiteral=10
                    |-BreakStatement(355,360)
                      <Rule0>
              |-IfExpression(371,395)
                |-Condition(374,383)
                  |-BinaryOpExpression(375,382)
                    |-Reference(375,376)
                      |-QName(375,376)
                        |-NameIdentifier(375,376)
                          |-Identifier=x
                    |-Operator=>
                    |-NumberLiteral=100
                |-BreakStatement(390,395)
                  <Rule0>
              |-BreakStatement(400,405)
                <Rule0>
  |-EndOfFile=