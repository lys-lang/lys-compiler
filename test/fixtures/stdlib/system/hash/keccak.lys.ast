|-Document
  |-Directive
    |-StructDirective
      |-STRUCT_KEYWORD
        |-Identifier=struct
      |-StructDeclaration
        |-NameIdentifier
          |-Identifier=Keccak
        |-FunctionParamsList
          |-ParameterList
            |-Parameter
              |-NameIdentifier
                |-Identifier=data
              |-OfType
                |-Operator=:
                |-Type
                  |-UnionType
                    |-IntersectionType
                      |-AtomType
                        |-Reference
                          |-QName
                            |-NameIdentifier
                              |-Identifier=bytes
            |-WS
              <Rule0>
            |-Parameter
              |-NameIdentifier
                |-Identifier=result
              |-OfType
                |-Operator=:
                |-Type
                  |-UnionType
                    |-IntersectionType
                      |-AtomType
                        |-Reference
                          |-QName
                            |-NameIdentifier
                              |-Identifier=bytes
  |-Directive
    |-ImplDirective
      |-IMPL_KEYWORD
        |-Identifier=impl
      |-Reference
        |-QName
          |-NameIdentifier
            |-Identifier=Keccak
      |-NamespaceElementList
        |-CurlyBracesOpen={
        |-ImplInnerDirective
          |-FunctionDirective
            |-Decorators
              <Rule0>
            |-FunDeclaration
              |-FunctionName
                |-NameIdentifier
                  |-Identifier=apply
              |-FunctionParamsList
                |-ParameterList
                  <Rule0>
              |-OfType
                |-Operator=:
                |-Type
                  |-UnionType
                    |-IntersectionType
                      |-AtomType
                        |-Reference
                          |-QName
                            |-NameIdentifier
                              |-Identifier=Keccak
              |-FunAssignExpression
                |-Operator==
                |-Expression
                  |-AssignExpression
                    |-OrExpression
                      |-AndExpression
                        |-BitOrExpression
                          |-BitXorExpression
                            |-BitAndExpression
                              |-EqExpression
                                |-RelExpression
                                  |-ShiftExpression
                                    |-AddExpression
                                      |-MulExpression
                                        |-IsExpression
                                          |-AsExpression
                                            |-UnaryExpression
                                              |-AtomicExpression
                                                |-Value
                                                  |-CodeBlock
                                                    |-Statement
                                                      |-ValDeclaration
                                                        |-NameIdentifier
                                                          |-Identifier=context
                                                        |-Assign
                                                          |-Operator==
                                                          |-Expression
                                                            |-AssignExpression
                                                              |-OrExpression
                                                                |-AndExpression
                                                                  |-BitOrExpression
                                                                    |-BitXorExpression
                                                                      |-BitAndExpression
                                                                        |-EqExpression
                                                                          |-RelExpression
                                                                            |-ShiftExpression
                                                                              |-AddExpression
                                                                                |-MulExpression
                                                                                  |-IsExpression
                                                                                    |-AsExpression
                                                                                      |-UnaryExpression
                                                                                        |-AtomicExpression
                                                                                          |-Value
                                                                                            |-Reference
                                                                                              |-QName
                                                                                                |-NameIdentifier
                                                                                                  |-Identifier=bytes
                                                                                          |-CallArguments
                                                                                            |-Expression
                                                                                              |-AssignExpression
                                                                                                |-OrExpression
                                                                                                  |-AndExpression
                                                                                                    |-BitOrExpression
                                                                                                      |-BitXorExpression
                                                                                                        |-BitAndExpression
                                                                                                          |-EqExpression
                                                                                                            |-RelExpression
                                                                                                              |-ShiftExpression
                                                                                                                |-AddExpression
                                                                                                                  |-MulExpression
                                                                                                                    |-IsExpression
                                                                                                                      |-AsExpression
                                                                                                                        |-UnaryExpression
                                                                                                                          |-AtomicExpression
                                                                                                                            |-Value
                                                                                                                              |-Literal
                                                                                                                                |-PostfixNumber
                                                                                                                                  |-NumberLiteral=616
                                                                                            |-WS
                                                                                              <Rule0>
                                                                                            |-<UNEXPECTED TOKEN>=as
                                                                                            |-<UNEXPECTED TOKEN>= 
                                                                                            |-<UNEXPECTED TOKEN>=u32
                                                    |-NewLine=

                                                    |-Statement
                                                      |-ValDeclaration
                                                        |-NameIdentifier
                                                          |-Identifier=result
                                                        |-Assign
                                                          |-Operator==
                                                          |-Expression
                                                            |-AssignExpression
                                                              |-OrExpression
                                                                |-AndExpression
                                                                  |-BitOrExpression
                                                                    |-BitXorExpression
                                                                      |-BitAndExpression
                                                                        |-EqExpression
                                                                          |-RelExpression
                                                                            |-ShiftExpression
                                                                              |-AddExpression
                                                                                |-MulExpression
                                                                                  |-IsExpression
                                                                                    |-AsExpression
                                                                                      |-UnaryExpression
                                                                                        |-AtomicExpression
                                                                                          |-Value
                                                                                            |-Reference
                                                                                              |-QName
                                                                                                |-NameIdentifier
                                                                                                  |-Identifier=bytes
                                                                                          |-CallArguments
                                                                                            |-Expression
                                                                                              |-AssignExpression
                                                                                                |-OrExpression
                                                                                                  |-AndExpression
                                                                                                    |-BitOrExpression
                                                                                                      |-BitXorExpression
                                                                                                        |-BitAndExpression
                                                                                                          |-EqExpression
                                                                                                            |-RelExpression
                                                                                                              |-ShiftExpression
                                                                                                                |-AddExpression
                                                                                                                  |-MulExpression
                                                                                                                    |-IsExpression
                                                                                                                      |-AsExpression
                                                                                                                        |-UnaryExpression
                                                                                                                          |-AtomicExpression
                                                                                                                            |-Value
                                                                                                                              |-Literal
                                                                                                                                |-PostfixNumber
                                                                                                                                  |-NumberLiteral=32
                                                                                            |-WS
                                                                                              <Rule0>
                                                                                            |-<UNEXPECTED TOKEN>=as
                                                                                            |-<UNEXPECTED TOKEN>= 
                                                                                            |-<UNEXPECTED TOKEN>=u32
                                                    |-NewLine=


                                                    |-Statement
                                                      |-Expression
                                                        |-AssignExpression
                                                          |-OrExpression
                                                            |-AndExpression
                                                              |-BitOrExpression
                                                                |-BitXorExpression
                                                                  |-BitAndExpression
                                                                    |-EqExpression
                                                                      |-RelExpression
                                                                        |-ShiftExpression
                                                                          |-AddExpression
                                                                            |-MulExpression
                                                                              |-IsExpression
                                                                                |-AsExpression
                                                                                  |-UnaryExpression
                                                                                    |-AtomicExpression
                                                                                      |-Value
                                                                                        |-Reference
                                                                                          |-QName
                                                                                            |-NameIdentifier
                                                                                              |-Identifier=keccakInit
                                                                                      |-CallArguments
                                                                                        |-Expression
                                                                                          |-AssignExpression
                                                                                            |-OrExpression
                                                                                              |-AndExpression
                                                                                                |-BitOrExpression
                                                                                                  |-BitXorExpression
                                                                                                    |-BitAndExpression
                                                                                                      |-EqExpression
                                                                                                        |-RelExpression
                                                                                                          |-ShiftExpression
                                                                                                            |-AddExpression
                                                                                                              |-MulExpression
                                                                                                                |-IsExpression
                                                                                                                  |-AsExpression
                                                                                                                    |-UnaryExpression
                                                                                                                      |-AtomicExpression
                                                                                                                        |-Value
                                                                                                                          |-Reference
                                                                                                                            |-QName
                                                                                                                              |-NameIdentifier
                                                                                                                                |-Identifier=context
                                                                                                                        |-MemberExpression
                                                                                                                          |-BinMemberOperator
                                                                                                                            |-Operator=.
                                                                                                                          |-NameIdentifier
                                                                                                                            |-Identifier=ptr
                                                    |-NewLine=


                                                    |-Statement
                                                      |-Expression
                                                        |-AssignExpression
                                                          |-OrExpression
                                                            |-AndExpression
                                                              |-BitOrExpression
                                                                |-BitXorExpression
                                                                  |-BitAndExpression
                                                                    |-EqExpression
                                                                      |-RelExpression
                                                                        |-ShiftExpression
                                                                          |-AddExpression
                                                                            |-MulExpression
                                                                              |-IsExpression
                                                                                |-AsExpression
                                                                                  |-UnaryExpression
                                                                                    |-AtomicExpression
                                                                                      |-Value
                                                                                        |-Reference
                                                                                          |-QName
                                                                                            |-NameIdentifier
                                                                                              |-Identifier=Keccak
                                                                                      |-CallArguments
                                                                                        |-Expression
                                                                                          |-AssignExpression
                                                                                            |-OrExpression
                                                                                              |-AndExpression
                                                                                                |-BitOrExpression
                                                                                                  |-BitXorExpression
                                                                                                    |-BitAndExpression
                                                                                                      |-EqExpression
                                                                                                        |-RelExpression
                                                                                                          |-ShiftExpression
                                                                                                            |-AddExpression
                                                                                                              |-MulExpression
                                                                                                                |-IsExpression
                                                                                                                  |-AsExpression
                                                                                                                    |-UnaryExpression
                                                                                                                      |-AtomicExpression
                                                                                                                        |-Value
                                                                                                                          |-Reference
                                                                                                                            |-QName
                                                                                                                              |-NameIdentifier
                                                                                                                                |-Identifier=context
                                                                                        |-WS
                                                                                          <Rule0>
                                                                                        |-Expression
                                                                                          |-AssignExpression
                                                                                            |-OrExpression
                                                                                              |-AndExpression
                                                                                                |-BitOrExpression
                                                                                                  |-BitXorExpression
                                                                                                    |-BitAndExpression
                                                                                                      |-EqExpression
                                                                                                        |-RelExpression
                                                                                                          |-ShiftExpression
                                                                                                            |-AddExpression
                                                                                                              |-MulExpression
                                                                                                                |-IsExpression
                                                                                                                  |-AsExpression
                                                                                                                    |-UnaryExpression
                                                                                                                      |-AtomicExpression
                                                                                                                        |-Value
                                                                                                                          |-Reference
                                                                                                                            |-QName
                                                                                                                              |-NameIdentifier
                                                                                                                                |-Identifier=result
        |-ImplInnerDirective
          |-FunctionDirective
            |-Decorators
              <Rule0>
            |-FunDeclaration
              |-FunctionName
                |-NameIdentifier
                  |-Identifier=reset
              |-FunctionParamsList
                |-ParameterList
                  |-Parameter
                    |-NameIdentifier
                      |-Identifier=self
                    |-OfType
                      |-Operator=:
                      |-Type
                        |-UnionType
                          |-IntersectionType
                            |-AtomType
                              |-Reference
                                |-QName
                                  |-NameIdentifier
                                    |-Identifier=Keccak
              |-OfType
                |-Operator=:
                |-Type
                  |-UnionType
                    |-IntersectionType
                      |-AtomType
                        |-Reference
                          |-QName
                            |-NameIdentifier
                              |-Identifier=void
              |-FunAssignExpression
                |-Operator==
                |-Expression
                  |-AssignExpression
                    |-OrExpression
                      |-AndExpression
                        |-BitOrExpression
                          |-BitXorExpression
                            |-BitAndExpression
                              |-EqExpression
                                |-RelExpression
                                  |-ShiftExpression
                                    |-AddExpression
                                      |-MulExpression
                                        |-IsExpression
                                          |-AsExpression
                                            |-UnaryExpression
                                              |-AtomicExpression
                                                |-Value
                                                  |-CodeBlock
                                                    |-Statement
                                                      |-Expression
                                                        |-AssignExpression
                                                          |-OrExpression
                                                            |-AndExpression
                                                              |-BitOrExpression
                                                                |-BitXorExpression
                                                                  |-BitAndExpression
                                                                    |-EqExpression
                                                                      |-RelExpression
                                                                        |-ShiftExpression
                                                                          |-AddExpression
                                                                            |-MulExpression
                                                                              |-IsExpression
                                                                                |-AsExpression
                                                                                  |-UnaryExpression
                                                                                    |-AtomicExpression
                                                                                      |-Value
                                                                                        |-Reference
                                                                                          |-QName
                                                                                            |-NameIdentifier
                                                                                              |-Identifier=keccakInit
                                                                                      |-CallArguments
                                                                                        |-Expression
                                                                                          |-AssignExpression
                                                                                            |-OrExpression
                                                                                              |-AndExpression
                                                                                                |-BitOrExpression
                                                                                                  |-BitXorExpression
                                                                                                    |-BitAndExpression
                                                                                                      |-EqExpression
                                                                                                        |-RelExpression
                                                                                                          |-ShiftExpression
                                                                                                            |-AddExpression
                                                                                                              |-MulExpression
                                                                                                                |-IsExpression
                                                                                                                  |-AsExpression
                                                                                                                    |-UnaryExpression
                                                                                                                      |-AtomicExpression
                                                                                                                        |-Value
                                                                                                                          |-Reference
                                                                                                                            |-QName
                                                                                                                              |-NameIdentifier
                                                                                                                                |-Identifier=self
                                                                                                                        |-MemberExpression
                                                                                                                          |-BinMemberOperator
                                                                                                                            |-Operator=.
                                                                                                                          |-NameIdentifier
                                                                                                                            |-Identifier=data
                                                                                                                        |-MemberExpression
                                                                                                                          |-BinMemberOperator
                                                                                                                            |-Operator=.
                                                                                                                          |-NameIdentifier
                                                                                                                            |-Identifier=ptr
        |-ImplInnerDirective
          |-FunctionDirective
            |-Decorators
              <Rule0>
            |-FunDeclaration
              |-FunctionName
                |-NameIdentifier
                  |-Identifier=update
              |-FunctionParamsList
                |-ParameterList
                  |-Parameter
                    |-NameIdentifier
                      |-Identifier=self
                    |-OfType
                      |-Operator=:
                      |-Type
                        |-UnionType
                          |-IntersectionType
                            |-AtomType
                              |-Reference
                                |-QName
                                  |-NameIdentifier
                                    |-Identifier=Keccak
                  |-WS
                    <Rule0>
                  |-Parameter
                    |-NameIdentifier
                      |-Identifier=data
                    |-OfType
                      |-Operator=:
                      |-Type
                        |-UnionType
                          |-IntersectionType
                            |-AtomType
                              |-Reference
                                |-QName
                                  |-NameIdentifier
                                    |-Identifier=bytes
              |-OfType
                |-Operator=:
                |-Type
                  |-UnionType
                    |-IntersectionType
                      |-AtomType
                        |-Reference
                          |-QName
                            |-NameIdentifier
                              |-Identifier=void
              |-FunAssignExpression
                |-Operator==
                |-Expression
                  |-AssignExpression
                    |-OrExpression
                      |-AndExpression
                        |-BitOrExpression
                          |-BitXorExpression
                            |-BitAndExpression
                              |-EqExpression
                                |-RelExpression
                                  |-ShiftExpression
                                    |-AddExpression
                                      |-MulExpression
                                        |-IsExpression
                                          |-AsExpression
                                            |-UnaryExpression
                                              |-AtomicExpression
                                                |-Value
                                                  |-CodeBlock
                                                    |-Statement
                                                      |-Expression
                                                        |-AssignExpression
                                                          |-OrExpression
                                                            |-AndExpression
                                                              |-BitOrExpression
                                                                |-BitXorExpression
                                                                  |-BitAndExpression
                                                                    |-EqExpression
                                                                      |-RelExpression
                                                                        |-ShiftExpression
                                                                          |-AddExpression
                                                                            |-MulExpression
                                                                              |-IsExpression
                                                                                |-AsExpression
                                                                                  |-UnaryExpression
                                                                                    |-AtomicExpression
                                                                                      |-Value
                                                                                        |-Reference
                                                                                          |-QName
                                                                                            |-NameIdentifier
                                                                                              |-Identifier=update
                                                                                      |-CallArguments
                                                                                        |-Expression
                                                                                          |-AssignExpression
                                                                                            |-OrExpression
                                                                                              |-AndExpression
                                                                                                |-BitOrExpression
                                                                                                  |-BitXorExpression
                                                                                                    |-BitAndExpression
                                                                                                      |-EqExpression
                                                                                                        |-RelExpression
                                                                                                          |-ShiftExpression
                                                                                                            |-AddExpression
                                                                                                              |-MulExpression
                                                                                                                |-IsExpression
                                                                                                                  |-AsExpression
                                                                                                                    |-UnaryExpression
                                                                                                                      |-AtomicExpression
                                                                                                                        |-Value
                                                                                                                          |-Reference
                                                                                                                            |-QName
                                                                                                                              |-NameIdentifier
                                                                                                                                |-Identifier=self
                                                                                        |-WS
                                                                                          <Rule0>
                                                                                        |-Expression
                                                                                          |-AssignExpression
                                                                                            |-OrExpression
                                                                                              |-AndExpression
                                                                                                |-BitOrExpression
                                                                                                  |-BitXorExpression
                                                                                                    |-BitAndExpression
                                                                                                      |-EqExpression
                                                                                                        |-RelExpression
                                                                                                          |-ShiftExpression
                                                                                                            |-AddExpression
                                                                                                              |-MulExpression
                                                                                                                |-IsExpression
                                                                                                                  |-AsExpression
                                                                                                                    |-UnaryExpression
                                                                                                                      |-AtomicExpression
                                                                                                                        |-Value
                                                                                                                          |-Reference
                                                                                                                            |-QName
                                                                                                                              |-NameIdentifier
                                                                                                                                |-Identifier=data
                                                                                                                        |-MemberExpression
                                                                                                                          |-BinMemberOperator
                                                                                                                            |-Operator=.
                                                                                                                          |-NameIdentifier
                                                                                                                            |-Identifier=ptr
                                                                                        |-WS
                                                                                          <Rule0>
                                                                                        |-Expression
                                                                                          |-AssignExpression
                                                                                            |-OrExpression
                                                                                              |-AndExpression
                                                                                                |-BitOrExpression
                                                                                                  |-BitXorExpression
                                                                                                    |-BitAndExpression
                                                                                                      |-EqExpression
                                                                                                        |-RelExpression
                                                                                                          |-ShiftExpression
                                                                                                            |-AddExpression
                                                                                                              |-MulExpression
                                                                                                                |-IsExpression
                                                                                                                  |-AsExpression
                                                                                                                    |-UnaryExpression
                                                                                                                      |-AtomicExpression
                                                                                                                        |-Value
                                                                                                                          |-Reference
                                                                                                                            |-QName
                                                                                                                              |-NameIdentifier
                                                                                                                                |-Identifier=data
                                                                                                                        |-MemberExpression
                                                                                                                          |-BinMemberOperator
                                                                                                                            |-Operator=.
                                                                                                                          |-NameIdentifier
                                                                                                                            |-Identifier=length
        |-ImplInnerDirective
          |-FunctionDirective
            |-Decorators
              <Rule0>
            |-FunDeclaration
              |-FunctionName
                |-NameIdentifier
                  |-Identifier=update
              |-FunctionParamsList
                |-ParameterList
                  |-Parameter
                    |-NameIdentifier
                      |-Identifier=self
                    |-OfType
                      |-Operator=:
                      |-Type
                        |-UnionType
                          |-IntersectionType
                            |-AtomType
                              |-Reference
                                |-QName
                                  |-NameIdentifier
                                    |-Identifier=Keccak
                  |-WS
                    <Rule0>
                  |-Parameter
                    |-NameIdentifier
                      |-Identifier=address
                    |-OfType
                      |-Operator=:
                      |-Type
                        |-UnionType
                          |-IntersectionType
                            |-AtomType
                              |-Reference
                                |-QName
                                  |-NameIdentifier
                                    |-Identifier=u32
                  |-WS
                    <Rule0>
                  |-Parameter
                    |-NameIdentifier
                      |-Identifier=length
                    |-OfType
                      |-Operator=:
                      |-Type
                        |-UnionType
                          |-IntersectionType
                            |-AtomType
                              |-Reference
                                |-QName
                                  |-NameIdentifier
                                    |-Identifier=u32
              |-OfType
                |-Operator=:
                |-Type
                  |-UnionType
                    |-IntersectionType
                      |-AtomType
                        |-Reference
                          |-QName
                            |-NameIdentifier
                              |-Identifier=void
              |-FunAssignExpression
                |-Operator==
                |-Expression
                  |-AssignExpression
                    |-OrExpression
                      |-AndExpression
                        |-BitOrExpression
                          |-BitXorExpression
                            |-BitAndExpression
                              |-EqExpression
                                |-RelExpression
                                  |-ShiftExpression
                                    |-AddExpression
                                      |-MulExpression
                                        |-IsExpression
                                          |-AsExpression
                                            |-UnaryExpression
                                              |-AtomicExpression
                                                |-Value
                                                  |-CodeBlock
                                                    |-Statement
                                                      |-Expression
                                                        |-AssignExpression
                                                          |-OrExpression
                                                            |-AndExpression
                                                              |-BitOrExpression
                                                                |-BitXorExpression
                                                                  |-BitAndExpression
                                                                    |-EqExpression
                                                                      |-RelExpression
                                                                        |-ShiftExpression
                                                                          |-AddExpression
                                                                            |-MulExpression
                                                                              |-IsExpression
                                                                                |-AsExpression
                                                                                  |-UnaryExpression
                                                                                    |-AtomicExpression
                                                                                      |-Value
                                                                                        |-Reference
                                                                                          |-QName
                                                                                            |-NameIdentifier
                                                                                              |-Identifier=keccakUpdate
                                                                                      |-CallArguments
                                                                                        |-Expression
                                                                                          |-AssignExpression
                                                                                            |-OrExpression
                                                                                              |-AndExpression
                                                                                                |-BitOrExpression
                                                                                                  |-BitXorExpression
                                                                                                    |-BitAndExpression
                                                                                                      |-EqExpression
                                                                                                        |-RelExpression
                                                                                                          |-ShiftExpression
                                                                                                            |-AddExpression
                                                                                                              |-MulExpression
                                                                                                                |-IsExpression
                                                                                                                  |-AsExpression
                                                                                                                    |-UnaryExpression
                                                                                                                      |-AtomicExpression
                                                                                                                        |-Value
                                                                                                                          |-Reference
                                                                                                                            |-QName
                                                                                                                              |-NameIdentifier
                                                                                                                                |-Identifier=self
                                                                                                                        |-MemberExpression
                                                                                                                          |-BinMemberOperator
                                                                                                                            |-Operator=.
                                                                                                                          |-NameIdentifier
                                                                                                                            |-Identifier=data
                                                                                                                        |-MemberExpression
                                                                                                                          |-BinMemberOperator
                                                                                                                            |-Operator=.
                                                                                                                          |-NameIdentifier
                                                                                                                            |-Identifier=ptr
                                                                                        |-WS
                                                                                          <Rule0>
                                                                                        |-Expression
                                                                                          |-AssignExpression
                                                                                            |-OrExpression
                                                                                              |-AndExpression
                                                                                                |-BitOrExpression
                                                                                                  |-BitXorExpression
                                                                                                    |-BitAndExpression
                                                                                                      |-EqExpression
                                                                                                        |-RelExpression
                                                                                                          |-ShiftExpression
                                                                                                            |-AddExpression
                                                                                                              |-MulExpression
                                                                                                                |-IsExpression
                                                                                                                  |-AsExpression
                                                                                                                    |-UnaryExpression
                                                                                                                      |-AtomicExpression
                                                                                                                        |-Value
                                                                                                                          |-Reference
                                                                                                                            |-QName
                                                                                                                              |-NameIdentifier
                                                                                                                                |-Identifier=address
                                                                                        |-WS
                                                                                          <Rule0>
                                                                                        |-Expression
                                                                                          |-AssignExpression
                                                                                            |-OrExpression
                                                                                              |-AndExpression
                                                                                                |-BitOrExpression
                                                                                                  |-BitXorExpression
                                                                                                    |-BitAndExpression
                                                                                                      |-EqExpression
                                                                                                        |-RelExpression
                                                                                                          |-ShiftExpression
                                                                                                            |-AddExpression
                                                                                                              |-MulExpression
                                                                                                                |-IsExpression
                                                                                                                  |-AsExpression
                                                                                                                    |-UnaryExpression
                                                                                                                      |-AtomicExpression
                                                                                                                        |-Value
                                                                                                                          |-Reference
                                                                                                                            |-QName
                                                                                                                              |-NameIdentifier
                                                                                                                                |-Identifier=length
        |-ImplInnerDirective
          |-FunctionDirective
            |-Decorators
              <Rule0>
            |-FunDeclaration
              |-FunctionName
                |-NameIdentifier
                  |-Identifier=digest
              |-FunctionParamsList
                |-ParameterList
                  |-Parameter
                    |-NameIdentifier
                      |-Identifier=self
                    |-OfType
                      |-Operator=:
                      |-Type
                        |-UnionType
                          |-IntersectionType
                            |-AtomType
                              |-Reference
                                |-QName
                                  |-NameIdentifier
                                    |-Identifier=Keccak
              |-OfType
                |-Operator=:
                |-Type
                  |-UnionType
                    |-IntersectionType
                      |-AtomType
                        |-Reference
                          |-QName
                            |-NameIdentifier
                              |-Identifier=bytes
              |-FunAssignExpression
                |-Operator==
                |-Expression
                  |-AssignExpression
                    |-OrExpression
                      |-AndExpression
                        |-BitOrExpression
                          |-BitXorExpression
                            |-BitAndExpression
                              |-EqExpression
                                |-RelExpression
                                  |-ShiftExpression
                                    |-AddExpression
                                      |-MulExpression
                                        |-IsExpression
                                          |-AsExpression
                                            |-UnaryExpression
                                              |-AtomicExpression
                                                |-Value
                                                  |-CodeBlock
                                                    |-Statement
                                                      |-Expression
                                                        |-AssignExpression
                                                          |-OrExpression
                                                            |-AndExpression
                                                              |-BitOrExpression
                                                                |-BitXorExpression
                                                                  |-BitAndExpression
                                                                    |-EqExpression
                                                                      |-RelExpression
                                                                        |-ShiftExpression
                                                                          |-AddExpression
                                                                            |-MulExpression
                                                                              |-IsExpression
                                                                                |-AsExpression
                                                                                  |-UnaryExpression
                                                                                    |-AtomicExpression
                                                                                      |-Value
                                                                                        |-Reference
                                                                                          |-QName
                                                                                            |-NameIdentifier
                                                                                              |-Identifier=keccakFinish
                                                                                      |-CallArguments
                                                                                        |-Expression
                                                                                          |-AssignExpression
                                                                                            |-OrExpression
                                                                                              |-AndExpression
                                                                                                |-BitOrExpression
                                                                                                  |-BitXorExpression
                                                                                                    |-BitAndExpression
                                                                                                      |-EqExpression
                                                                                                        |-RelExpression
                                                                                                          |-ShiftExpression
                                                                                                            |-AddExpression
                                                                                                              |-MulExpression
                                                                                                                |-IsExpression
                                                                                                                  |-AsExpression
                                                                                                                    |-UnaryExpression
                                                                                                                      |-AtomicExpression
                                                                                                                        |-Value
                                                                                                                          |-Reference
                                                                                                                            |-QName
                                                                                                                              |-NameIdentifier
                                                                                                                                |-Identifier=self
                                                                                                                        |-MemberExpression
                                                                                                                          |-BinMemberOperator
                                                                                                                            |-Operator=.
                                                                                                                          |-NameIdentifier
                                                                                                                            |-Identifier=data
                                                                                                                        |-MemberExpression
                                                                                                                          |-BinMemberOperator
                                                                                                                            |-Operator=.
                                                                                                                          |-NameIdentifier
                                                                                                                            |-Identifier=ptr
                                                                                        |-WS
                                                                                          <Rule0>
                                                                                        |-Expression
                                                                                          |-AssignExpression
                                                                                            |-OrExpression
                                                                                              |-AndExpression
                                                                                                |-BitOrExpression
                                                                                                  |-BitXorExpression
                                                                                                    |-BitAndExpression
                                                                                                      |-EqExpression
                                                                                                        |-RelExpression
                                                                                                          |-ShiftExpression
                                                                                                            |-AddExpression
                                                                                                              |-MulExpression
                                                                                                                |-IsExpression
                                                                                                                  |-AsExpression
                                                                                                                    |-UnaryExpression
                                                                                                                      |-AtomicExpression
                                                                                                                        |-Value
                                                                                                                          |-Reference
                                                                                                                            |-QName
                                                                                                                              |-NameIdentifier
                                                                                                                                |-Identifier=self
                                                                                                                        |-MemberExpression
                                                                                                                          |-BinMemberOperator
                                                                                                                            |-Operator=.
                                                                                                                          |-NameIdentifier
                                                                                                                            |-Identifier=result
                                                                                                                        |-MemberExpression
                                                                                                                          |-BinMemberOperator
                                                                                                                            |-Operator=.
                                                                                                                          |-NameIdentifier
                                                                                                                            |-Identifier=ptr
                                                    |-NewLine=


                                                    |-Statement
                                                      |-Expression
                                                        |-AssignExpression
                                                          |-OrExpression
                                                            |-AndExpression
                                                              |-BitOrExpression
                                                                |-BitXorExpression
                                                                  |-BitAndExpression
                                                                    |-EqExpression
                                                                      |-RelExpression
                                                                        |-ShiftExpression
                                                                          |-AddExpression
                                                                            |-MulExpression
                                                                              |-IsExpression
                                                                                |-AsExpression
                                                                                  |-UnaryExpression
                                                                                    |-AtomicExpression
                                                                                      |-Value
                                                                                        |-Reference
                                                                                          |-QName
                                                                                            |-NameIdentifier
                                                                                              |-Identifier=self
                                                                                      |-MemberExpression
                                                                                        |-BinMemberOperator
                                                                                          |-Operator=.
                                                                                        |-NameIdentifier
                                                                                          |-Identifier=result
        |-ImplInnerDirective
          |-FunctionDirective
            |-Decorators
              <Rule0>
            |-PrivateModifier
              |-PRIVATE_KEYWORD
                |-Identifier=private
            |-FunDeclaration
              |-FunctionName
                |-NameIdentifier
                  |-Identifier=keccakTheta
              |-FunctionParamsList
                |-ParameterList
                  |-Parameter
                    |-NameIdentifier
                      |-Identifier=context
                    |-OfType
                      |-Operator=:
                      |-Type
                        |-UnionType
                          |-IntersectionType
                            |-AtomType
                              |-Reference
                                |-QName
                                  |-NameIdentifier
                                    |-Identifier=ref
              |-OfType
                |-Operator=:
                |-Type
                  |-UnionType
                    |-IntersectionType
                      |-AtomType
                        |-Reference
                          |-QName
                            |-NameIdentifier
                              |-Identifier=void
              |-FunAssignExpression
                |-Operator==
                |-Expression
                  |-AssignExpression
                    |-OrExpression
                      |-AndExpression
                        |-BitOrExpression
                          |-BitXorExpression
                            |-BitAndExpression
                              |-EqExpression
                                |-RelExpression
                                  |-ShiftExpression
                                    |-AddExpression
                                      |-MulExpression
                                        |-IsExpression
                                          |-AsExpression
                                            |-UnaryExpression
                                              |-AtomicExpression
                                                |-Value
                                                  |-CodeBlock
                                                    |-Statement
                                                      |-ValDeclaration
                                                        |-NameIdentifier
                                                          |-Identifier=C0
                                                        |-Assign
                                                          |-Operator==
                                                          |-Expression
                                                            |-AssignExpression
                                                              |-OrExpression
                                                                |-AndExpression
                                                                  |-BitOrExpression
                                                                    |-BitXorExpression
                                                                      |-BitAndExpression
                                                                        |-EqExpression
                                                                          |-RelExpression
                                                                            |-ShiftExpression
                                                                              |-AddExpression
                                                                                |-MulExpression
                                                                                  |-IsExpression
                                                                                    |-AsExpression
                                                                                      |-UnaryExpression
                                                                                        |-AtomicExpression
                                                                                          |-Value
                                                                                            |-Reference
                                                                                              |-QName
                                                                                                |-NameIdentifier
                                                                                                  |-Identifier=i64
                                                                                          |-MemberExpression
                                                                                            |-BinMemberOperator
                                                                                              |-Operator=.
                                                                                            |-NameIdentifier
                                                                                              |-Identifier=load
                                                                                          |-CallArguments
                                                                                            |-Expression
                                                                                              |-AssignExpression
                                                                                                |-OrExpression
                                                                                                  |-AndExpression
                                                                                                    |-BitOrExpression
                                                                                                      |-BitXorExpression
                                                                                                        |-BitAndExpression
                                                                                                          |-EqExpression
                                                                                                            |-RelExpression
                                                                                                              |-ShiftExpression
                                                                                                                |-AddExpression
                                                                                                                  |-MulExpression
                                                                                                                    |-IsExpression
                                                                                                                      |-AsExpression
                                                                                                                        |-UnaryExpression
                                                                                                                          |-AtomicExpression
                                                                                                                            |-Value
                                                                                                                              |-Reference
                                                                                                                                |-QName
                                                                                                                                  |-NameIdentifier
                                                                                                                                    |-Identifier=context
                                                                                            |-WS
                                                                                              <Rule0>
                                                                                            |-Expression
                                                                                              |-AssignExpression
                                                                                                |-OrExpression
                                                                                                  |-AndExpression
                                                                                                    |-BitOrExpression
                                                                                                      |-BitXorExpression
                                                                                                        |-BitAndExpression
                                                                                                          |-EqExpression
                                                                                                            |-RelExpression
                                                                                                              |-ShiftExpression
                                                                                                                |-AddExpression
                                                                                                                  |-MulExpression
                                                                                                                    |-IsExpression
                                                                                                                      |-AsExpression
                                                                                                                        |-UnaryExpression
                                                                                                                          |-AtomicExpression
                                                                                                                            |-Value
                                                                                                                              |-Literal
                                                                                                                                |-PostfixNumber
                                                                                                                                  |-NumberLiteral=0
                                                                                            |-WS
                                                                                              <Rule0>
                                                                                            |-<UNEXPECTED TOKEN>=as
                                                                                            |-<UNEXPECTED TOKEN>= 
                                                                                            |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=^
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=load
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=context
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=40
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=^
                                                    |-<UNEXPECTED TOKEN>=

                                                    |-<UNEXPECTED TOKEN>=        
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=load
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=context
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=80
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=^
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=load
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=context
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=120
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=^
                                                    |-<UNEXPECTED TOKEN>=

                                                    |-<UNEXPECTED TOKEN>=        
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=load
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=context
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=160
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>=


                                                    |-<UNEXPECTED TOKEN>=    
                                                    |-<UNEXPECTED TOKEN>=val
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=C1
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>==
                                                    |-<UNEXPECTED TOKEN>=

                                                    |-<UNEXPECTED TOKEN>=        
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=load
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=context
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=8
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=^
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=load
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=context
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=48
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=^
                                                    |-<UNEXPECTED TOKEN>=

                                                    |-<UNEXPECTED TOKEN>=        
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=load
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=context
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=88
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=^
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=load
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=context
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=128
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=^
                                                    |-<UNEXPECTED TOKEN>=

                                                    |-<UNEXPECTED TOKEN>=        
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=load
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=context
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=168
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>=


                                                    |-<UNEXPECTED TOKEN>=    
                                                    |-<UNEXPECTED TOKEN>=val
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=C2
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>==
                                                    |-<UNEXPECTED TOKEN>=

                                                    |-<UNEXPECTED TOKEN>=        
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=load
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=context
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=16
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=^
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=load
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=context
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=56
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=^
                                                    |-<UNEXPECTED TOKEN>=

                                                    |-<UNEXPECTED TOKEN>=        
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=load
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=context
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=96
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=^
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=load
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=context
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=136
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=^
                                                    |-<UNEXPECTED TOKEN>=

                                                    |-<UNEXPECTED TOKEN>=        
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=load
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=context
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=176
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>=


                                                    |-<UNEXPECTED TOKEN>=    
                                                    |-<UNEXPECTED TOKEN>=val
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=C3
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>==
                                                    |-<UNEXPECTED TOKEN>=

                                                    |-<UNEXPECTED TOKEN>=        
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=load
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=context
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=24
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=^
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=load
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=context
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=64
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=^
                                                    |-<UNEXPECTED TOKEN>=

                                                    |-<UNEXPECTED TOKEN>=        
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=load
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=context
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=104
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=^
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=load
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=context
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=144
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=^
                                                    |-<UNEXPECTED TOKEN>=

                                                    |-<UNEXPECTED TOKEN>=        
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=load
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=context
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=184
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>=


                                                    |-<UNEXPECTED TOKEN>=    
                                                    |-<UNEXPECTED TOKEN>=val
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=C4
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>==
                                                    |-<UNEXPECTED TOKEN>=

                                                    |-<UNEXPECTED TOKEN>=        
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=load
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=context
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=32
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=^
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=load
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=context
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=72
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=^
                                                    |-<UNEXPECTED TOKEN>=

                                                    |-<UNEXPECTED TOKEN>=        
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=load
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=context
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=112
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=^
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=load
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=context
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=152
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=^
                                                    |-<UNEXPECTED TOKEN>=

                                                    |-<UNEXPECTED TOKEN>=        
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=load
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=context
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=192
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>=


                                                    |-<UNEXPECTED TOKEN>=    
                                                    |-<UNEXPECTED TOKEN>=val
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=D0
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>==
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=C4
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=^
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=rotl
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=C1
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=1
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>=

                                                    |-<UNEXPECTED TOKEN>=    
                                                    |-<UNEXPECTED TOKEN>=val
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=D1
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>==
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=C0
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=^
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=rotl
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=C2
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=1
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>=

                                                    |-<UNEXPECTED TOKEN>=    
                                                    |-<UNEXPECTED TOKEN>=val
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=D2
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>==
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=C1
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=^
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=rotl
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=C3
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=1
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>=

                                                    |-<UNEXPECTED TOKEN>=    
                                                    |-<UNEXPECTED TOKEN>=val
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=D3
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>==
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=C2
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=^
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=rotl
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=C4
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=1
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>=

                                                    |-<UNEXPECTED TOKEN>=    
                                                    |-<UNEXPECTED TOKEN>=val
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=D4
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>==
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=C3
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=^
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=rotl
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=C0
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=1
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>=


                                                    |-<UNEXPECTED TOKEN>=    
                                                    |-<UNEXPECTED TOKEN>=// A[x]      ^= D[x];

                                                    |-<UNEXPECTED TOKEN>=    
                                                    |-<UNEXPECTED TOKEN>=// A[x + 5]  ^= D[x];

                                                    |-<UNEXPECTED TOKEN>=    
                                                    |-<UNEXPECTED TOKEN>=// A[x + 10] ^= D[x];

                                                    |-<UNEXPECTED TOKEN>=    
                                                    |-<UNEXPECTED TOKEN>=// A[x + 15] ^= D[x];

                                                    |-<UNEXPECTED TOKEN>=    
                                                    |-<UNEXPECTED TOKEN>=// A[x + 20] ^= D[x];

                                                    |-<UNEXPECTED TOKEN>=

                                                    |-<UNEXPECTED TOKEN>=    
                                                    |-<UNEXPECTED TOKEN>=// x = 0

                                                    |-<UNEXPECTED TOKEN>=    
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=store
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=context
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=load
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=context
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=0
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=^
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=D0
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=0
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>=

                                                    |-<UNEXPECTED TOKEN>=    
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=store
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=context
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=load
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=context
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=40
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=^
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=D0
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=40
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>=

                                                    |-<UNEXPECTED TOKEN>=    
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=store
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=context
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=load
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=context
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=80
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=^
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=D0
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=80
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>=

                                                    |-<UNEXPECTED TOKEN>=    
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=store
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=context
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=load
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=context
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=120
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=^
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=D0
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=120
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>=

                                                    |-<UNEXPECTED TOKEN>=    
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=store
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=context
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=load
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=context
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=160
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=^
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=D0
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=160
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>=


                                                    |-<UNEXPECTED TOKEN>=    
                                                    |-<UNEXPECTED TOKEN>=// x = 1

                                                    |-<UNEXPECTED TOKEN>=    
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=store
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=context
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=load
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=context
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=8
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=^
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=D1
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=8
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>=

                                                    |-<UNEXPECTED TOKEN>=    
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=store
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=context
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=load
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=context
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=48
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=^
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=D1
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=48
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>=

                                                    |-<UNEXPECTED TOKEN>=    
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=store
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=context
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=load
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=context
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=88
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=^
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=D1
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=88
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>=

                                                    |-<UNEXPECTED TOKEN>=    
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=store
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=context
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=load
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=context
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=128
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=^
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=D1
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=128
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>=

                                                    |-<UNEXPECTED TOKEN>=    
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=store
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=context
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=load
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=context
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=168
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=^
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=D1
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=168
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>=


                                                    |-<UNEXPECTED TOKEN>=    
                                                    |-<UNEXPECTED TOKEN>=// x = 2

                                                    |-<UNEXPECTED TOKEN>=    
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=store
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=context
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=load
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=context
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=16
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=^
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=D2
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=16
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>=

                                                    |-<UNEXPECTED TOKEN>=    
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=store
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=context
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=load
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=context
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=56
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=^
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=D2
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=56
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>=

                                                    |-<UNEXPECTED TOKEN>=    
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=store
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=context
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=load
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=context
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=96
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=^
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=D2
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=96
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>=

                                                    |-<UNEXPECTED TOKEN>=    
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=store
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=context
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=load
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=context
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=136
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=^
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=D2
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=136
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>=

                                                    |-<UNEXPECTED TOKEN>=    
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=store
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=context
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=load
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=context
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=176
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=^
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=D2
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=176
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>=


                                                    |-<UNEXPECTED TOKEN>=    
                                                    |-<UNEXPECTED TOKEN>=// x = 3

                                                    |-<UNEXPECTED TOKEN>=    
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=store
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=context
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=load
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=context
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=24
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=^
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=D3
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=24
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>=

                                                    |-<UNEXPECTED TOKEN>=    
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=store
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=context
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=load
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=context
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=64
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=^
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=D3
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=64
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>=

                                                    |-<UNEXPECTED TOKEN>=    
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=store
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=context
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=load
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=context
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=104
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=^
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=D3
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=104
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>=

                                                    |-<UNEXPECTED TOKEN>=    
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=store
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=context
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=load
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=context
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=144
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=^
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=D3
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=144
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>=

                                                    |-<UNEXPECTED TOKEN>=    
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=store
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=context
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=load
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=context
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=184
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=^
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=D3
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=184
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>=


                                                    |-<UNEXPECTED TOKEN>=    
                                                    |-<UNEXPECTED TOKEN>=// x = 4

                                                    |-<UNEXPECTED TOKEN>=    
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=store
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=context
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=load
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=context
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=32
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=^
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=D4
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=32
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>=

                                                    |-<UNEXPECTED TOKEN>=    
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=store
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=context
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=load
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=context
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=72
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=^
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=D4
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=72
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>=

                                                    |-<UNEXPECTED TOKEN>=    
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=store
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=context
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=load
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=context
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=112
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=^
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=D4
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=112
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>=

                                                    |-<UNEXPECTED TOKEN>=    
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=store
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=context
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=load
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=context
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=152
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=^
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=D4
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=152
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>=

                                                    |-<UNEXPECTED TOKEN>=    
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=store
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=context
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=i64
                                                    |-<UNEXPECTED TOKEN>=.
                                                    |-<UNEXPECTED TOKEN>=load
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=context
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=192
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=^
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=D4
                                                    |-<UNEXPECTED TOKEN>=,
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=192
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>=

                                                    |-<UNEXPECTED TOKEN>=  
        |-ImplInnerDirective
          |-FunctionDirective
            |-Decorators
              <Rule0>
            |-PrivateModifier
              |-PRIVATE_KEYWORD
                |-Identifier=private
            |-FunDeclaration
              |-FunctionName
                |-NameIdentifier
                  |-Identifier=keccakRho
              |-FunctionParamsList
                |-ParameterList
                  |-Parameter
                    |-NameIdentifier
                      |-Identifier=contextRef
                    |-OfType
                      |-Operator=:
                      |-Type
                        |-UnionType
                          |-IntersectionType
                            |-AtomType
                              |-Reference
                                |-QName
                                  |-NameIdentifier
                                    |-Identifier=ref
                  |-WS
                    <Rule0>
                  |-Parameter
                    |-NameIdentifier
                      |-Identifier=rotationConsts
                    |-OfType
                      |-Operator=:
                      |-Type
                        |-UnionType
                          |-IntersectionType
                            |-AtomType
                              |-Reference
                                |-QName
                                  |-NameIdentifier
                                    |-Identifier=ref
              |-OfType
                |-Operator=:
                |-Type
                  |-UnionType
                    |-IntersectionType
                      |-AtomType
                        |-Reference
                          |-QName
                            |-NameIdentifier
                              |-Identifier=void
              |-FunAssignExpression
                |-Operator==
                |-Expression
                  |-AssignExpression
                    |-OrExpression
                      |-AndExpression
                        |-BitOrExpression
                          |-BitXorExpression
                            |-BitAndExpression
                              |-EqExpression
                                |-RelExpression
                                  |-ShiftExpression
                                    |-AddExpression
                                      |-MulExpression
                                        |-IsExpression
                                          |-AsExpression
                                            |-UnaryExpression
                                              |-AtomicExpression
                                                |-Value
                                                  |-CodeBlock
                                                    |-Statement
                                                      |-VarDeclaration
                                                        |-NameIdentifier
                                                          |-Identifier=i
                                                        |-Assign
                                                          |-Operator==
                                                          |-Expression
                                                            |-AssignExpression
                                                              |-OrExpression
                                                                |-AndExpression
                                                                  |-BitOrExpression
                                                                    |-BitXorExpression
                                                                      |-BitAndExpression
                                                                        |-EqExpression
                                                                          |-RelExpression
                                                                            |-ShiftExpression
                                                                              |-AddExpression
                                                                                |-MulExpression
                                                                                  |-IsExpression
                                                                                    |-AsExpression
                                                                                      |-UnaryExpression
                                                                                        |-AtomicExpression
                                                                                          |-Value
                                                                                            |-Literal
                                                                                              |-PostfixNumber
                                                                                                |-NumberLiteral=0
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=


                                                    |-<UNEXPECTED TOKEN>=    
                                                    |-<UNEXPECTED TOKEN>=loop
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>={
                                                    |-<UNEXPECTED TOKEN>=

                                                    |-<UNEXPECTED TOKEN>=      
                                                    |-<UNEXPECTED TOKEN>=if
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=(
                                                    |-<UNEXPECTED TOKEN>=i
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=>=
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=24
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=as
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>=u32
                                                    |-<UNEXPECTED TOKEN>=)
                                                    |-<UNEXPECTED TOKEN>= 
                                                    |-<UNEXPECTED TOKEN>={
                                                    |-<UNEXPECTED TOKEN>=

                                                    |-<UNEXPECTED TOKEN>=        
                                                    |-<UNEXPECTED TOKEN>=break
                                                    |-<UNEXPECTED TOKEN>=

                                                    |-<UNEXPECTED TOKEN>=      
        |-<UNEXPECTED TOKEN>=else
        |-<UNEXPECTED TOKEN>= 
        |-<UNEXPECTED TOKEN>={
        |-<UNEXPECTED TOKEN>=

        |-<UNEXPECTED TOKEN>=        
        |-<UNEXPECTED TOKEN>=val
        |-<UNEXPECTED TOKEN>= 
        |-<UNEXPECTED TOKEN>=offset
        |-<UNEXPECTED TOKEN>= 
        |-<UNEXPECTED TOKEN>==
        |-<UNEXPECTED TOKEN>= 
        |-<UNEXPECTED TOKEN>=(
        |-<UNEXPECTED TOKEN>=1
        |-<UNEXPECTED TOKEN>= 
        |-<UNEXPECTED TOKEN>=as
        |-<UNEXPECTED TOKEN>= 
        |-<UNEXPECTED TOKEN>=u32
        |-<UNEXPECTED TOKEN>= 
        |-<UNEXPECTED TOKEN>=+
        |-<UNEXPECTED TOKEN>= 
        |-<UNEXPECTED TOKEN>=i
        |-<UNEXPECTED TOKEN>=)
        |-<UNEXPECTED TOKEN>= 
        |-<UNEXPECTED TOKEN>=<<
        |-<UNEXPECTED TOKEN>= 
        |-<UNEXPECTED TOKEN>=3
        |-<UNEXPECTED TOKEN>=


        |-<UNEXPECTED TOKEN>=        
        |-<UNEXPECTED TOKEN>=i64
        |-<UNEXPECTED TOKEN>=.
        |-<UNEXPECTED TOKEN>=store
        |-<UNEXPECTED TOKEN>=(
        |-<UNEXPECTED TOKEN>=contextRef
        |-<UNEXPECTED TOKEN>=,
        |-<UNEXPECTED TOKEN>=

        |-<UNEXPECTED TOKEN>=          
        |-<UNEXPECTED TOKEN>=i64
        |-<UNEXPECTED TOKEN>=.
        |-<UNEXPECTED TOKEN>=rotl
        |-<UNEXPECTED TOKEN>=(
        |-<UNEXPECTED TOKEN>=

        |-<UNEXPECTED TOKEN>=            
        |-<UNEXPECTED TOKEN>=i64
        |-<UNEXPECTED TOKEN>=.
        |-<UNEXPECTED TOKEN>=load
        |-<UNEXPECTED TOKEN>=(
        |-<UNEXPECTED TOKEN>=contextRef
        |-<UNEXPECTED TOKEN>=,
        |-<UNEXPECTED TOKEN>= 
        |-<UNEXPECTED TOKEN>=offset
        |-<UNEXPECTED TOKEN>=)
        |-<UNEXPECTED TOKEN>=,
        |-<UNEXPECTED TOKEN>=

        |-<UNEXPECTED TOKEN>=            
        |-<UNEXPECTED TOKEN>=i64
        |-<UNEXPECTED TOKEN>=.
        |-<UNEXPECTED TOKEN>=load8_u
        |-<UNEXPECTED TOKEN>=(
        |-<UNEXPECTED TOKEN>=rotationConsts
        |-<UNEXPECTED TOKEN>=,
        |-<UNEXPECTED TOKEN>= 
        |-<UNEXPECTED TOKEN>=i
        |-<UNEXPECTED TOKEN>=)
        |-<UNEXPECTED TOKEN>=

        |-<UNEXPECTED TOKEN>=          
        |-<UNEXPECTED TOKEN>=)
        |-<UNEXPECTED TOKEN>=,
        |-<UNEXPECTED TOKEN>=

        |-<UNEXPECTED TOKEN>=          
        |-<UNEXPECTED TOKEN>=offset
        |-<UNEXPECTED TOKEN>=

        |-<UNEXPECTED TOKEN>=        
        |-<UNEXPECTED TOKEN>=)
        |-<UNEXPECTED TOKEN>=


        |-<UNEXPECTED TOKEN>=        
        |-<UNEXPECTED TOKEN>=i
        |-<UNEXPECTED TOKEN>= 
        |-<UNEXPECTED TOKEN>==
        |-<UNEXPECTED TOKEN>= 
        |-<UNEXPECTED TOKEN>=i
        |-<UNEXPECTED TOKEN>= 
        |-<UNEXPECTED TOKEN>=+
        |-<UNEXPECTED TOKEN>= 
        |-<UNEXPECTED TOKEN>=1
        |-<UNEXPECTED TOKEN>= 
        |-<UNEXPECTED TOKEN>=as
        |-<UNEXPECTED TOKEN>= 
        |-<UNEXPECTED TOKEN>=u32
        |-<UNEXPECTED TOKEN>=

        |-<UNEXPECTED TOKEN>=        
        |-<UNEXPECTED TOKEN>=continue
        |-<UNEXPECTED TOKEN>=

        |-<UNEXPECTED TOKEN>=      
        |-CurlyBracesClose=}