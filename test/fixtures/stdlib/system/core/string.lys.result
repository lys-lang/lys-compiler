"Keyword(import)"
"Whitespace( )"
"Identifier(system)"
"Operator(::)"
"Identifier(core)"
"Operator(::)"
"Identifier(boolean)"
"NewLine(\n)"
"Keyword(import)"
"Whitespace( )"
"Identifier(system)"
"Operator(::)"
"Identifier(core)"
"Operator(::)"
"Identifier(bytes)"
"NewLine(\n)"
"Keyword(import)"
"Whitespace( )"
"Identifier(system)"
"Operator(::)"
"Identifier(core)"
"Operator(::)"
"Identifier(f32)"
"NewLine(\n)"
"Keyword(import)"
"Whitespace( )"
"Identifier(system)"
"Operator(::)"
"Identifier(core)"
"Operator(::)"
"Identifier(f64)"
"NewLine(\n)"
"Keyword(import)"
"Whitespace( )"
"Identifier(system)"
"Operator(::)"
"Identifier(core)"
"Operator(::)"
"Identifier(i16)"
"NewLine(\n)"
"Keyword(import)"
"Whitespace( )"
"Identifier(system)"
"Operator(::)"
"Identifier(core)"
"Operator(::)"
"Identifier(i32)"
"NewLine(\n)"
"Keyword(import)"
"Whitespace( )"
"Identifier(system)"
"Operator(::)"
"Identifier(core)"
"Operator(::)"
"Identifier(i64)"
"NewLine(\n)"
"Keyword(import)"
"Whitespace( )"
"Identifier(system)"
"Operator(::)"
"Identifier(core)"
"Operator(::)"
"Identifier(native)"
"NewLine(\n)"
"Keyword(import)"
"Whitespace( )"
"Identifier(system)"
"Operator(::)"
"Identifier(core)"
"Operator(::)"
"Identifier(u16)"
"NewLine(\n)"
"Keyword(import)"
"Whitespace( )"
"Identifier(system)"
"Operator(::)"
"Identifier(core)"
"Operator(::)"
"Identifier(u32)"
"NewLine(\n)"
"Keyword(import)"
"Whitespace( )"
"Identifier(system)"
"Operator(::)"
"Identifier(core)"
"Operator(::)"
"Identifier(u64)"
"NewLine(\n)"
"Keyword(import)"
"Whitespace( )"
"Identifier(system)"
"Operator(::)"
"Identifier(core)"
"Operator(::)"
"Identifier(u8)"
"NewLine(\n)"
"Keyword(import)"
"Whitespace( )"
"Identifier(system)"
"Operator(::)"
"Identifier(core)"
"Operator(::)"
"Identifier(math)"
"NewLine(\n\n\n)"
"Keyword(type)"
"Whitespace( )"
"Identifier(string)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Operator(%)"
"Identifier(stack)"
"Whitespace( )"
"CurlyBracesOpen({)"
"Whitespace( )"
"Identifier(lowLevelType)"
"Operator(=)"
"StringLiteral(\"i64\")"
"Whitespace( )"
"Identifier(byteSize)"
"Operator(=)"
"NumberLiteral(8)"
"Whitespace( )"
"CurlyBracesClose(})"
"NewLine(\n\n)"
"Keyword(impl)"
"Whitespace( )"
"Identifier(string)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(  )"
"MultiLineComment(/**\n   * Returns the string length in UCS chars.\n   */)"
"NewLine(\n)"
"Whitespace(  )"
"MacroDecoration(#[)"
"Identifier(inline)"
"VectorClose(])"
"NewLine(\n)"
"Whitespace(  )"
"MacroDecoration(#[)"
"Identifier(getter)"
"VectorClose(])"
"NewLine(\n)"
"Whitespace(  )"
"Keyword(fun)"
"Whitespace( )"
"Identifier(length)"
"ParenthesesOpen(()"
"Identifier(self)"
"Operator(:)"
"Whitespace( )"
"Identifier(string)"
"ParenthesesClose())"
"Operator(:)"
"Whitespace( )"
"Identifier(u32)"
"Whitespace( )"
"Operator(=)"
"NewLine(\n)"
"Whitespace(    )"
"Identifier(u32)"
"Operator(.)"
"Identifier(load)"
"ParenthesesOpen(()"
"Identifier(self)"
"Whitespace( )"
"Keyword(as)"
"Whitespace( )"
"Identifier(ref)"
"ParenthesesClose())"
"Whitespace( )"
"Operator(/)"
"Whitespace( )"
"NumberLiteral(2)"
"Whitespace( )"
"Keyword(as)"
"Whitespace( )"
"Identifier(u32)"
"NewLine(\n\n)"
"Whitespace(  )"
"MultiLineComment(/**\n   * Returns the pointer of the string's content.\n   */)"
"NewLine(\n)"
"Whitespace(  )"
"MacroDecoration(#[)"
"Identifier(inline)"
"VectorClose(])"
"NewLine(\n)"
"Whitespace(  )"
"MacroDecoration(#[)"
"Identifier(getter)"
"VectorClose(])"
"NewLine(\n)"
"Whitespace(  )"
"Keyword(fun)"
"Whitespace( )"
"Identifier(ptr)"
"ParenthesesOpen(()"
"Identifier(self)"
"Operator(:)"
"Whitespace( )"
"Identifier(string)"
"ParenthesesClose())"
"Operator(:)"
"Whitespace( )"
"Identifier(u32)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Operator(%)"
"Identifier(wasm)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(    )"
"ParenthesesOpen(()"
"Identifier(i32)"
"Operator(.)"
"Identifier(add)"
"NewLine(\n)"
"Whitespace(      )"
"ParenthesesOpen(()"
"Identifier(i32)"
"Operator(.)"
"Keyword(const)"
"Whitespace( )"
"NumberLiteral(4)"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(      )"
"ParenthesesOpen(()"
"Identifier(call)"
"Whitespace( )"
"Identifier($addressFromRef)"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(get_local)"
"Whitespace( )"
"Identifier($self)"
"ParenthesesClose())"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(    )"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"CurlyBracesClose(})"
"NewLine(\n\n)"
"Whitespace(  )"
"MultiLineComment(/**\n   * Strings behave like objects.\n   * Can be explicitly converted to references.\n   */)"
"NewLine(\n)"
"Whitespace(  )"
"MacroDecoration(#[)"
"Identifier(explicit)"
"VectorClose(])"
"NewLine(\n)"
"Whitespace(  )"
"Keyword(fun)"
"Whitespace( )"
"Keyword(as)"
"ParenthesesOpen(()"
"Identifier(self)"
"Operator(:)"
"Whitespace( )"
"Identifier(string)"
"ParenthesesClose())"
"Operator(:)"
"Whitespace( )"
"Identifier(ref)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Operator(%)"
"Identifier(wasm)"
"Whitespace( )"
"CurlyBracesOpen({)"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(get_local)"
"Whitespace( )"
"Identifier($self)"
"ParenthesesClose())"
"Whitespace( )"
"CurlyBracesClose(})"
"NewLine(\n\n)"
"Whitespace(  )"
"MultiLineComment(/**\n   * CPointer implicit coercion.\n   */)"
"NewLine(\n)"
"Whitespace(  )"
"Keyword(fun)"
"Whitespace( )"
"Keyword(as)"
"ParenthesesOpen(()"
"Identifier(self)"
"Operator(:)"
"Whitespace( )"
"Identifier(string)"
"ParenthesesClose())"
"Operator(:)"
"Whitespace( )"
"Identifier(UnsafeCPointer)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Operator(%)"
"Identifier(wasm)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(    )"
"ParenthesesOpen(()"
"Identifier(i32)"
"Operator(.)"
"Identifier(add)"
"NewLine(\n)"
"Whitespace(      )"
"ParenthesesOpen(()"
"Identifier(i32)"
"Operator(.)"
"Keyword(const)"
"Whitespace( )"
"NumberLiteral(4)"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(      )"
"ParenthesesOpen(()"
"Identifier(call)"
"Whitespace( )"
"Identifier($addressFromRef)"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(get_local)"
"Whitespace( )"
"Identifier($self)"
"ParenthesesClose())"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(    )"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"CurlyBracesClose(})"
"NewLine(\n\n)"
"Whitespace(  )"
"MultiLineComment(/**\n   * Unlike numbers, strings are concatenated, not added.\n   * We use a different operator to do it.\n   */)"
"NewLine(\n)"
"Whitespace(  )"
"Keyword(fun)"
"Whitespace( )"
"Operator(++)"
"ParenthesesOpen(()"
"Identifier(lhs)"
"Operator(:)"
"Whitespace( )"
"Identifier(string)"
"Comma(,)"
"Whitespace( )"
"Identifier(rhs)"
"Operator(:)"
"Whitespace( )"
"Identifier(string)"
"ParenthesesClose())"
"Operator(:)"
"Whitespace( )"
"Identifier(string)"
"Whitespace( )"
"Operator(=)"
"NewLine(\n)"
"Whitespace(    )"
"Identifier(string)"
"Operator(.)"
"Identifier(concat)"
"ParenthesesOpen(()"
"Identifier(lhs)"
"Comma(,)"
"Whitespace( )"
"Identifier(rhs)"
"ParenthesesClose())"
"NewLine(\n\n)"
"Whitespace(  )"
"MultiLineComment(/**\n   * Index getter, it returns a char (u16)\n   */)"
"NewLine(\n)"
"Whitespace(  )"
"Keyword(fun)"
"Whitespace( )"
"VectorOpen([)"
"VectorClose(])"
"ParenthesesOpen(()"
"Identifier(self)"
"Operator(:)"
"Whitespace( )"
"Identifier(string)"
"Comma(,)"
"Whitespace( )"
"Identifier(at)"
"Operator(:)"
"Whitespace( )"
"Identifier(u32)"
"ParenthesesClose())"
"Operator(:)"
"Whitespace( )"
"Identifier(u16)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(    )"
"Keyword(if)"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(at)"
"Whitespace( )"
"Operator(>)"
"Whitespace( )"
"Identifier(self)"
"Operator(.)"
"Identifier(length)"
"ParenthesesClose())"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(      )"
"Identifier(panic)"
"ParenthesesOpen(()"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(    )"
"CurlyBracesClose(})"
"NewLine(\n)"
"Whitespace(    )"
"Keyword(if)"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(at)"
"Whitespace( )"
"Operator(<)"
"Whitespace( )"
"NumberLiteral(0)"
"Whitespace( )"
"Keyword(as)"
"Whitespace( )"
"Identifier(u32)"
"ParenthesesClose())"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(      )"
"Identifier(panic)"
"ParenthesesOpen(()"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(    )"
"CurlyBracesClose(})"
"NewLine(\n)"
"Whitespace(    )"
"Identifier(u16)"
"Operator(.)"
"Identifier(load)"
"ParenthesesOpen(()"
"Identifier(self)"
"Operator(.)"
"Identifier(ptr)"
"Whitespace( )"
"Keyword(as)"
"Whitespace( )"
"Identifier(ref)"
"Comma(,)"
"Whitespace( )"
"Identifier(at)"
"Whitespace( )"
"Operator(<<)"
"Whitespace( )"
"NumberLiteral(1)"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"CurlyBracesClose(})"
"NewLine(\n\n)"
"Whitespace(  )"
"MacroDecoration(#[)"
"Identifier(inline)"
"VectorClose(])"
"NewLine(\n)"
"Whitespace(  )"
"Keyword(private)"
"Whitespace( )"
"Keyword(fun)"
"Whitespace( )"
"Identifier(getDiscriminant)"
"ParenthesesOpen(()"
"ParenthesesClose())"
"Operator(:)"
"Whitespace( )"
"Identifier(u64)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(    )"
"Keyword(val)"
"Whitespace( )"
"Identifier(discriminant)"
"Operator(:)"
"Whitespace( )"
"Identifier(u32)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(string)"
"Operator(.^)"
"Identifier(discriminant)"
"NewLine(\n)"
"Whitespace(    )"
"Identifier(discriminant)"
"Whitespace( )"
"Keyword(as)"
"Whitespace( )"
"Identifier(u64)"
"Whitespace( )"
"Operator(<<)"
"Whitespace( )"
"NumberLiteral(32)"
"NewLine(\n)"
"Whitespace(  )"
"CurlyBracesClose(})"
"NewLine(\n\n)"
"Whitespace(  )"
"Keyword(fun)"
"Whitespace( )"
"Identifier(fromBytes)"
"ParenthesesOpen(()"
"Identifier(bytes)"
"Operator(:)"
"Whitespace( )"
"Identifier(bytes)"
"ParenthesesClose())"
"Operator(:)"
"Whitespace( )"
"Identifier(string)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Operator(%)"
"Identifier(wasm)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(    )"
"LineComment(// TODO: verify correctness of length and size header\n)"
"Whitespace(    )"
"ParenthesesOpen(()"
"Identifier(i64)"
"Operator(.)"
"Identifier(or)"
"NewLine(\n)"
"Whitespace(      )"
"ParenthesesOpen(()"
"Identifier(call)"
"Whitespace( )"
"Identifier($getDiscriminant)"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(      )"
"ParenthesesOpen(()"
"Identifier(i64)"
"Operator(.)"
"Identifier(and)"
"NewLine(\n)"
"Whitespace(        )"
"ParenthesesOpen(()"
"Identifier(i64)"
"Operator(.)"
"Keyword(const)"
"Whitespace( )"
"NumberLiteral(0xFFFFFFFF)"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(        )"
"ParenthesesOpen(()"
"Identifier(local)"
"Operator(.)"
"Identifier(get)"
"Whitespace( )"
"Identifier($bytes)"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(      )"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(    )"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"CurlyBracesClose(})"
"NewLine(\n\n)"
"Whitespace(  )"
"MacroDecoration(#[)"
"Identifier(method)"
"VectorClose(])"
"NewLine(\n)"
"Whitespace(  )"
"Keyword(fun)"
"Whitespace( )"
"Identifier(substring)"
"ParenthesesOpen(()"
"Identifier(self)"
"Operator(:)"
"Whitespace( )"
"Identifier(string)"
"Comma(,)"
"Whitespace( )"
"Identifier(start)"
"Operator(:)"
"Whitespace( )"
"Identifier(i32)"
"Comma(,)"
"Whitespace( )"
"Identifier(end)"
"Operator(:)"
"Whitespace( )"
"Identifier(i32)"
"ParenthesesClose())"
"Operator(:)"
"Whitespace( )"
"Identifier(string)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(    )"
"Keyword(val)"
"Whitespace( )"
"Identifier(len)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(self)"
"Operator(.)"
"Identifier(length)"
"Whitespace( )"
"Keyword(as)"
"Whitespace( )"
"Identifier(i32)"
"NewLine(\n)"
"Whitespace(    )"
"Keyword(val)"
"Whitespace( )"
"Identifier(finalStart)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(min)"
"ParenthesesOpen(()"
"Identifier(max)"
"ParenthesesOpen(()"
"Identifier(start)"
"Comma(,)"
"Whitespace( )"
"NumberLiteral(0)"
"ParenthesesClose())"
"Comma(,)"
"Whitespace( )"
"Identifier(len)"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(    )"
"Keyword(val)"
"Whitespace( )"
"Identifier(finalEnd)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(min)"
"ParenthesesOpen(()"
"Identifier(max)"
"ParenthesesOpen(()"
"Identifier(end)"
"Comma(,)"
"Whitespace( )"
"NumberLiteral(0)"
"ParenthesesClose())"
"Comma(,)"
"Whitespace( )"
"Identifier(len)"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(    )"
"Keyword(val)"
"Whitespace( )"
"Identifier(fromPos)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(min)"
"ParenthesesOpen(()"
"Identifier(finalStart)"
"Comma(,)"
"Whitespace( )"
"Identifier(finalEnd)"
"ParenthesesClose())"
"Whitespace( )"
"Operator(<<)"
"Whitespace( )"
"NumberLiteral(1)"
"NewLine(\n)"
"Whitespace(    )"
"Keyword(val)"
"Whitespace( )"
"Identifier(toPos)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(max)"
"ParenthesesOpen(()"
"Identifier(finalStart)"
"Comma(,)"
"Whitespace( )"
"Identifier(finalEnd)"
"ParenthesesClose())"
"Whitespace( )"
"Operator(<<)"
"Whitespace( )"
"NumberLiteral(1)"
"NewLine(\n)"
"Whitespace(    )"
"Keyword(val)"
"Whitespace( )"
"Identifier(size)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(toPos)"
"Whitespace( )"
"Operator(-)"
"Whitespace( )"
"Identifier(fromPos)"
"NewLine(\n)"
"Whitespace(    )"
"Keyword(if)"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(size)"
"Whitespace( )"
"Operator(<=)"
"Whitespace( )"
"NumberLiteral(0)"
"ParenthesesClose())"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(      )"
"StringLiteral(\"\")"
"NewLine(\n)"
"Whitespace(    )"
"CurlyBracesClose(})"
"Whitespace( )"
"Keyword(else)"
"Whitespace( )"
"Keyword(if)"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(fromPos)"
"Whitespace( )"
"Operator(==)"
"Whitespace( )"
"NumberLiteral(0)"
"Whitespace( )"
"Operator(&&)"
"Whitespace( )"
"Identifier(toPos)"
"Whitespace( )"
"Operator(>=)"
"Whitespace( )"
"Identifier(len)"
"Whitespace( )"
"Operator(<<)"
"Whitespace( )"
"NumberLiteral(1)"
"ParenthesesClose())"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(      )"
"Identifier(self)"
"NewLine(\n)"
"Whitespace(    )"
"CurlyBracesClose(})"
"Whitespace( )"
"Keyword(else)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(      )"
"Keyword(val)"
"Whitespace( )"
"Identifier(out)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(bytes)"
"ParenthesesOpen(()"
"Identifier(size)"
"Whitespace( )"
"Keyword(as)"
"Whitespace( )"
"Identifier(u32)"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(      )"
"Identifier(system)"
"Operator(::)"
"Identifier(core)"
"Operator(::)"
"Identifier(memory)"
"Operator(::)"
"Identifier(memcpy)"
"ParenthesesOpen(()"
"Identifier(out)"
"Operator(.)"
"Identifier(ptr)"
"Comma(,)"
"Whitespace( )"
"Identifier(self)"
"Operator(.)"
"Identifier(ptr)"
"Whitespace( )"
"Operator(+)"
"Whitespace( )"
"Identifier(fromPos)"
"Whitespace( )"
"Keyword(as)"
"Whitespace( )"
"Identifier(u32)"
"Comma(,)"
"Whitespace( )"
"Identifier(size)"
"Whitespace( )"
"Keyword(as)"
"Whitespace( )"
"Identifier(u32)"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(      )"
"Identifier(string)"
"Operator(.)"
"Identifier(fromBytes)"
"ParenthesesOpen(()"
"Identifier(out)"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(    )"
"CurlyBracesClose(})"
"NewLine(\n)"
"Whitespace(  )"
"CurlyBracesClose(})"
"NewLine(\n\n)"
"Whitespace(  )"
"MacroDecoration(#[)"
"Identifier(method)"
"VectorClose(])"
"NewLine(\n)"
"Whitespace(  )"
"Keyword(fun)"
"Whitespace( )"
"Identifier(substring)"
"ParenthesesOpen(()"
"Identifier(self)"
"Operator(:)"
"Whitespace( )"
"Identifier(string)"
"Comma(,)"
"Whitespace( )"
"Identifier(start)"
"Operator(:)"
"Whitespace( )"
"Identifier(i32)"
"ParenthesesClose())"
"Operator(:)"
"Whitespace( )"
"Identifier(string)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(    )"
"Identifier(self)"
"Operator(.)"
"Identifier(substring)"
"ParenthesesOpen(()"
"Identifier(start)"
"Comma(,)"
"Whitespace( )"
"NumberLiteral(0x7FFFFFFF)"
"Whitespace( )"
"Keyword(as)"
"Whitespace( )"
"Identifier(i32)"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"CurlyBracesClose(})"
"NewLine(\n)"
"CurlyBracesClose(})"
"NewLine(\n\n)"
"LineComment(// UTILS\n)"
"Keyword(impl)"
"Whitespace( )"
"Identifier(string)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(  )"
"Keyword(fun)"
"Whitespace( )"
"Identifier(concat)"
"ParenthesesOpen(()"
"Identifier(lhs)"
"Operator(:)"
"Whitespace( )"
"Identifier(string)"
"Comma(,)"
"Whitespace( )"
"Identifier(rhs)"
"Operator(:)"
"Whitespace( )"
"Identifier(string)"
"ParenthesesClose())"
"Operator(:)"
"Whitespace( )"
"Identifier(string)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(    )"
"Keyword(val)"
"Whitespace( )"
"Identifier(lhsLen)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(lhs)"
"Operator(.)"
"Identifier(length)"
"Whitespace( )"
"Operator(*)"
"Whitespace( )"
"NumberLiteral(2)"
"Whitespace( )"
"Keyword(as)"
"Whitespace( )"
"Identifier(u32)"
"NewLine(\n)"
"Whitespace(    )"
"Keyword(val)"
"Whitespace( )"
"Identifier(rhsLen)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(rhs)"
"Operator(.)"
"Identifier(length)"
"Whitespace( )"
"Operator(*)"
"Whitespace( )"
"NumberLiteral(2)"
"Whitespace( )"
"Keyword(as)"
"Whitespace( )"
"Identifier(u32)"
"NewLine(\n\n)"
"Whitespace(    )"
"Keyword(val)"
"Whitespace( )"
"Identifier($ret)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(bytes)"
"ParenthesesOpen(()"
"Identifier(lhsLen)"
"Whitespace( )"
"Operator(+)"
"Whitespace( )"
"Identifier(rhsLen)"
"ParenthesesClose())"
"NewLine(\n\n)"
"Whitespace(    )"
"Identifier(system)"
"Operator(::)"
"Identifier(core)"
"Operator(::)"
"Identifier(memory)"
"Operator(::)"
"Identifier(memcpy)"
"ParenthesesOpen(()"
"NewLine(\n)"
"Whitespace(      )"
"Identifier(system)"
"Operator(::)"
"Identifier(core)"
"Operator(::)"
"Identifier(memory)"
"Operator(::)"
"Identifier(memcpy)"
"ParenthesesOpen(()"
"NewLine(\n)"
"Whitespace(        )"
"Identifier($ret)"
"Operator(.)"
"Identifier(ptr)"
"Comma(,)"
"NewLine(\n)"
"Whitespace(        )"
"Identifier(lhs)"
"Operator(.)"
"Identifier(ptr)"
"Comma(,)"
"NewLine(\n)"
"Whitespace(        )"
"Identifier(lhsLen)"
"NewLine(\n)"
"Whitespace(      )"
"ParenthesesClose())"
"Comma(,)"
"NewLine(\n)"
"Whitespace(      )"
"Identifier(rhs)"
"Operator(.)"
"Identifier(ptr)"
"Comma(,)"
"NewLine(\n)"
"Whitespace(      )"
"Identifier(rhsLen)"
"NewLine(\n)"
"Whitespace(    )"
"ParenthesesClose())"
"NewLine(\n\n)"
"Whitespace(    )"
"Identifier(string)"
"Operator(.)"
"Identifier(fromBytes)"
"ParenthesesOpen(()"
"Identifier($ret)"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"CurlyBracesClose(})"
"NewLine(\n\n)"
"Whitespace(  )"
"Keyword(fun)"
"Whitespace( )"
"Identifier(store)"
"ParenthesesOpen(()"
"Identifier(lhs)"
"Operator(:)"
"Whitespace( )"
"Identifier(ref)"
"Comma(,)"
"Whitespace( )"
"Identifier(rhs)"
"Operator(:)"
"Whitespace( )"
"Identifier(string)"
"ParenthesesClose())"
"Operator(:)"
"Whitespace( )"
"Identifier(void)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Operator(%)"
"Identifier(wasm)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(    )"
"ParenthesesOpen(()"
"Identifier(i64)"
"Operator(.)"
"Identifier(store)"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(call)"
"Whitespace( )"
"Identifier($addressFromRef)"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(get_local)"
"Whitespace( )"
"Identifier($lhs)"
"ParenthesesClose())"
"ParenthesesClose())"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(get_local)"
"Whitespace( )"
"Identifier($rhs)"
"ParenthesesClose())"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"CurlyBracesClose(})"
"NewLine(\n\n)"
"Whitespace(  )"
"Keyword(fun)"
"Whitespace( )"
"Identifier(store)"
"ParenthesesOpen(()"
"Identifier(lhs)"
"Operator(:)"
"Whitespace( )"
"Identifier(ref)"
"Comma(,)"
"Whitespace( )"
"Identifier(rhs)"
"Operator(:)"
"Whitespace( )"
"Identifier(string)"
"Comma(,)"
"Whitespace( )"
"Identifier(offset)"
"Operator(:)"
"Whitespace( )"
"Identifier(u32)"
"ParenthesesClose())"
"Operator(:)"
"Whitespace( )"
"Identifier(void)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Operator(%)"
"Identifier(wasm)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(    )"
"ParenthesesOpen(()"
"Identifier(i64)"
"Operator(.)"
"Identifier(store)"
"NewLine(\n)"
"Whitespace(      )"
"ParenthesesOpen(()"
"Identifier(i32)"
"Operator(.)"
"Identifier(add)"
"NewLine(\n)"
"Whitespace(        )"
"ParenthesesOpen(()"
"Identifier(get_local)"
"Whitespace( )"
"Identifier($offset)"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(        )"
"ParenthesesOpen(()"
"Identifier(call)"
"Whitespace( )"
"Identifier($addressFromRef)"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(get_local)"
"Whitespace( )"
"Identifier($lhs)"
"ParenthesesClose())"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(      )"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(      )"
"ParenthesesOpen(()"
"Identifier(get_local)"
"Whitespace( )"
"Identifier($rhs)"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(    )"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"CurlyBracesClose(})"
"NewLine(\n\n)"
"Whitespace(  )"
"Keyword(fun)"
"Whitespace( )"
"Identifier(load)"
"ParenthesesOpen(()"
"Identifier(lhs)"
"Operator(:)"
"Whitespace( )"
"Identifier(ref)"
"ParenthesesClose())"
"Operator(:)"
"Whitespace( )"
"Identifier(string)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Operator(%)"
"Identifier(wasm)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(    )"
"ParenthesesOpen(()"
"Identifier(i64)"
"Operator(.)"
"Identifier(load)"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(call)"
"Whitespace( )"
"Identifier($addressFromRef)"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(get_local)"
"Whitespace( )"
"Identifier($lhs)"
"ParenthesesClose())"
"ParenthesesClose())"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"CurlyBracesClose(})"
"NewLine(\n\n)"
"Whitespace(  )"
"Keyword(fun)"
"Whitespace( )"
"Identifier(load)"
"ParenthesesOpen(()"
"Identifier(lhs)"
"Operator(:)"
"Whitespace( )"
"Identifier(ref)"
"Comma(,)"
"Whitespace( )"
"Identifier(offset)"
"Operator(:)"
"Whitespace( )"
"Identifier(u32)"
"ParenthesesClose())"
"Operator(:)"
"Whitespace( )"
"Identifier(string)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Operator(%)"
"Identifier(wasm)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(    )"
"ParenthesesOpen(()"
"Identifier(i64)"
"Operator(.)"
"Identifier(load)"
"NewLine(\n)"
"Whitespace(      )"
"ParenthesesOpen(()"
"Identifier(i32)"
"Operator(.)"
"Identifier(add)"
"NewLine(\n)"
"Whitespace(        )"
"ParenthesesOpen(()"
"Identifier(get_local)"
"Whitespace( )"
"Identifier($offset)"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(        )"
"ParenthesesOpen(()"
"Identifier(call)"
"Whitespace( )"
"Identifier($addressFromRef)"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(get_local)"
"Whitespace( )"
"Identifier($lhs)"
"ParenthesesClose())"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(      )"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(    )"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"CurlyBracesClose(})"
"NewLine(\n\n)"
"Whitespace(  )"
"Keyword(fun)"
"Whitespace( )"
"Operator(!=)"
"ParenthesesOpen(()"
"Identifier(lhs)"
"Operator(:)"
"Whitespace( )"
"Identifier(string)"
"Comma(,)"
"Whitespace( )"
"Identifier(rhs)"
"Operator(:)"
"Whitespace( )"
"Identifier(string)"
"ParenthesesClose())"
"Operator(:)"
"Whitespace( )"
"Identifier(boolean)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Operator(!)"
"ParenthesesOpen(()"
"Identifier(lhs)"
"Whitespace( )"
"Operator(==)"
"Whitespace( )"
"Identifier(rhs)"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"Keyword(fun)"
"Whitespace( )"
"Operator(==)"
"ParenthesesOpen(()"
"Identifier(lhs)"
"Operator(:)"
"Whitespace( )"
"Identifier(string)"
"Comma(,)"
"Whitespace( )"
"Identifier(rhs)"
"Operator(:)"
"Whitespace( )"
"Identifier(string)"
"ParenthesesClose())"
"Operator(:)"
"Whitespace( )"
"Identifier(boolean)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(    )"
"Keyword(if)"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(lhs)"
"Operator(.)"
"Identifier(length)"
"Whitespace( )"
"Operator(==)"
"Whitespace( )"
"Identifier(rhs)"
"Operator(.)"
"Identifier(length)"
"ParenthesesClose())"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(      )"
"Keyword(if)"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(lhs)"
"Operator(.)"
"Identifier(ptr)"
"Whitespace( )"
"Operator(==)"
"Whitespace( )"
"Identifier(rhs)"
"Operator(.)"
"Identifier(ptr)"
"ParenthesesClose())"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(        )"
"Keyword(true)"
"NewLine(\n)"
"Whitespace(      )"
"CurlyBracesClose(})"
"Whitespace( )"
"Keyword(else)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(        )"
"Keyword(var)"
"Whitespace( )"
"Identifier(len)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(lhs)"
"Operator(.)"
"Identifier(length)"
"NewLine(\n)"
"Whitespace(        )"
"Keyword(var)"
"Whitespace( )"
"Identifier(equals)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Keyword(true)"
"NewLine(\n)"
"Whitespace(        )"
"Keyword(loop)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(          )"
"Keyword(if)"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(len)"
"Whitespace( )"
"Operator(<=)"
"Whitespace( )"
"NumberLiteral(0)"
"Whitespace( )"
"Keyword(as)"
"Whitespace( )"
"Identifier(u32)"
"ParenthesesClose())"
"Whitespace( )"
"Keyword(break)"
"NewLine(\n)"
"Whitespace(          )"
"Identifier(len)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(len)"
"Whitespace( )"
"Operator(-)"
"Whitespace( )"
"NumberLiteral(1)"
"Whitespace( )"
"Keyword(as)"
"Whitespace( )"
"Identifier(u32)"
"NewLine(\n)"
"Whitespace(          )"
"Keyword(if)"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(lhs)"
"VectorOpen([)"
"Identifier(len)"
"VectorClose(])"
"Whitespace( )"
"Operator(!=)"
"Whitespace( )"
"Identifier(rhs)"
"VectorOpen([)"
"Identifier(len)"
"VectorClose(])"
"ParenthesesClose())"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(            )"
"Identifier(equals)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Keyword(false)"
"NewLine(\n)"
"Whitespace(            )"
"Keyword(break)"
"NewLine(\n)"
"Whitespace(          )"
"CurlyBracesClose(})"
"NewLine(\n)"
"Whitespace(          )"
"Keyword(if)"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(len)"
"Whitespace( )"
"Operator(>)"
"Whitespace( )"
"NumberLiteral(0)"
"Whitespace( )"
"Keyword(as)"
"Whitespace( )"
"Identifier(u32)"
"ParenthesesClose())"
"Whitespace( )"
"Keyword(continue)"
"NewLine(\n)"
"Whitespace(        )"
"CurlyBracesClose(})"
"NewLine(\n)"
"Whitespace(        )"
"Identifier(equals)"
"NewLine(\n)"
"Whitespace(      )"
"CurlyBracesClose(})"
"NewLine(\n)"
"Whitespace(    )"
"CurlyBracesClose(})"
"Whitespace( )"
"Keyword(else)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(      )"
"Keyword(false)"
"NewLine(\n)"
"Whitespace(    )"
"CurlyBracesClose(})"
"NewLine(\n)"
"Whitespace(  )"
"CurlyBracesClose(})"
"NewLine(\n)"
"CurlyBracesClose(})"
"NewLine(\n\n)"
"LineComment(// Aux functions\n)"
"Keyword(impl)"
"Whitespace( )"
"Identifier(string)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(  )"
"Keyword(fun)"
"Whitespace( )"
"Identifier(charLength)"
"ParenthesesOpen(()"
"Identifier(value)"
"Operator(:)"
"Whitespace( )"
"Identifier(i64)"
"ParenthesesClose())"
"Operator(:)"
"Whitespace( )"
"Identifier(u32)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(    )"
"Keyword(if)"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(value)"
"Whitespace( )"
"Operator(==)"
"Whitespace( )"
"NumberLiteral(0)"
"Whitespace( )"
"Keyword(as)"
"Whitespace( )"
"Identifier(i64)"
"ParenthesesClose())"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(      )"
"NumberLiteral(1)"
"Whitespace( )"
"Keyword(as)"
"Whitespace( )"
"Identifier(u32)"
"NewLine(\n)"
"Whitespace(    )"
"CurlyBracesClose(})"
"Whitespace( )"
"Keyword(else)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(      )"
"Keyword(var)"
"Whitespace( )"
"Identifier(len)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"NumberLiteral(0)"
"Whitespace( )"
"LineComment(// Math.log10(value)\n)"
"Whitespace(      )"
"Keyword(val)"
"Whitespace( )"
"Identifier(i64_10)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"NumberLiteral(10)"
"Whitespace( )"
"Keyword(as)"
"Whitespace( )"
"Identifier(i64)"
"NewLine(\n)"
"Whitespace(      )"
"Keyword(var)"
"Whitespace( )"
"Identifier(current)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(value)"
"NewLine(\n\n)"
"Whitespace(      )"
"Keyword(if)"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(value)"
"Whitespace( )"
"Operator(<)"
"Whitespace( )"
"NumberLiteral(0)"
"Whitespace( )"
"Keyword(as)"
"Whitespace( )"
"Identifier(i64)"
"ParenthesesClose())"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(        )"
"Identifier(len)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(len)"
"Whitespace( )"
"Operator(+)"
"Whitespace( )"
"NumberLiteral(1)"
"NewLine(\n)"
"Whitespace(        )"
"Identifier(current)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Operator(-)"
"Identifier(current)"
"NewLine(\n)"
"Whitespace(      )"
"CurlyBracesClose(})"
"NewLine(\n\n)"
"Whitespace(      )"
"Keyword(loop)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(        )"
"Identifier(current)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(current)"
"Whitespace( )"
"Operator(/)"
"Whitespace( )"
"Identifier(i64_10)"
"NewLine(\n)"
"Whitespace(        )"
"Identifier(len)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(len)"
"Whitespace( )"
"Operator(+)"
"Whitespace( )"
"NumberLiteral(1)"
"NewLine(\n\n)"
"Whitespace(        )"
"Keyword(if)"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(current)"
"Whitespace( )"
"Operator(>)"
"Whitespace( )"
"NumberLiteral(0)"
"Whitespace( )"
"Keyword(as)"
"Whitespace( )"
"Identifier(i64)"
"ParenthesesClose())"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(          )"
"Keyword(continue)"
"NewLine(\n)"
"Whitespace(        )"
"CurlyBracesClose(})"
"Whitespace( )"
"Keyword(else)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(          )"
"Keyword(break)"
"NewLine(\n)"
"Whitespace(        )"
"CurlyBracesClose(})"
"NewLine(\n)"
"Whitespace(      )"
"CurlyBracesClose(})"
"NewLine(\n\n)"
"Whitespace(      )"
"Identifier(len)"
"Whitespace( )"
"Keyword(as)"
"Whitespace( )"
"Identifier(u32)"
"NewLine(\n)"
"Whitespace(    )"
"CurlyBracesClose(})"
"NewLine(\n)"
"Whitespace(  )"
"CurlyBracesClose(})"
"NewLine(\n\n)"
"Whitespace(  )"
"Keyword(fun)"
"Whitespace( )"
"Identifier(charLength)"
"ParenthesesOpen(()"
"Identifier(value)"
"Operator(:)"
"Whitespace( )"
"Identifier(u64)"
"ParenthesesClose())"
"Operator(:)"
"Whitespace( )"
"Identifier(u32)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(    )"
"Keyword(if)"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(value)"
"Whitespace( )"
"Operator(==)"
"Whitespace( )"
"NumberLiteral(0)"
"Whitespace( )"
"Keyword(as)"
"Whitespace( )"
"Identifier(u64)"
"ParenthesesClose())"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(      )"
"NumberLiteral(1)"
"Whitespace( )"
"Keyword(as)"
"Whitespace( )"
"Identifier(u32)"
"NewLine(\n)"
"Whitespace(    )"
"CurlyBracesClose(})"
"Whitespace( )"
"Keyword(else)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(      )"
"Keyword(var)"
"Whitespace( )"
"Identifier(len)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"NumberLiteral(0)"
"Whitespace( )"
"LineComment(// Math.log10(value)\n)"
"Whitespace(      )"
"Keyword(val)"
"Whitespace( )"
"Identifier(u64_10)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"NumberLiteral(10)"
"Whitespace( )"
"Keyword(as)"
"Whitespace( )"
"Identifier(u64)"
"NewLine(\n)"
"Whitespace(      )"
"Keyword(var)"
"Whitespace( )"
"Identifier(current)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(value)"
"NewLine(\n\n)"
"Whitespace(      )"
"Keyword(loop)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(        )"
"Identifier(current)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(current)"
"Whitespace( )"
"Operator(/)"
"Whitespace( )"
"Identifier(u64_10)"
"NewLine(\n)"
"Whitespace(        )"
"Identifier(len)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(len)"
"Whitespace( )"
"Operator(+)"
"Whitespace( )"
"NumberLiteral(1)"
"NewLine(\n\n)"
"Whitespace(        )"
"Keyword(if)"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(current)"
"Whitespace( )"
"Operator(>)"
"Whitespace( )"
"NumberLiteral(0)"
"Whitespace( )"
"Keyword(as)"
"Whitespace( )"
"Identifier(u64)"
"ParenthesesClose())"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(          )"
"Keyword(continue)"
"NewLine(\n)"
"Whitespace(        )"
"CurlyBracesClose(})"
"Whitespace( )"
"Keyword(else)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(          )"
"Keyword(break)"
"NewLine(\n)"
"Whitespace(        )"
"CurlyBracesClose(})"
"NewLine(\n)"
"Whitespace(      )"
"CurlyBracesClose(})"
"NewLine(\n\n)"
"Whitespace(      )"
"Identifier(len)"
"Whitespace( )"
"Keyword(as)"
"Whitespace( )"
"Identifier(u32)"
"NewLine(\n)"
"Whitespace(    )"
"CurlyBracesClose(})"
"NewLine(\n)"
"Whitespace(  )"
"CurlyBracesClose(})"
"NewLine(\n\n)"
"Whitespace(  )"
"Keyword(fun)"
"Whitespace( )"
"Identifier(printToBytes)"
"ParenthesesOpen(()"
"Identifier(dst)"
"Operator(:)"
"Whitespace( )"
"Identifier(bytes)"
"Comma(,)"
"Whitespace( )"
"Identifier(value)"
"Operator(:)"
"Whitespace( )"
"Identifier(u64)"
"Comma(,)"
"Whitespace( )"
"Identifier(endChar)"
"Operator(:)"
"Whitespace( )"
"Identifier(u32)"
"ParenthesesClose())"
"Operator(:)"
"Whitespace( )"
"Identifier(void)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(    )"
"Keyword(val)"
"Whitespace( )"
"Identifier(ZERO_CHAR)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"NumberLiteral(48)"
"Whitespace( )"
"Keyword(as)"
"Whitespace( )"
"Identifier(u16)"
"NewLine(\n)"
"Whitespace(    )"
"Keyword(var)"
"Whitespace( )"
"Identifier(num)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(value)"
"NewLine(\n)"
"Whitespace(    )"
"Keyword(var)"
"Whitespace( )"
"Identifier(offset)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(endChar)"
"Whitespace( )"
"Keyword(as)"
"Whitespace( )"
"Identifier(i32)"
"NewLine(\n)"
"Whitespace(    )"
"Keyword(val)"
"Whitespace( )"
"Identifier(u64_10)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"NumberLiteral(10)"
"Whitespace( )"
"Keyword(as)"
"Whitespace( )"
"Identifier(u64)"
"NewLine(\n\n)"
"Whitespace(    )"
"Keyword(loop)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(      )"
"Keyword(val)"
"Whitespace( )"
"Identifier(t)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(num)"
"Whitespace( )"
"Operator(/)"
"Whitespace( )"
"Identifier(u64_10)"
"NewLine(\n)"
"Whitespace(      )"
"Keyword(val)"
"Whitespace( )"
"Identifier(r)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(num)"
"Whitespace( )"
"Operator(%)"
"Whitespace( )"
"Identifier(u64_10)"
"ParenthesesClose())"
"Whitespace( )"
"Keyword(as)"
"Whitespace( )"
"Identifier(u16)"
"NewLine(\n)"
"Whitespace(      )"
"Identifier(num)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(t)"
"NewLine(\n)"
"Whitespace(      )"
"Identifier(offset)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(offset)"
"Whitespace( )"
"Operator(-)"
"Whitespace( )"
"NumberLiteral(1)"
"NewLine(\n)"
"Whitespace(      )"
"Identifier(bytes)"
"Operator(.)"
"Identifier(set)"
"ParenthesesOpen(()"
"Identifier(dst)"
"Comma(,)"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(offset)"
"Whitespace( )"
"Operator(<<)"
"Whitespace( )"
"NumberLiteral(1)"
"ParenthesesClose())"
"Whitespace( )"
"Keyword(as)"
"Whitespace( )"
"Identifier(u32)"
"Comma(,)"
"Whitespace( )"
"Identifier(ZERO_CHAR)"
"Whitespace( )"
"Operator(+)"
"Whitespace( )"
"Identifier(r)"
"ParenthesesClose())"
"NewLine(\n\n)"
"Whitespace(      )"
"Keyword(if)"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(num)"
"Whitespace( )"
"Operator(==)"
"Whitespace( )"
"NumberLiteral(0)"
"Whitespace( )"
"Keyword(as)"
"Whitespace( )"
"Identifier(u64)"
"ParenthesesClose())"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(        )"
"Keyword(break)"
"NewLine(\n)"
"Whitespace(      )"
"CurlyBracesClose(})"
"Whitespace( )"
"Keyword(else)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(        )"
"Keyword(continue)"
"NewLine(\n)"
"Whitespace(      )"
"CurlyBracesClose(})"
"NewLine(\n)"
"Whitespace(    )"
"CurlyBracesClose(})"
"NewLine(\n)"
"Whitespace(  )"
"CurlyBracesClose(})"
"NewLine(\n\n)"
"Whitespace(  )"
"Keyword(fun)"
"Whitespace( )"
"Identifier(stringify)"
"ParenthesesOpen(()"
"Identifier(value)"
"Operator(:)"
"Whitespace( )"
"Identifier(boolean)"
"ParenthesesClose())"
"Operator(:)"
"Whitespace( )"
"Identifier(string)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(    )"
"Keyword(if)"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(value)"
"ParenthesesClose())"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(      )"
"StringLiteral(\"true\")"
"NewLine(\n)"
"Whitespace(    )"
"CurlyBracesClose(})"
"Whitespace( )"
"Keyword(else)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(      )"
"StringLiteral(\"false\")"
"NewLine(\n)"
"Whitespace(    )"
"CurlyBracesClose(})"
"NewLine(\n)"
"Whitespace(  )"
"CurlyBracesClose(})"
"NewLine(\n\n)"
"Whitespace(  )"
"Keyword(fun)"
"Whitespace( )"
"Identifier(stringify)"
"ParenthesesOpen(()"
"Identifier(value)"
"Operator(:)"
"Whitespace( )"
"Identifier(u8)"
"ParenthesesClose())"
"Operator(:)"
"Whitespace( )"
"Identifier(string)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(    )"
"Identifier(stringify)"
"ParenthesesOpen(()"
"Identifier(value)"
"Whitespace( )"
"Keyword(as)"
"Whitespace( )"
"Identifier(u64)"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"CurlyBracesClose(})"
"NewLine(\n\n)"
"Whitespace(  )"
"Keyword(fun)"
"Whitespace( )"
"Identifier(stringify)"
"ParenthesesOpen(()"
"Identifier(value)"
"Operator(:)"
"Whitespace( )"
"Identifier(u16)"
"ParenthesesClose())"
"Operator(:)"
"Whitespace( )"
"Identifier(string)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(    )"
"Identifier(stringify)"
"ParenthesesOpen(()"
"Identifier(value)"
"Whitespace( )"
"Keyword(as)"
"Whitespace( )"
"Identifier(u64)"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"CurlyBracesClose(})"
"NewLine(\n\n)"
"Whitespace(  )"
"Keyword(fun)"
"Whitespace( )"
"Identifier(stringify)"
"ParenthesesOpen(()"
"Identifier(value)"
"Operator(:)"
"Whitespace( )"
"Identifier(i16)"
"ParenthesesClose())"
"Operator(:)"
"Whitespace( )"
"Identifier(string)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(    )"
"Identifier(stringify)"
"ParenthesesOpen(()"
"Identifier(value)"
"Whitespace( )"
"Keyword(as)"
"Whitespace( )"
"Identifier(i64)"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"CurlyBracesClose(})"
"NewLine(\n\n)"
"Whitespace(  )"
"Keyword(fun)"
"Whitespace( )"
"Identifier(stringify)"
"ParenthesesOpen(()"
"Identifier(value)"
"Operator(:)"
"Whitespace( )"
"Identifier(i32)"
"ParenthesesClose())"
"Operator(:)"
"Whitespace( )"
"Identifier(string)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(    )"
"Identifier(stringify)"
"ParenthesesOpen(()"
"Identifier(value)"
"Whitespace( )"
"Keyword(as)"
"Whitespace( )"
"Identifier(i64)"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"CurlyBracesClose(})"
"NewLine(\n\n)"
"Whitespace(  )"
"Keyword(fun)"
"Whitespace( )"
"Identifier(stringify)"
"ParenthesesOpen(()"
"Identifier(value)"
"Operator(:)"
"Whitespace( )"
"Identifier(u32)"
"ParenthesesClose())"
"Operator(:)"
"Whitespace( )"
"Identifier(string)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(    )"
"Identifier(stringify)"
"ParenthesesOpen(()"
"Identifier(value)"
"Whitespace( )"
"Keyword(as)"
"Whitespace( )"
"Identifier(u64)"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(  )"
"CurlyBracesClose(})"
"NewLine(\n\n)"
"Whitespace(  )"
"Keyword(fun)"
"Whitespace( )"
"Identifier(stringify)"
"ParenthesesOpen(()"
"Identifier(value)"
"Operator(:)"
"Whitespace( )"
"Identifier(i64)"
"ParenthesesClose())"
"Operator(:)"
"Whitespace( )"
"Identifier(string)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(    )"
"Keyword(if)"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(value)"
"Whitespace( )"
"Operator(==)"
"Whitespace( )"
"NumberLiteral(0)"
"ParenthesesClose())"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(      )"
"StringLiteral(\"0\")"
"NewLine(\n)"
"Whitespace(    )"
"CurlyBracesClose(})"
"Whitespace( )"
"Keyword(else)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(      )"
"Keyword(var)"
"Whitespace( )"
"Identifier(len)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(charLength)"
"ParenthesesOpen(()"
"Identifier(value)"
"ParenthesesClose())"
"NewLine(\n\n)"
"Whitespace(      )"
"Keyword(val)"
"Whitespace( )"
"Identifier(ret)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(bytes)"
"ParenthesesOpen(()"
"Identifier(len)"
"Whitespace( )"
"Operator(<<)"
"Whitespace( )"
"NumberLiteral(1)"
"ParenthesesClose())"
"NewLine(\n\n)"
"Whitespace(      )"
"Keyword(if)"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(value)"
"Whitespace( )"
"Operator(>)"
"Whitespace( )"
"NumberLiteral(0)"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(        )"
"Identifier(printToBytes)"
"ParenthesesOpen(()"
"Identifier(ret)"
"Comma(,)"
"Whitespace( )"
"Identifier(value)"
"Whitespace( )"
"Keyword(as)"
"Whitespace( )"
"Identifier(u64)"
"Comma(,)"
"Whitespace( )"
"Identifier(len)"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(      )"
"Keyword(else)"
"NewLine(\n)"
"Whitespace(        )"
"Identifier(printToBytes)"
"ParenthesesOpen(()"
"Identifier(ret)"
"Comma(,)"
"Whitespace( )"
"ParenthesesOpen(()"
"Operator(-)"
"Identifier(value)"
"ParenthesesClose())"
"Whitespace( )"
"Keyword(as)"
"Whitespace( )"
"Identifier(u64)"
"Comma(,)"
"Whitespace( )"
"Identifier(len)"
"ParenthesesClose())"
"NewLine(\n\n)"
"Whitespace(      )"
"Keyword(if)"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(value)"
"Whitespace( )"
"Operator(<)"
"Whitespace( )"
"NumberLiteral(0)"
"ParenthesesClose())"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(        )"
"LineComment(// 45 == '-'\n)"
"Whitespace(        )"
"Identifier(u16)"
"Operator(.)"
"Identifier(store)"
"ParenthesesOpen(()"
"Identifier(ret)"
"Operator(.)"
"Identifier(ptr)"
"Whitespace( )"
"Keyword(as)"
"Whitespace( )"
"Identifier(ref)"
"Comma(,)"
"Whitespace( )"
"NumberLiteral(45)"
"Whitespace( )"
"Keyword(as)"
"Whitespace( )"
"Identifier(u16)"
"Comma(,)"
"Whitespace( )"
"NumberLiteral(0)"
"Whitespace( )"
"Keyword(as)"
"Whitespace( )"
"Identifier(u32)"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(      )"
"CurlyBracesClose(})"
"NewLine(\n\n)"
"Whitespace(      )"
"Identifier(string)"
"Operator(.)"
"Identifier(fromBytes)"
"ParenthesesOpen(()"
"Identifier(ret)"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(    )"
"CurlyBracesClose(})"
"NewLine(\n)"
"Whitespace(  )"
"CurlyBracesClose(})"
"NewLine(\n\n)"
"Whitespace(  )"
"Keyword(fun)"
"Whitespace( )"
"Identifier(stringify)"
"ParenthesesOpen(()"
"Identifier(value)"
"Operator(:)"
"Whitespace( )"
"Identifier(u64)"
"ParenthesesClose())"
"Operator(:)"
"Whitespace( )"
"Identifier(string)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(    )"
"Keyword(if)"
"Whitespace( )"
"ParenthesesOpen(()"
"Identifier(value)"
"Whitespace( )"
"Operator(==)"
"Whitespace( )"
"NumberLiteral(0)"
"Whitespace( )"
"Keyword(as)"
"Whitespace( )"
"Identifier(u64)"
"ParenthesesClose())"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(      )"
"StringLiteral(\"0\")"
"NewLine(\n)"
"Whitespace(    )"
"CurlyBracesClose(})"
"Whitespace( )"
"Keyword(else)"
"Whitespace( )"
"CurlyBracesOpen({)"
"NewLine(\n)"
"Whitespace(      )"
"Keyword(var)"
"Whitespace( )"
"Identifier(len)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(charLength)"
"ParenthesesOpen(()"
"Identifier(value)"
"ParenthesesClose())"
"NewLine(\n\n)"
"Whitespace(      )"
"Keyword(val)"
"Whitespace( )"
"Identifier(ret)"
"Whitespace( )"
"Operator(=)"
"Whitespace( )"
"Identifier(bytes)"
"ParenthesesOpen(()"
"Identifier(len)"
"Whitespace( )"
"Operator(<<)"
"Whitespace( )"
"NumberLiteral(1)"
"ParenthesesClose())"
"NewLine(\n\n)"
"Whitespace(      )"
"Identifier(printToBytes)"
"ParenthesesOpen(()"
"Identifier(ret)"
"Comma(,)"
"Whitespace( )"
"Identifier(value)"
"Comma(,)"
"Whitespace( )"
"Identifier(len)"
"ParenthesesClose())"
"NewLine(\n\n)"
"Whitespace(      )"
"Identifier(string)"
"Operator(.)"
"Identifier(fromBytes)"
"ParenthesesOpen(()"
"Identifier(ret)"
"ParenthesesClose())"
"NewLine(\n)"
"Whitespace(    )"
"CurlyBracesClose(})"
"NewLine(\n)"
"Whitespace(  )"
"CurlyBracesClose(})"
"NewLine(\n)"
"CurlyBracesClose(})"
"NewLine(\n)"
"EndOfFile"