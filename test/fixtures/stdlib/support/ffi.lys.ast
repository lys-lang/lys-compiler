|-Document
  |-FunctionDirective
    |-Decorators
      <Rule0>
    |-PrivateModifier
      |-Identifier=private
    |-FunDeclaration
      |-FunctionName
        |-NameIdentifier
          |-Identifier=stringDiscriminant
      |-FunctionParamsList
        |-ParameterList
          <Rule0>
      |-OfType
        |-Operator=:
        |-Type
          |-Reference
            |-QName
              |-NameIdentifier
                |-Identifier=u64
      |-FunAssignExpression
        |-Operator==
        |-CodeBlock
          |-ValDeclaration
            |-NameIdentifier
              |-Identifier=discriminant
            |-OfType
              |-Operator=:
              |-Type
                |-Reference
                  |-QName
                    |-NameIdentifier
                      |-Identifier=u32
            |-Operator==
            |-AtomicExpression
              |-Reference
                |-QName
                  |-NameIdentifier
                    |-Identifier=string
              |-MemberExpression
                |-BinMemberOperator
                  |-Operator=.^
                |-NameIdentifier
                  |-Identifier=discriminant
          |-ShiftExpression
            |-AsExpression
              |-Reference
                |-QName
                  |-NameIdentifier
                    |-Identifier=discriminant
              |-AsKeyword
                |-Identifier=as
              |-Type
                |-Reference
                  |-QName
                    |-NameIdentifier
                      |-Identifier=u64
            |-ShiftOperator
              |-Operator=<<
            |-NumberLiteral=32
  |-FunctionDirective
    |-Decorators
      |-Decorator
        |-NameIdentifier
          |-Identifier=export
        |-StringLiteral="ffi_allocateString"
    |-PrivateModifier
      |-Identifier=private
    |-FunDeclaration
      |-FunctionName
        |-NameIdentifier
          |-Identifier=allocateString
      |-FunctionParamsList
        |-ParameterList
          |-Parameter
            |-NameIdentifier
              |-Identifier=sizeInChars
            |-OfType
              |-Operator=:
              |-Type
                |-Reference
                  |-QName
                    |-NameIdentifier
                      |-Identifier=u32
      |-OfType
        |-Operator=:
        |-Type
          |-Reference
            |-QName
              |-NameIdentifier
                |-Identifier=UnsafeCPointer
      |-FunAssignExpression
        |-Operator==
        |-CodeBlock
          |-AsExpression
            |-AtomicExpression
              |-Reference
                |-QName
                  |-NameIdentifier
                    |-Identifier=string
              |-MemberExpression
                |-BinMemberOperator
                  |-Operator=.
                |-NameIdentifier
                  |-Identifier=fromBytes
              |-CallArguments
                |-AtomicExpression
                  |-Reference
                    |-QName
                      |-NameIdentifier
                        |-Identifier=bytes
                  |-CallArguments
                    |-ShiftExpression
                      |-Reference
                        |-QName
                          |-NameIdentifier
                            |-Identifier=sizeInChars
                      |-ShiftOperator
                        |-Operator=<<
                      |-NumberLiteral=1
            |-AsKeyword
              |-Identifier=as
            |-Type
              |-Reference
                |-QName
                  |-NameIdentifier
                    |-Identifier=UnsafeCPointer
  |-TypeDirective
    |-Identifier=type
    |-NameIdentifier
      |-Identifier=UCS2
  |-<UNEXPECTED TOKEN>==
  |-<UNEXPECTED TOKEN>= 
  |-<UNEXPECTED TOKEN>=void
  |-<UNEXPECTED TOKEN>=


  |-<UNEXPECTED TOKEN>=impl
  |-<UNEXPECTED TOKEN>= 
  |-<UNEXPECTED TOKEN>=UCS2
  |-<UNEXPECTED TOKEN>= 
  |-<UNEXPECTED TOKEN>={
  |-<UNEXPECTED TOKEN>=

  |-<UNEXPECTED TOKEN>=  
  |-<UNEXPECTED TOKEN>=// Converts a pointer resulted from a allocBytes to a string

  |-<UNEXPECTED TOKEN>=  
  |-<UNEXPECTED TOKEN>=fun
  |-<UNEXPECTED TOKEN>= 
  |-<UNEXPECTED TOKEN>=fromPtr
  |-<UNEXPECTED TOKEN>=(
  |-<UNEXPECTED TOKEN>=bytesPointer
  |-<UNEXPECTED TOKEN>=:
  |-<UNEXPECTED TOKEN>= 
  |-<UNEXPECTED TOKEN>=UnsafeCPointer
  |-<UNEXPECTED TOKEN>=)
  |-<UNEXPECTED TOKEN>=:
  |-<UNEXPECTED TOKEN>= 
  |-<UNEXPECTED TOKEN>=string
  |-<UNEXPECTED TOKEN>= 
  |-<UNEXPECTED TOKEN>==
  |-<UNEXPECTED TOKEN>= 
  |-<UNEXPECTED TOKEN>=%
  |-<UNEXPECTED TOKEN>=wasm
  |-<UNEXPECTED TOKEN>= 
  |-<UNEXPECTED TOKEN>={
  |-<UNEXPECTED TOKEN>=

  |-<UNEXPECTED TOKEN>=    
  |-<UNEXPECTED TOKEN>=(
  |-<UNEXPECTED TOKEN>=i64
  |-<UNEXPECTED TOKEN>=.
  |-<UNEXPECTED TOKEN>=or
  |-<UNEXPECTED TOKEN>=

  |-<UNEXPECTED TOKEN>=      
  |-<UNEXPECTED TOKEN>=(
  |-<UNEXPECTED TOKEN>=call
  |-<UNEXPECTED TOKEN>= 
  |-<UNEXPECTED TOKEN>=$stringDiscriminant
  |-<UNEXPECTED TOKEN>=)
  |-<UNEXPECTED TOKEN>=

  |-<UNEXPECTED TOKEN>=      
  |-<UNEXPECTED TOKEN>=(
  |-<UNEXPECTED TOKEN>=i64
  |-<UNEXPECTED TOKEN>=.
  |-<UNEXPECTED TOKEN>=and
  |-<UNEXPECTED TOKEN>=

  |-<UNEXPECTED TOKEN>=        
  |-<UNEXPECTED TOKEN>=(
  |-<UNEXPECTED TOKEN>=i64
  |-<UNEXPECTED TOKEN>=.
  |-<UNEXPECTED TOKEN>=const
  |-<UNEXPECTED TOKEN>= 
  |-<UNEXPECTED TOKEN>=0xFFFFFFFF
  |-<UNEXPECTED TOKEN>=)
  |-<UNEXPECTED TOKEN>=

  |-<UNEXPECTED TOKEN>=        
  |-<UNEXPECTED TOKEN>=(
  |-<UNEXPECTED TOKEN>=i64
  |-<UNEXPECTED TOKEN>=.
  |-<UNEXPECTED TOKEN>=extend_u
  |-<UNEXPECTED TOKEN>=/
  |-<UNEXPECTED TOKEN>=i32
  |-<UNEXPECTED TOKEN>=

  |-<UNEXPECTED TOKEN>=          
  |-<UNEXPECTED TOKEN>=(
  |-<UNEXPECTED TOKEN>=i32
  |-<UNEXPECTED TOKEN>=.
  |-<UNEXPECTED TOKEN>=sub
  |-<UNEXPECTED TOKEN>=

  |-<UNEXPECTED TOKEN>=            
  |-<UNEXPECTED TOKEN>=(
  |-<UNEXPECTED TOKEN>=get_local
  |-<UNEXPECTED TOKEN>= 
  |-<UNEXPECTED TOKEN>=$bytesPointer
  |-<UNEXPECTED TOKEN>=)
  |-<UNEXPECTED TOKEN>=

  |-<UNEXPECTED TOKEN>=            
  |-<UNEXPECTED TOKEN>=(
  |-<UNEXPECTED TOKEN>=i32
  |-<UNEXPECTED TOKEN>=.
  |-<UNEXPECTED TOKEN>=const
  |-<UNEXPECTED TOKEN>= 
  |-<UNEXPECTED TOKEN>=4
  |-<UNEXPECTED TOKEN>=)
  |-<UNEXPECTED TOKEN>=)
  |-<UNEXPECTED TOKEN>=)
  |-<UNEXPECTED TOKEN>=)
  |-<UNEXPECTED TOKEN>=)
  |-<UNEXPECTED TOKEN>=

  |-<UNEXPECTED TOKEN>=  
  |-<UNEXPECTED TOKEN>=}
  |-<UNEXPECTED TOKEN>=


  |-<UNEXPECTED TOKEN>=  
  |-<UNEXPECTED TOKEN>=fun
  |-<UNEXPECTED TOKEN>= 
  |-<UNEXPECTED TOKEN>=toPtr
  |-<UNEXPECTED TOKEN>=(
  |-<UNEXPECTED TOKEN>=str
  |-<UNEXPECTED TOKEN>=:
  |-<UNEXPECTED TOKEN>= 
  |-<UNEXPECTED TOKEN>=string
  |-<UNEXPECTED TOKEN>=)
  |-<UNEXPECTED TOKEN>=:
  |-<UNEXPECTED TOKEN>= 
  |-<UNEXPECTED TOKEN>=UnsafeCPointer
  |-<UNEXPECTED TOKEN>= 
  |-<UNEXPECTED TOKEN>==
  |-<UNEXPECTED TOKEN>= 
  |-<UNEXPECTED TOKEN>=str
  |-<UNEXPECTED TOKEN>= 
  |-<UNEXPECTED TOKEN>=as
  |-<UNEXPECTED TOKEN>= 
  |-<UNEXPECTED TOKEN>=UnsafeCPointer
  |-<UNEXPECTED TOKEN>=

  |-<UNEXPECTED TOKEN>=}